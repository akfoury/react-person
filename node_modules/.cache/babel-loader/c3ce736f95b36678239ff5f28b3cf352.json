{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Documents\\\\react-person\\\\src\\\\components\\\\PersonList\\\\PersonList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport './PersonList.css';\nimport $ from \"jquery\";\nimport Scrollbars from 'react-custom-scrollbars';\nimport { putFormDataAsJson, deletePerson, getAllPersonSorteredByColumn } from '../../api/PersonAPI';\nimport { convertFormDataToObject } from '../../utils/FormData';\nimport { getListOfFilteredID } from '../../utils/ListFilter';\nimport { List, ListItem, ListItemSecondaryAction, ListItemText, IconButton, Grid, Typography, Button, Chip } from '@mui/material';\nimport { Close, FilterList, Send, Edit } from '@mui/icons-material'; // Initialisation des valeurs de filtres\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialFilteredPersonList = {\n  id: '',\n  firstname: '',\n  lastname: '',\n  address: '',\n  isActive: ''\n};\nconst initialSortPersonList = {\n  id: false,\n  firstname: false,\n  lastname: false,\n  address: false,\n  isActive: false\n};\nexport default function PersonList({\n  setPersonList,\n  personList\n}) {\n  _s();\n\n  const [editedRowIndex, setEditedRowIndex] = useState(null);\n  const [filterOptions, setFilterOptions] = useState(initialFilteredPersonList);\n  const [filteredListPerson, setFilteredListPerson] = useState([]);\n  const [sortColumnsStatus, setSortColumnsStatus] = useState(initialSortPersonList);\n  const [actualColumnSorted, setActualColumnSorted] = useState(\"id\"); // Gestion du state stockant les valeurs de filtrage\n\n  const handleFormFilterInput = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    setFilterOptions(prevState => {\n      return { ...prevState,\n        [name]: value\n      };\n    });\n  }; // permet de switcher sur le mode édition d'une ligne\n\n\n  const toggleIsEditing = e => {\n    if ($(e.currentTarget).attr('class').includes('editable-icon')) {\n      const personID = $(e.currentTarget).data(\"idEdit\");\n      const editableIndex = filteredListPerson.findIndex(item => parseInt(item.id) === parseInt(personID));\n      setEditedRowIndex(editableIndex);\n    }\n  }; // Element React pour la modification d'une ligne\n\n\n  const EditableRow = ({\n    value,\n    name,\n    type,\n    lastRow\n  }) => {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"flex-start\",\n          width: lastRow ? '70%' : '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          defaultValue: value,\n          name: name,\n          type: type,\n          style: {\n            border: '#008080 solid 0.5px',\n            width: '100%',\n            margin: '2px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this);\n  }; // Gérer le formulaire de la mise à jour d'une personne\n\n\n  const handleFormSubmit = async e => {\n    e.preventDefault(); // Récupérer les données du formulaire\n\n    const personID = $(e.currentTarget).find('.personID').find('input').attr('value');\n    const updateIndex = filteredListPerson.findIndex(item => parseInt(item.id) === parseInt(personID));\n    const url = `person/${personID}`;\n\n    try {\n      // Requête PUT\n      const {\n        formData,\n        _\n      } = convertFormDataToObject(e);\n      let responseData = await putFormDataAsJson({\n        formData,\n        url\n      }); // Mise à jour de la liste des utilisateurs\n\n      setPersonList(prevState => {\n        return [...prevState.slice(0, updateIndex), responseData, ...prevState.slice(updateIndex + 1)];\n      });\n      setEditedRowIndex(-1);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const sortColumn = col => {\n    setSortColumnsStatus(prevState => {\n      return { ...prevState,\n        [col]: !sortColumnsStatus[col]\n      };\n    });\n    console.log(col);\n    setActualColumnSorted(col);\n    $('.columnFilter').val(\"\");\n  }; // Initialisation du state stockant la liste filtrée\n\n\n  useEffect(() => {\n    setFilteredListPerson(personList);\n  }, [personList]); // Appel à l'algorithme à chaque fois qu'une valeur de filtrage change\n\n  useEffect(() => {\n    const filteredID = getListOfFilteredID(filterOptions, personList);\n\n    if (filteredID.length != 0) {\n      setFilteredListPerson(personList.filter((item, index) => filteredID.includes(String(item.id))));\n    }\n  }, [filterOptions]);\n  useEffect(() => {\n    if (sortColumnsStatus[actualColumnSorted]) {\n      getAllPersonSorteredByColumn(actualColumnSorted, \"desc\").then(data => {\n        setFilteredListPerson(data);\n      });\n    } else {\n      getAllPersonSorteredByColumn(actualColumnSorted, \"asc\").then(data => {\n        setFilteredListPerson(data);\n      });\n    }\n  }, [actualColumnSorted, sortColumnsStatus]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Scrollbars, {\n      style: {\n        width: '70%',\n        height: '100%'\n      },\n      renderTrackHorizontal: props => /*#__PURE__*/_jsxDEV(\"div\", { ...props,\n        style: {\n          display: 'none'\n        },\n        className: \"track-horizontal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 94\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 16,\n        md: 12,\n        children: /*#__PURE__*/_jsxDEV(List, {\n          className: \"list\",\n          children: [/*#__PURE__*/_jsxDEV(ListItem, {\n            className: \"list-item\",\n            style: {\n              backgroundColor: '#9AC2C980'\n            },\n            children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n              disableTypography: true,\n              primary: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"body2\",\n                style: {\n                  fontWeight: 700,\n                  width: 10,\n                  color: '#004040'\n                },\n                onClick: () => sortColumn(\"id\"),\n                endIcon: /*#__PURE__*/_jsxDEV(FilterList, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 158\n                }, this),\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 38\n              }, this),\n              className: \"list-item-text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              disableTypography: true,\n              primary: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"body2\",\n                style: {\n                  fontWeight: 700,\n                  width: 10,\n                  color: '#004040'\n                },\n                onClick: () => sortColumn(\"firstname\"),\n                endIcon: /*#__PURE__*/_jsxDEV(FilterList, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 165\n                }, this),\n                children: \"Pr\\xE9nom\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 38\n              }, this),\n              className: \"list-item-text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              disableTypography: true,\n              primary: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"body2\",\n                style: {\n                  fontWeight: 700,\n                  width: 10,\n                  color: '#004040'\n                },\n                onClick: () => sortColumn(\"lastname\"),\n                endIcon: /*#__PURE__*/_jsxDEV(FilterList, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 164\n                }, this),\n                children: \"Nom\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 38\n              }, this),\n              className: \"list-item-text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              disableTypography: true,\n              primary: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"body2\",\n                style: {\n                  fontWeight: 700,\n                  width: 10,\n                  color: '#004040'\n                },\n                onClick: () => sortColumn(\"address\"),\n                endIcon: /*#__PURE__*/_jsxDEV(FilterList, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 163\n                }, this),\n                children: \"Adresse\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 38\n              }, this),\n              className: \"list-item-text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              disableTypography: true,\n              primary: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"body2\",\n                style: {\n                  fontWeight: 700,\n                  width: 10,\n                  color: '#004040',\n                  paddingRight: 30\n                },\n                onClick: () => sortColumn(\"isActive\"),\n                endIcon: /*#__PURE__*/_jsxDEV(FilterList, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 182\n                }, this),\n                children: \"Actif\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 38\n              }, this),\n              className: \"list-item-text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                edge: \"end\",\n                \"aria-label\": \"delete\",\n                type: \"submit\",\n                children: /*#__PURE__*/_jsxDEV(Send, {\n                  style: {\n                    display: \"none\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                edge: \"end\",\n                \"aria-label\": \"delete\",\n                type: \"submit\",\n                children: /*#__PURE__*/_jsxDEV(Send, {\n                  style: {\n                    display: \"none\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"filterForm\",\n            children: /*#__PURE__*/_jsxDEV(ListItem, {\n              className: \"list-item\",\n              children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                disableTypography: true,\n                primary: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: \"flex\",\n                    justifyContent: \"flex-start\",\n                    width: '100%'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"MuiTypography-root MuiTypography-h7 MuiTypography-displayInline columnFilter\",\n                    defaultValue: filterOptions[\"id\"],\n                    onChange: handleFormFilterInput,\n                    name: \"id\",\n                    style: {\n                      border: '#008080 solid 0.5px',\n                      width: '100%',\n                      margin: '2px'\n                    },\n                    placeholder: \"Filtrer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 33\n                }, this),\n                className: \"list-item-text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                disableTypography: true,\n                primary: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: \"flex\",\n                    justifyContent: \"flex-start\",\n                    width: '100%'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"MuiTypography-root MuiTypography-h7 MuiTypography-displayInline columnFilter\",\n                    defaultValue: filterOptions[\"firstname\"],\n                    onChange: handleFormFilterInput,\n                    name: \"firstname\",\n                    style: {\n                      border: '#008080 solid 0.5px',\n                      width: '100%',\n                      margin: '2px'\n                    },\n                    placeholder: \"Filtrer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 33\n                }, this),\n                className: \"list-item-text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                disableTypography: true,\n                primary: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: \"flex\",\n                    justifyContent: \"flex-start\",\n                    width: '100%'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"MuiTypography-root MuiTypography-h7 MuiTypography-displayInline columnFilter\",\n                    defaultValue: filterOptions[\"lastname\"],\n                    onChange: handleFormFilterInput,\n                    name: \"lastname\",\n                    style: {\n                      border: '#008080 solid 0.5px',\n                      width: '100%',\n                      margin: '2px'\n                    },\n                    placeholder: \"Filtrer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 33\n                }, this),\n                className: \"list-item-text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                disableTypography: true,\n                primary: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: \"flex\",\n                    justifyContent: \"flex-start\",\n                    width: '100%'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"MuiTypography-root MuiTypography-h7 MuiTypography-displayInline columnFilter\",\n                    defaultValue: filterOptions[\"address\"],\n                    onChange: handleFormFilterInput,\n                    name: \"address\",\n                    style: {\n                      border: '#008080 solid 0.5px',\n                      width: '100%',\n                      margin: '2px'\n                    },\n                    placeholder: \"Filtrer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 33\n                }, this),\n                className: \"list-item-text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                disableTypography: true,\n                primary: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: \"flex\",\n                    justifyContent: \"flex-start\",\n                    width: '70%'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"MuiTypography-root MuiTypography-h7 MuiTypography-displayInline columnFilter\",\n                    defaultValue: filterOptions[\"isActive\"],\n                    onChange: handleFormFilterInput,\n                    name: \"isActive\",\n                    style: {\n                      border: '#008080 solid 0.5px',\n                      width: '100%',\n                      margin: '2px'\n                    },\n                    placeholder: \"Filtrer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 33\n                }, this),\n                className: \"list-item-text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 21\n          }, this), filteredListPerson.map((item, index) => index === editedRowIndex ? /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"editForm\",\n            onSubmit: handleFormSubmit,\n            children: /*#__PURE__*/_jsxDEV(ListItem, {\n              className: \"list-item\",\n              children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                disableTypography: true,\n                primary: /*#__PURE__*/_jsxDEV(EditableRow, {\n                  value: item.id,\n                  name: \"id\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 46\n                }, this),\n                className: \"list-item-text personID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                disableTypography: true,\n                primary: /*#__PURE__*/_jsxDEV(EditableRow, {\n                  value: item.firstname,\n                  name: \"firstname\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 46\n                }, this),\n                className: \"list-item-text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                disableTypography: true,\n                primary: /*#__PURE__*/_jsxDEV(EditableRow, {\n                  value: item.lastname,\n                  name: \"lastname\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 46\n                }, this),\n                className: \"list-item-text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                disableTypography: true,\n                primary: /*#__PURE__*/_jsxDEV(EditableRow, {\n                  value: item.address,\n                  name: \"address\",\n                  type: \"email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 46\n                }, this),\n                className: \"list-item-text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                disableTypography: true,\n                primary: /*#__PURE__*/_jsxDEV(EditableRow, {\n                  value: item.isActive,\n                  name: \"isActive\",\n                  lastRow: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 46\n                }, this),\n                className: \"list-item-text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  edge: \"end\",\n                  \"aria-label\": \"edit\",\n                  type: \"submit\",\n                  children: /*#__PURE__*/_jsxDEV(Send, {\n                    style: {\n                      fill: \"#008080\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 301,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(ListItem, {\n            className: \"list-item\",\n            children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n              disableTypography: true,\n              primary: /*#__PURE__*/_jsxDEV(Typography, {\n                type: \"body2\",\n                children: item.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 38\n              }, this),\n              className: \"list-item-text personID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              disableTypography: true,\n              primary: /*#__PURE__*/_jsxDEV(Typography, {\n                type: \"body2\",\n                children: item.firstname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 38\n              }, this),\n              className: \"list-item-text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              disableTypography: true,\n              primary: /*#__PURE__*/_jsxDEV(Typography, {\n                type: \"body2\",\n                children: item.lastname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 38\n              }, this),\n              className: \"list-item-text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              disableTypography: true,\n              primary: /*#__PURE__*/_jsxDEV(Typography, {\n                type: \"body2\",\n                children: item.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 38\n              }, this),\n              className: \"list-item-text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              disableTypography: true,\n              primary: parseInt(item.isActive) ? /*#__PURE__*/_jsxDEV(Chip, {\n                style: {\n                  backgroundColor: 'rgba(53, 219, 94, 0.8)',\n                  color: 'white',\n                  fontWeight: 700\n                },\n                label: \"Actif\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 64\n              }, this) : /*#__PURE__*/_jsxDEV(Chip, {\n                style: {\n                  backgroundColor: 'rgba(209, 42, 23, 0.8)',\n                  color: 'white',\n                  fontWeight: 700\n                },\n                label: \"Inactif\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 174\n              }, this),\n              className: \"list-item-text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                edge: \"end\",\n                \"aria-label\": \"edit\",\n                children: /*#__PURE__*/_jsxDEV(Edit, {\n                  style: {\n                    fill: \"#008080\"\n                  },\n                  onClick: toggleIsEditing,\n                  className: \"editable-icon\",\n                  \"data-idEdit\": item.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                edge: \"end\",\n                \"aria-label\": \"delete\",\n                children: /*#__PURE__*/_jsxDEV(Close, {\n                  style: {\n                    fill: \"#008080\"\n                  },\n                  onClick: e => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    const personID = $(e.currentTarget).data(\"idDelete\");\n                    console.log(personID);\n                    deletePerson(personID).then(() => {\n                      // Récuperer l'index de l'élément à supprimer\n                      const removeIndex = filteredListPerson.findIndex(item => item.id === parseInt(personID)); // Faire une copie du state\n\n                      const newArray = [...filteredListPerson]; // Supprimer l'élément du nouveau tableau\n\n                      newArray.splice(removeIndex, 1); // Mettre à jour le state\n\n                      setFilteredListPerson(newArray);\n                    });\n                  },\n                  \"data-idDelete\": item.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 21\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(PersonList, \"23KhZQDHFmSVdN/mo85NwkKCMK4=\");\n\n_c = PersonList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PersonList\");","map":{"version":3,"sources":["C:/Users/Alex/Documents/react-person/src/components/PersonList/PersonList.js"],"names":["React","useState","useEffect","$","Scrollbars","putFormDataAsJson","deletePerson","getAllPersonSorteredByColumn","convertFormDataToObject","getListOfFilteredID","List","ListItem","ListItemSecondaryAction","ListItemText","IconButton","Grid","Typography","Button","Chip","Close","FilterList","Send","Edit","initialFilteredPersonList","id","firstname","lastname","address","isActive","initialSortPersonList","PersonList","setPersonList","personList","editedRowIndex","setEditedRowIndex","filterOptions","setFilterOptions","filteredListPerson","setFilteredListPerson","sortColumnsStatus","setSortColumnsStatus","actualColumnSorted","setActualColumnSorted","handleFormFilterInput","e","value","name","target","prevState","toggleIsEditing","currentTarget","attr","includes","personID","data","editableIndex","findIndex","item","parseInt","EditableRow","type","lastRow","display","justifyContent","width","border","margin","handleFormSubmit","preventDefault","find","updateIndex","url","formData","_","responseData","slice","error","console","sortColumn","col","log","val","filteredID","length","filter","index","String","then","height","props","backgroundColor","fontWeight","color","paddingRight","map","fill","stopPropagation","removeIndex","newArray","splice"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport './PersonList.css';\r\nimport $ from \"jquery\";\r\nimport Scrollbars from 'react-custom-scrollbars';\r\nimport { putFormDataAsJson, deletePerson, getAllPersonSorteredByColumn } from '../../api/PersonAPI';\r\nimport { convertFormDataToObject } from '../../utils/FormData';\r\nimport { getListOfFilteredID } from '../../utils/ListFilter';\r\nimport {\r\n    List,\r\n    ListItem,\r\n    ListItemSecondaryAction,\r\n    ListItemText,\r\n    IconButton,\r\n    Grid,\r\n    Typography,\r\n    Button,\r\n    Chip\r\n} from '@mui/material';\r\nimport {\r\n    Close,\r\n    FilterList,\r\n    Send,\r\n    Edit\r\n} from '@mui/icons-material';\r\n\r\n\r\n// Initialisation des valeurs de filtres\r\nconst initialFilteredPersonList = {\r\n    id: '',\r\n    firstname: '',\r\n    lastname: '',\r\n    address: '',\r\n    isActive: ''\r\n}\r\n\r\nconst initialSortPersonList = {\r\n    id: false,\r\n    firstname: false,\r\n    lastname: false,\r\n    address: false,\r\n    isActive: false\r\n}\r\n\r\nexport default function PersonList({ setPersonList, personList }) {\r\n    const [editedRowIndex, setEditedRowIndex] = useState(null);\r\n    const [filterOptions, setFilterOptions]  = useState(initialFilteredPersonList);\r\n    const [filteredListPerson, setFilteredListPerson] = useState([]);\r\n    const [sortColumnsStatus, setSortColumnsStatus] = useState(initialSortPersonList);\r\n    const [actualColumnSorted, setActualColumnSorted] = useState(\"id\");\r\n\r\n    // Gestion du state stockant les valeurs de filtrage\r\n    const handleFormFilterInput = (e) => {\r\n        const { value, name } = e.target;\r\n        setFilterOptions(prevState => {\r\n            return {...prevState, [name]: value}\r\n        });\r\n    }\r\n\r\n    // permet de switcher sur le mode édition d'une ligne\r\n    const toggleIsEditing = (e) => {\r\n        if ($(e.currentTarget).attr('class').includes('editable-icon')) {\r\n            const personID = $(e.currentTarget).data(\"idEdit\");\r\n            const editableIndex = filteredListPerson.findIndex(item => parseInt(item.id) === parseInt(personID));\r\n            setEditedRowIndex(editableIndex);\r\n        }\r\n    }   \r\n\r\n    // Element React pour la modification d'une ligne\r\n    const EditableRow = ({ value, name, type, lastRow }) => {\r\n        return (\r\n            <React.Fragment>\r\n            <div style={{ display: \"flex\", justifyContent: \"flex-start\", width: lastRow ? '70%' : '100%' }}>\r\n                <input\r\n                    defaultValue={value}\r\n                    name={name}\r\n                    type={type}\r\n                    style={{border: '#008080 solid 0.5px', width: '100%', margin: '2px'}}\r\n                />\r\n            </div>\r\n            </React.Fragment>\r\n        )\r\n    };\r\n\r\n    // Gérer le formulaire de la mise à jour d'une personne\r\n    const handleFormSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Récupérer les données du formulaire\r\n        const personID = $(e.currentTarget).find('.personID').find('input').attr('value');\r\n        const updateIndex = filteredListPerson.findIndex(item => parseInt(item.id) === parseInt(personID));\r\n        const url = `person/${personID}`;\r\n\r\n        try {\r\n            // Requête PUT\r\n            const { formData, _} = convertFormDataToObject(e);\r\n            let responseData = await putFormDataAsJson({ formData, url });\r\n\r\n            // Mise à jour de la liste des utilisateurs\r\n            setPersonList(prevState => {\r\n                return  [...prevState.slice(0, updateIndex), responseData, ...prevState.slice(updateIndex + 1)];\r\n            });\r\n\r\n            setEditedRowIndex(-1);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    const sortColumn = (col) => {\r\n        setSortColumnsStatus(prevState => {\r\n            return {...prevState, [col]: !sortColumnsStatus[col]}\r\n        });\r\n        console.log(col);\r\n        setActualColumnSorted(col);\r\n        $('.columnFilter').val(\"\");\r\n    }\r\n\r\n    // Initialisation du state stockant la liste filtrée\r\n    useEffect(() => {\r\n        setFilteredListPerson(personList);\r\n    }, [personList]);\r\n\r\n    // Appel à l'algorithme à chaque fois qu'une valeur de filtrage change\r\n    useEffect(() => {\r\n        const filteredID = getListOfFilteredID(filterOptions, personList);\r\n        if (filteredID.length != 0) {\r\n            setFilteredListPerson(personList.filter((item, index) => filteredID.includes(String(item.id))));\r\n        }\r\n    }, [filterOptions]);\r\n\r\n    useEffect(() => {\r\n        if (sortColumnsStatus[actualColumnSorted]) {\r\n            getAllPersonSorteredByColumn(actualColumnSorted, \"desc\").then(data => {\r\n                setFilteredListPerson(data);\r\n            }); \r\n        } else {\r\n            getAllPersonSorteredByColumn(actualColumnSorted, \"asc\").then(data => {\r\n                setFilteredListPerson(data);\r\n            }); \r\n        }\r\n    }, [actualColumnSorted, sortColumnsStatus]);\r\n\r\n\r\n    return (\r\n        <>\r\n        <Scrollbars style={{ width: '70%', height: '100%' }} renderTrackHorizontal={props => <div {...props} style={{display: 'none'}} className=\"track-horizontal\"/>}>\r\n          <Grid item xs={16} md={12}>\r\n              <List className='list'>\r\n                    <ListItem className='list-item' style={{ backgroundColor: '#9AC2C980' }}>\r\n                        <ListItemText\r\n                            disableTypography\r\n                            primary={<Button type=\"body2\" style={{ fontWeight: 700, width: 10, color: '#004040' }} onClick={() => sortColumn(\"id\")} endIcon={<FilterList />}>ID</Button>}\r\n                            className='list-item-text'\r\n                        />\r\n                        <ListItemText\r\n                            disableTypography\r\n                            primary={<Button type=\"body2\" style={{ fontWeight: 700, width: 10, color: '#004040' }} onClick={() => sortColumn(\"firstname\")} endIcon={<FilterList />}>Prénom</Button>}\r\n                            className='list-item-text'\r\n                        />\r\n                        <ListItemText\r\n                            disableTypography\r\n                            primary={<Button type=\"body2\" style={{ fontWeight: 700, width: 10, color: '#004040' }} onClick={() => sortColumn(\"lastname\")} endIcon={<FilterList />}>Nom</Button>}\r\n                            className='list-item-text'\r\n                        />\r\n                        <ListItemText\r\n                            disableTypography\r\n                            primary={<Button type=\"body2\" style={{ fontWeight: 700, width: 10, color: '#004040' }} onClick={() => sortColumn(\"address\")} endIcon={<FilterList />}>Adresse</Button>}\r\n                            className='list-item-text'\r\n                        />\r\n                        <ListItemText\r\n                            disableTypography\r\n                            primary={<Button type=\"body2\" style={{ fontWeight: 700, width: 10, color: '#004040', paddingRight: 30 }} onClick={() => sortColumn(\"isActive\")} endIcon={<FilterList />}>Actif</Button>}\r\n                            className='list-item-text'\r\n                        />\r\n                        <ListItemSecondaryAction>\r\n                            <IconButton edge=\"end\" aria-label=\"delete\" type=\"submit\">\r\n                                <Send \r\n                                    style={{display: \"none\"}} \r\n                                />\r\n                            </IconButton>\r\n                        </ListItemSecondaryAction>\r\n                        <ListItemSecondaryAction>\r\n                            <IconButton edge=\"end\" aria-label=\"delete\" type=\"submit\">\r\n                                <Send \r\n                                    style={{display: \"none\"}} \r\n                                />\r\n                            </IconButton>\r\n                        </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                    <form className=\"filterForm\">\r\n                        <ListItem className='list-item'>\r\n                            <ListItemText\r\n                                disableTypography\r\n                                primary={\r\n                                <div style={{ display: \"flex\", justifyContent: \"flex-start\", width: '100%' }}>\r\n                                    <input\r\n                                        className=\"MuiTypography-root MuiTypography-h7 MuiTypography-displayInline columnFilter\"\r\n                                        defaultValue={filterOptions[\"id\"]}\r\n                                        onChange={handleFormFilterInput}\r\n                                        name=\"id\"\r\n                                        style={{border: '#008080 solid 0.5px', width: '100%', margin: '2px'}}\r\n                                        placeholder=\"Filtrer\"\r\n                                    />\r\n                                </div>}\r\n                                className='list-item-text'\r\n                            />\r\n                            <ListItemText\r\n                                disableTypography\r\n                                primary={\r\n                                <div style={{ display: \"flex\", justifyContent: \"flex-start\", width: '100%' }}>\r\n                                    <input\r\n                                        className=\"MuiTypography-root MuiTypography-h7 MuiTypography-displayInline columnFilter\"\r\n                                        defaultValue={filterOptions[\"firstname\"]}\r\n                                        onChange={handleFormFilterInput}\r\n                                        name=\"firstname\"\r\n                                        style={{border: '#008080 solid 0.5px', width: '100%', margin: '2px'}}\r\n                                        placeholder=\"Filtrer\"\r\n                                    />\r\n                                </div>}\r\n                                className='list-item-text'\r\n                            />\r\n                            <ListItemText\r\n                                disableTypography\r\n                                primary={\r\n                                <div style={{ display: \"flex\", justifyContent: \"flex-start\", width: '100%' }}>\r\n                                    <input\r\n                                        className=\"MuiTypography-root MuiTypography-h7 MuiTypography-displayInline columnFilter\"\r\n                                        defaultValue={filterOptions[\"lastname\"]}\r\n                                        onChange={handleFormFilterInput}\r\n                                        name=\"lastname\"\r\n                                        style={{border: '#008080 solid 0.5px', width: '100%', margin: '2px'}}\r\n                                        placeholder=\"Filtrer\"\r\n                                    />\r\n                                </div>}\r\n                                className='list-item-text'\r\n                            />\r\n                            <ListItemText\r\n                                disableTypography\r\n                                primary={\r\n                                <div style={{ display: \"flex\", justifyContent: \"flex-start\", width: '100%' }}>\r\n                                    <input\r\n                                        className=\"MuiTypography-root MuiTypography-h7 MuiTypography-displayInline columnFilter\"\r\n                                        defaultValue={filterOptions[\"address\"]}\r\n                                        onChange={handleFormFilterInput}\r\n                                        name=\"address\"\r\n                                        style={{border: '#008080 solid 0.5px', width: '100%', margin: '2px'}}\r\n                                        placeholder=\"Filtrer\"    \r\n                                    />\r\n                                </div>}\r\n                                className='list-item-text'\r\n                            />\r\n                            <ListItemText\r\n                                disableTypography\r\n                                primary={\r\n                                <div style={{ display: \"flex\", justifyContent: \"flex-start\", width: '70%' }}>\r\n                                    <input\r\n                                        className=\"MuiTypography-root MuiTypography-h7 MuiTypography-displayInline columnFilter\"\r\n                                        defaultValue={filterOptions[\"isActive\"]}\r\n                                        onChange={handleFormFilterInput}\r\n                                        name=\"isActive\"\r\n                                        style={{border: '#008080 solid 0.5px', width: '100%', margin: '2px'}}\r\n                                        placeholder=\"Filtrer\"\r\n                                    />\r\n                                </div>}\r\n                                className='list-item-text'\r\n                            />\r\n                        </ListItem>\r\n                    </form>\r\n                {filteredListPerson.map((item, index) => (\r\n                    index === editedRowIndex ? ( \r\n                        <form className=\"editForm\" onSubmit={handleFormSubmit}>\r\n                            <ListItem className='list-item'>\r\n                                <ListItemText\r\n                                    disableTypography\r\n                                    primary={<EditableRow value={item.id} name=\"id\" />}\r\n                                    className='list-item-text personID'\r\n                                />\r\n                                <ListItemText\r\n                                    disableTypography\r\n                                    primary={<EditableRow value={item.firstname} name=\"firstname\" />}\r\n                                    className='list-item-text'\r\n                                />\r\n                                <ListItemText\r\n                                    disableTypography\r\n                                    primary={<EditableRow value={item.lastname} name=\"lastname\" />}\r\n                                    className='list-item-text'\r\n                                />\r\n                                <ListItemText\r\n                                    disableTypography\r\n                                    primary={<EditableRow value={item.address} name=\"address\" type={\"email\"}/>}\r\n                                    className='list-item-text'\r\n                                />\r\n                                <ListItemText\r\n                                    disableTypography\r\n                                    primary={<EditableRow value={item.isActive} name=\"isActive\" lastRow={true} />}\r\n                                    className='list-item-text'\r\n                                />\r\n                                <ListItemSecondaryAction>\r\n                                    <IconButton edge=\"end\" aria-label=\"edit\" type=\"submit\">\r\n                                        <Send \r\n                                            style={{fill: \"#008080\"}} \r\n                                        />\r\n                                    </IconButton>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                       </form>\r\n                        ) : (\r\n                    <ListItem className='list-item'>\r\n                            <ListItemText\r\n                            disableTypography\r\n                            primary={<Typography type=\"body2\">{item.id}</Typography>}\r\n                            className='list-item-text personID'\r\n                            />\r\n                            <ListItemText\r\n                            disableTypography\r\n                            primary={<Typography type=\"body2\" >{item.firstname}</Typography>}\r\n                            className='list-item-text'\r\n                            />\r\n                            <ListItemText\r\n                            disableTypography\r\n                            primary={<Typography type=\"body2\">{item.lastname}</Typography>}\r\n                            className='list-item-text'\r\n                            />\r\n                            <ListItemText\r\n                            disableTypography\r\n                            primary={<Typography type=\"body2\">{item.address}</Typography>}\r\n                            className='list-item-text'\r\n                            />\r\n                            <ListItemText\r\n                            disableTypography\r\n                            primary={parseInt(item.isActive) ? <Chip style={{backgroundColor: 'rgba(53, 219, 94, 0.8)', color: 'white', fontWeight: 700}} label=\"Actif\" /> : <Chip style={{backgroundColor: 'rgba(209, 42, 23, 0.8)', color: 'white', fontWeight: 700}} label=\"Inactif\" />}\r\n                            className='list-item-text'\r\n                            />\r\n                        <ListItemSecondaryAction>\r\n                        <IconButton edge=\"end\" aria-label=\"edit\">\r\n                            <Edit \r\n                                style={{fill: \"#008080\"}} \r\n                                onClick={toggleIsEditing}\r\n                                className=\"editable-icon\"\r\n                                data-idEdit={item.id} \r\n                            />\r\n                        </IconButton>\r\n                        <IconButton edge=\"end\" aria-label=\"delete\">\r\n                            <Close \r\n                                style={{fill: \"#008080\"}} \r\n                                onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    e.stopPropagation();\r\n                                    const personID = $(e.currentTarget).data(\"idDelete\");\r\n                                    console.log(personID);\r\n                                    deletePerson(personID).then(() => {\r\n                                        // Récuperer l'index de l'élément à supprimer\r\n                                        const removeIndex = filteredListPerson.findIndex(item => item.id === parseInt(personID));\r\n                                    \r\n                                        // Faire une copie du state\r\n                                        const newArray = [...filteredListPerson];\r\n                                    \r\n                                        // Supprimer l'élément du nouveau tableau\r\n                                        newArray.splice(removeIndex, 1);\r\n                                    \r\n                                        // Mettre à jour le state\r\n                                        setFilteredListPerson(newArray);\r\n                                    });\r\n                                }}\r\n                                data-idDelete={item.id}\r\n                            />\r\n                        </IconButton>\r\n                        </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                    )\r\n                ))}\r\n              </List>\r\n          </Grid>\r\n        </Scrollbars>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}