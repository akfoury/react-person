{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Documents\\\\react-person\\\\src\\\\components\\\\PersonList\\\\PersonList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport './PersonList.css';\nimport $ from \"jquery\";\nimport Scrollbars from 'react-custom-scrollbars';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SendIcon from '@material-ui/icons/Send';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 0.5,\n    maxWidth: 300\n  },\n  listItem: {\n    backgroundColor: 'none',\n    \"&:hover\": {\n      backgroundColor: 'rgba(0,0,0,0.05);',\n      cursor: 'pointer'\n    },\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  listItemText: {\n    display: 'flex',\n    justifyContent: 'left'\n  },\n  button: {\n    margin: theme.spacing(1),\n    [theme.breakpoints.down(\"sm\")]: {\n      minWidth: 32,\n      paddingLeft: 8,\n      paddingRight: 8,\n      marginBottom: 40,\n      cursor: \"pointer\",\n      \"& .MuiButton-startIcon\": {\n        margin: 0\n      }\n    }\n  },\n  buttonText: {\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\"\n    },\n    display: \"flex\",\n    marginRight: 5\n  },\n  List: {\n    padding: 0\n  }\n}));\nexport default function PersonList({\n  setPersonList,\n  personList\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [editedRowIndex, setEditedRowIndex] = useState(null);\n\n  const filterCaseAccentInsensitive = (filter, row) => {\n    const id = filter.pivotId || filter.id;\n    const content = row[id];\n\n    if (typeof content !== 'undefined') {\n      // filter by text in the table or if it's a object, filter by key\n      if (typeof content === 'object' && content !== null && content.key) {\n        return String(content.key).toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\").includes(filter.value.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\"));\n      } else {\n        return String(content).toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\").includes(filter.value.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\"));\n      }\n    }\n\n    return true;\n  }; // peremt de switcher sur le mode édition d'une ligne\n\n\n  const toggleIsEditing = e => {\n    if ($(e.currentTarget).attr('class').includes('editableIcon')) {\n      const personID = $($(e.currentTarget).parents()[3]).find('.personID').text();\n      const editableIndex = personList.findIndex(item => parseInt(item.id) === parseInt(personID));\n      setEditedRowIndex(editableIndex);\n    }\n  }; // Element React pour la modification d'une ligne\n\n\n  const EditableRow = ({\n    value,\n    name\n  }) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"MuiTypography-root MuiTypography-h7 MuiTypography-displayInline\",\n        defaultValue: value,\n        onChange: e => e.target.value,\n        name: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        style: {\n          display: \"none\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this); // Supprimer une personne de la liste\n\n\n  const deleteRow = e => {\n    // Supprimer l'élément dans la base de données\n    const personID = $($(e.currentTarget).parents()[3]).find('.personID').text();\n    const myInit = {\n      method: 'DELETE'\n    };\n    fetch(`person/${personID}`, myInit).then(() => {\n      // Récuperer l'index de l'élément à supprimer\n      const removeIndex = personList.findIndex(item => item.id === parseInt(personID)); // Faire une copie du state\n\n      const newArray = [...personList]; // Supprimer l'élément du nouveau tableau\n\n      newArray.splice(removeIndex, 1); // Mettre à jour le state\n\n      setPersonList(newArray);\n    });\n  }; // Convertir les données du formulaire sous la forme d'un objet js\n\n\n  const convertFormDataToObject = e => {\n    const form = e.currentTarget;\n    return new FormData(form);\n  }; // Gérer le formulaire de la mise à jour d'une personne\n\n\n  const handleFormSubmit = async e => {\n    e.preventDefault(); // Récupérer les données du formulaire\n\n    const personID = $(e.currentTarget).find('.personID').find('input').attr('value');\n    const updateIndex = personList.findIndex(item => parseInt(item.id) === parseInt(personID));\n    const url = `person/${personID}`;\n\n    try {\n      // Requête PUT\n      const formData = convertFormDataToObject(e);\n      let responseData = await putFormDataAsJson({\n        url,\n        formData\n      }); // Mise à jour de la liste des utilisateurs\n\n      setPersonList(prevState => {\n        return [...prevState.slice(0, updateIndex), responseData, ...prevState.slice(updateIndex + 1)];\n      });\n      setEditedRowIndex(-1);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const putFormDataAsJson = async ({\n    url,\n    formData\n  }) => {\n    const plainFormData = Object.fromEntries(formData.entries());\n    const formDataJsonString = JSON.stringify(plainFormData);\n    const fetchOptions = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: formDataJsonString\n    };\n    const response = await fetch(url, fetchOptions);\n\n    if (!response.ok) {\n      const errorMessage = await response.text();\n      throw new Error(errorMessage);\n    }\n\n    return response.json();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Scrollbars, {\n      style: {\n        width: '70%',\n        height: '100%'\n      },\n      renderTrackHorizontal: props => /*#__PURE__*/_jsxDEV(\"div\", { ...props,\n        style: {\n          display: 'none'\n        },\n        className: \"track-horizontal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 94\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 16,\n        md: 12,\n        children: /*#__PURE__*/_jsxDEV(List, {\n          className: classes.List,\n          children: [/*#__PURE__*/_jsxDEV(ListItem, {\n            className: classes.listItem,\n            style: {\n              backgroundColor: 'B9D8C2',\n              position: 'fixed',\n              width: \"70%\",\n              paddingBottom: 100\n            },\n            children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n              disableTypography: true,\n              primary: /*#__PURE__*/_jsxDEV(Typography, {\n                type: \"body2\",\n                style: {\n                  fontWeight: 700,\n                  width: 10\n                },\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 38\n              }, this),\n              className: classes.listItemText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              disableTypography: true,\n              primary: /*#__PURE__*/_jsxDEV(Typography, {\n                type: \"body2\",\n                style: {\n                  fontWeight: 700,\n                  width: 10\n                },\n                children: \"Pr\\xE9nom\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 38\n              }, this),\n              className: classes.listItemText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              disableTypography: true,\n              primary: /*#__PURE__*/_jsxDEV(Typography, {\n                type: \"body2\",\n                style: {\n                  fontWeight: 700,\n                  width: 10\n                },\n                children: \"Nom\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 38\n              }, this),\n              className: classes.listItemText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              disableTypography: true,\n              primary: /*#__PURE__*/_jsxDEV(Typography, {\n                type: \"body2\",\n                style: {\n                  fontWeight: 700,\n                  width: 10\n                },\n                children: \"Adresse\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 38\n              }, this),\n              className: classes.listItemText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              disableTypography: true,\n              primary: /*#__PURE__*/_jsxDEV(Typography, {\n                type: \"body2\",\n                style: {\n                  fontWeight: 700,\n                  width: 10\n                },\n                children: \"Actif\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 38\n              }, this),\n              className: classes.listItemText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 17\n          }, this), personList.map((item, index) => index === editedRowIndex ? /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"editForm\",\n            onSubmit: handleFormSubmit,\n            children: /*#__PURE__*/_jsxDEV(ListItem, {\n              className: classes.listItem,\n              children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                disableTypography: true,\n                primary: /*#__PURE__*/_jsxDEV(EditableRow, {\n                  value: item.id,\n                  name: \"id\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 46\n                }, this),\n                className: `${classes.listItemText} personID`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                disableTypography: true,\n                primary: /*#__PURE__*/_jsxDEV(EditableRow, {\n                  value: item.firstname,\n                  name: \"firstname\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 46\n                }, this),\n                className: classes.listItemText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                disableTypography: true,\n                primary: /*#__PURE__*/_jsxDEV(EditableRow, {\n                  value: item.lastname,\n                  name: \"lastname\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 46\n                }, this),\n                className: classes.listItemText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                disableTypography: true,\n                primary: /*#__PURE__*/_jsxDEV(EditableRow, {\n                  value: item.address,\n                  name: \"address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 46\n                }, this),\n                className: classes.listItemText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                disableTypography: true,\n                primary: /*#__PURE__*/_jsxDEV(EditableRow, {\n                  value: item.isActive,\n                  name: \"isActive\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 46\n                }, this),\n                className: classes.listItemText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  edge: \"end\",\n                  \"aria-label\": \"delete\",\n                  type: \"submit\",\n                  children: /*#__PURE__*/_jsxDEV(SendIcon, {\n                    style: {\n                      fill: \"#3f51b5\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(ListItem, {\n            className: classes.listItem,\n            children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n              disableTypography: true,\n              primary: /*#__PURE__*/_jsxDEV(Typography, {\n                type: \"body2\",\n                style: {\n                  fontWeight: 700,\n                  width: 10\n                },\n                children: item.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 37\n              }, this),\n              className: `${classes.listItemText} personID`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              disableTypography: true,\n              primary: /*#__PURE__*/_jsxDEV(Typography, {\n                type: \"body2\",\n                style: {\n                  fontWeight: 700,\n                  width: 10\n                },\n                children: item.firstname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 37\n              }, this),\n              className: classes.listItemText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              disableTypography: true,\n              primary: /*#__PURE__*/_jsxDEV(Typography, {\n                type: \"body2\",\n                style: {\n                  fontWeight: 700,\n                  width: 10\n                },\n                children: item.lastname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 37\n              }, this),\n              className: classes.listItemText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 26\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              disableTypography: true,\n              primary: /*#__PURE__*/_jsxDEV(Typography, {\n                type: \"body2\",\n                style: {\n                  fontWeight: 700,\n                  width: 10\n                },\n                children: item.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 37\n              }, this),\n              className: classes.listItemText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              disableTypography: true,\n              primary: /*#__PURE__*/_jsxDEV(Typography, {\n                type: \"body2\",\n                style: {\n                  fontWeight: 700,\n                  width: 10\n                },\n                children: item.isActive\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 37\n              }, this),\n              className: classes.listItemText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                edge: \"end\",\n                \"aria-label\": \"delete\",\n                children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n                  style: {\n                    fill: \"#3f51b5\"\n                  },\n                  onClick: e => {\n                    deleteRow(e);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 28\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 24\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                edge: \"end\",\n                \"aria-label\": \"edit\",\n                children: /*#__PURE__*/_jsxDEV(EditIcon, {\n                  style: {\n                    fill: \"#3f51b5\"\n                  },\n                  onClick: toggleIsEditing,\n                  className: \"editableIcon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 28\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 24\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 24\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 21\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(PersonList, \"PQ4HSlR3QNG9IBUGnic2xN16Vnc=\", false, function () {\n  return [useStyles];\n});\n\n_c = PersonList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PersonList\");","map":{"version":3,"sources":["C:/Users/Alex/Documents/react-person/src/components/PersonList/PersonList.js"],"names":["React","useState","$","Scrollbars","makeStyles","List","ListItem","ListItemSecondaryAction","ListItemText","IconButton","Grid","Typography","CloseIcon","SendIcon","EditIcon","useStyles","theme","root","flexGrow","maxWidth","listItem","backgroundColor","cursor","paddingTop","paddingBottom","listItemText","display","justifyContent","button","margin","spacing","breakpoints","down","minWidth","paddingLeft","paddingRight","marginBottom","buttonText","marginRight","padding","PersonList","setPersonList","personList","classes","editedRowIndex","setEditedRowIndex","filterCaseAccentInsensitive","filter","row","id","pivotId","content","key","String","toLowerCase","normalize","replace","includes","value","toggleIsEditing","e","currentTarget","attr","personID","parents","find","text","editableIndex","findIndex","item","parseInt","EditableRow","name","alignItems","target","deleteRow","myInit","method","fetch","then","removeIndex","newArray","splice","convertFormDataToObject","form","FormData","handleFormSubmit","preventDefault","updateIndex","url","formData","responseData","putFormDataAsJson","prevState","slice","error","console","plainFormData","Object","fromEntries","entries","formDataJsonString","JSON","stringify","fetchOptions","headers","body","response","ok","errorMessage","Error","json","width","height","props","position","fontWeight","map","index","firstname","lastname","address","isActive","fill"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport './PersonList.css';\r\nimport $ from \"jquery\";\r\nimport Scrollbars from 'react-custom-scrollbars';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 0.5,\r\n      maxWidth: 300,\r\n    },\r\n    listItem: {\r\n      backgroundColor: 'none',\r\n      \"&:hover\": {\r\n          backgroundColor: 'rgba(0,0,0,0.05);',\r\n          cursor: 'pointer'\r\n      },\r\n      paddingTop: 0,\r\n      paddingBottom: 0\r\n    },\r\n    listItemText: {\r\n        display: 'flex',\r\n        justifyContent: 'left',\r\n    },\r\n    button: {\r\n      margin: theme.spacing(1),\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n        minWidth: 32,\r\n        paddingLeft: 8,\r\n        paddingRight: 8,\r\n        marginBottom: 40,\r\n        cursor: \"pointer\",\r\n        \"& .MuiButton-startIcon\": {\r\n          margin: 0\r\n        }\r\n      }\r\n    },\r\n    buttonText: {\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n        display: \"none\"\r\n      },\r\n      display: \"flex\",\r\n      marginRight: 5\r\n    },\r\n    List: {\r\n        padding: 0\r\n    }\r\n}));\r\n\r\nexport default function PersonList({ setPersonList, personList }) {\r\n    const classes = useStyles();\r\n    const [editedRowIndex, setEditedRowIndex] = useState(null);\r\n\r\n    const filterCaseAccentInsensitive= (filter, row) => {\r\n      const id = filter.pivotId || filter.id;\r\n      const content = row[id];\r\n      if (typeof content !== 'undefined') {\r\n          // filter by text in the table or if it's a object, filter by key\r\n          if (typeof content === 'object' && content !== null && content.key) {\r\n              return String(content.key).toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\").includes(filter.value.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\"));\r\n          } else {\r\n              return String(content).toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\").includes(filter.value.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\"));\r\n          }\r\n      }\r\n  \r\n      return true;\r\n    };\r\n\r\n    // peremt de switcher sur le mode édition d'une ligne\r\n    const toggleIsEditing = (e) => {\r\n        if ($(e.currentTarget).attr('class').includes('editableIcon')) {\r\n            const personID = $($(e.currentTarget).parents()[3]).find('.personID').text();\r\n            const editableIndex = personList.findIndex(item => parseInt(item.id) === parseInt(personID));\r\n            setEditedRowIndex(editableIndex);\r\n        }\r\n    }   \r\n\r\n    // Element React pour la modification d'une ligne\r\n    const EditableRow = ({ value, name }) => (\r\n        <React.Fragment>\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <input\r\n                className=\"MuiTypography-root MuiTypography-h7 MuiTypography-displayInline\"\r\n                defaultValue={value}\r\n                onChange={(e)=> e.target.value}\r\n                name={name}\r\n            />\r\n            <Typography style={{ display: \"none\" }} />\r\n        </div>\r\n        </React.Fragment>\r\n    );\r\n\r\n    // Supprimer une personne de la liste\r\n    const deleteRow = (e) => {\r\n        // Supprimer l'élément dans la base de données\r\n        const personID = $($(e.currentTarget).parents()[3]).find('.personID').text();\r\n        const myInit = {\r\n            method: 'DELETE',\r\n        };\r\n        fetch(`person/${personID}`, myInit)\r\n        .then(() => {\r\n        // Récuperer l'index de l'élément à supprimer\r\n        const removeIndex = personList.findIndex(item => item.id === parseInt(personID));\r\n\r\n        // Faire une copie du state\r\n        const newArray = [...personList];\r\n\r\n        // Supprimer l'élément du nouveau tableau\r\n        newArray.splice(removeIndex, 1);\r\n\r\n        // Mettre à jour le state\r\n        setPersonList(newArray);\r\n        });\r\n    };\r\n\r\n    // Convertir les données du formulaire sous la forme d'un objet js\r\n    const convertFormDataToObject = (e) => {\r\n        const form = e.currentTarget;\r\n        return new FormData(form);\r\n    }\r\n\r\n    // Gérer le formulaire de la mise à jour d'une personne\r\n    const handleFormSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Récupérer les données du formulaire\r\n        const personID = $(e.currentTarget).find('.personID').find('input').attr('value');\r\n        const updateIndex = personList.findIndex(item => parseInt(item.id) === parseInt(personID));\r\n        const url = `person/${personID}`;\r\n\r\n        try {\r\n            // Requête PUT\r\n            const formData = convertFormDataToObject(e);\r\n            let responseData = await putFormDataAsJson({ url, formData });\r\n\r\n            // Mise à jour de la liste des utilisateurs\r\n            setPersonList(prevState => {\r\n                return  [...prevState.slice(0, updateIndex), responseData, ...prevState.slice(updateIndex + 1)];\r\n            });\r\n\r\n            setEditedRowIndex(-1);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n\r\n    const putFormDataAsJson = async ({ url, formData }) => {\r\n        const plainFormData = Object.fromEntries(formData.entries());\r\n        const formDataJsonString = JSON.stringify(plainFormData);\r\n\r\n        const fetchOptions = {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\",\r\n            },\r\n            body: formDataJsonString,\r\n        };\r\n    \r\n        const response = await fetch(url, fetchOptions);\r\n\r\n        if (!response.ok) {\r\n            const errorMessage = await response.text();\r\n            throw new Error(errorMessage);\r\n        }\r\n    \r\n        return response.json();\r\n    }\r\n  \r\n    return (\r\n        <>\r\n        <Scrollbars style={{ width: '70%', height: '100%' }} renderTrackHorizontal={props => <div {...props} style={{display: 'none'}} className=\"track-horizontal\"/>}>\r\n          <Grid item xs={16} md={12}>\r\n              <List className={classes.List}>\r\n                <ListItem className={classes.listItem} style={{ backgroundColor: 'B9D8C2', position: 'fixed', width: \"70%\", paddingBottom: 100 }}>\r\n                        <ListItemText\r\n                            disableTypography\r\n                            primary={<Typography type=\"body2\" style={{ fontWeight: 700, width: 10 }}>ID</Typography>}\r\n                            className={classes.listItemText}\r\n                        />\r\n                        <ListItemText\r\n                            disableTypography\r\n                            primary={<Typography type=\"body2\" style={{ fontWeight: 700, width: 10 }}>Prénom</Typography>}\r\n                            className={classes.listItemText}\r\n                        />\r\n                        <ListItemText\r\n                            disableTypography\r\n                            primary={<Typography type=\"body2\" style={{ fontWeight: 700, width: 10 }}>Nom</Typography>}\r\n                            className={classes.listItemText}\r\n                        />\r\n                        <ListItemText\r\n                            disableTypography\r\n                            primary={<Typography type=\"body2\" style={{ fontWeight: 700, width: 10 }}>Adresse</Typography>}\r\n                            className={classes.listItemText}\r\n                        />\r\n                        <ListItemText\r\n                            disableTypography\r\n                            primary={<Typography type=\"body2\" style={{ fontWeight: 700, width: 10 }}>Actif</Typography>}\r\n                            className={classes.listItemText}\r\n                        />\r\n                    </ListItem>\r\n                {personList.map((item, index) => (\r\n                    index === editedRowIndex ? ( \r\n                        <form className=\"editForm\" onSubmit={handleFormSubmit}>\r\n                            <ListItem className={classes.listItem}>\r\n                                <ListItemText\r\n                                    disableTypography\r\n                                    primary={<EditableRow value={item.id} name={\"id\"} />}\r\n                                    className={`${classes.listItemText} personID`}\r\n                                />\r\n                                <ListItemText\r\n                                    disableTypography\r\n                                    primary={<EditableRow value={item.firstname} name={\"firstname\"} />}\r\n                                    className={classes.listItemText}\r\n                                />\r\n                                <ListItemText\r\n                                    disableTypography\r\n                                    primary={<EditableRow value={item.lastname} name={\"lastname\"} />}\r\n                                    className={classes.listItemText}\r\n                                />\r\n                                <ListItemText\r\n                                    disableTypography\r\n                                    primary={<EditableRow value={item.address} name={\"address\"} />}\r\n                                    className={classes.listItemText}\r\n                                />\r\n                                <ListItemText\r\n                                    disableTypography\r\n                                    primary={<EditableRow value={item.isActive} name={\"isActive\"} />}\r\n                                    className={classes.listItemText}\r\n                                />\r\n                                <ListItemSecondaryAction>\r\n                                    <IconButton edge=\"end\" aria-label=\"delete\" type=\"submit\">\r\n                                        <SendIcon \r\n                                            style={{fill: \"#3f51b5\"}} \r\n                                        />\r\n                                    </IconButton>\r\n                                </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                       </form>\r\n                        ) : (\r\n                    <ListItem className={classes.listItem}>\r\n                        <ListItemText\r\n                           disableTypography\r\n                           primary={<Typography type=\"body2\" style={{ fontWeight: 700, width: 10 }}>{item.id}</Typography>}\r\n                           className={`${classes.listItemText} personID`}\r\n                        />\r\n                        <ListItemText\r\n                           disableTypography\r\n                           primary={<Typography type=\"body2\" style={{ fontWeight: 700, width: 10 }}>{item.firstname}</Typography>}\r\n                           className={classes.listItemText}\r\n                        />\r\n                         <ListItemText\r\n                           disableTypography\r\n                           primary={<Typography type=\"body2\" style={{ fontWeight: 700, width: 10 }}>{item.lastname}</Typography>}\r\n                           className={classes.listItemText}\r\n                        />\r\n                        <ListItemText\r\n                           disableTypography\r\n                           primary={<Typography type=\"body2\" style={{ fontWeight: 700, width: 10 }}>{item.address}</Typography>}\r\n                           className={classes.listItemText}\r\n                        />\r\n                        <ListItemText\r\n                           disableTypography\r\n                           primary={<Typography type=\"body2\" style={{ fontWeight: 700, width: 10 }}>{item.isActive}</Typography>}\r\n                           className={classes.listItemText}\r\n                        />\r\n                       <ListItemSecondaryAction>\r\n                       <IconButton edge=\"end\" aria-label=\"delete\">\r\n                           <CloseIcon \r\n                             style={{fill: \"#3f51b5\"}} \r\n                             onClick={(e) => {\r\n                                 deleteRow(e);\r\n                             }} \r\n                           />\r\n                       </IconButton>\r\n                       <IconButton edge=\"end\" aria-label=\"edit\">\r\n                           <EditIcon \r\n                             style={{fill: \"#3f51b5\"}} \r\n                             onClick={toggleIsEditing}\r\n                             className=\"editableIcon\" \r\n                           />\r\n                       </IconButton>\r\n                       </ListItemSecondaryAction>\r\n                   </ListItem>\r\n                    )\r\n                ))}\r\n              </List>\r\n          </Grid>\r\n        </Scrollbars>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}