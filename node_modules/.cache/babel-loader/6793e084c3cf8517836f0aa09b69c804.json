{"ast":null,"code":"import { SET_PERSONLIST, SET_FILTEREDPERSONLIST, UPDATE_FILTEREDPERSONLIST } from \"../actions/actions-types\";\nconst initialState = {\n  personList: [],\n  filteredPersonList: []\n};\nexport default function PersonListReducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_PERSONLIST:\n      return { ...state,\n        personList: [...action.payload]\n      };\n\n    case SET_FILTEREDPERSONLIST:\n      return { ...state,\n        filteredPersonList: [...action.payload]\n      };\n\n    case UPDATE_FILTEREDPERSONLIST:\n      return { ...state,\n        personList: [...state.personList.slice(0, action.payload[0]), action.payload[1], ...state.personList.slice(action.payload[0] + 1)]\n      };\n\n    default:\n      return state;\n  }\n}\n_c = PersonListReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PersonListReducer\");","map":{"version":3,"sources":["C:/Users/Alex/Documents/react-person/src/reducers/PersonListReducer.js"],"names":["SET_PERSONLIST","SET_FILTEREDPERSONLIST","UPDATE_FILTEREDPERSONLIST","initialState","personList","filteredPersonList","PersonListReducer","state","action","type","payload","slice"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,sBAAzB,EAAiDC,yBAAjD,QAAkF,0BAAlF;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE,EADK;AAEjBC,EAAAA,kBAAkB,EAAE;AAFH,CAArB;AAKA,eAAe,SAASC,iBAAT,CAA2BC,KAAK,GAAGJ,YAAnC,EAAiDK,MAAjD,EAAyD;AACpE,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKT,cAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHH,QAAAA,UAAU,EAAE,CAAC,GAAGI,MAAM,CAACE,OAAX;AAFT,OAAP;;AAIJ,SAAKT,sBAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHF,QAAAA,kBAAkB,EAAE,CAAC,GAAGG,MAAM,CAACE,OAAX;AAFjB,OAAP;;AAIJ,SAAKR,yBAAL;AACI,aAAO,EACH,GAAGK,KADA;AAEHH,QAAAA,UAAU,EAAE,CAAC,GAAGG,KAAK,CAACH,UAAN,CAAiBO,KAAjB,CAAuB,CAAvB,EAA0BH,MAAM,CAACE,OAAP,CAAe,CAAf,CAA1B,CAAJ,EAAkDF,MAAM,CAACE,OAAP,CAAe,CAAf,CAAlD,EAAqE,GAAGH,KAAK,CAACH,UAAN,CAAiBO,KAAjB,CAAuBH,MAAM,CAACE,OAAP,CAAe,CAAf,IAAoB,CAA3C,CAAxE;AAFT,OAAP;;AAIJ;AACI,aAAOH,KAAP;AAjBR;AAmBH;KApBuBD,iB","sourcesContent":["import { SET_PERSONLIST, SET_FILTEREDPERSONLIST, UPDATE_FILTEREDPERSONLIST } from \"../actions/actions-types\";\r\n\r\nconst initialState = {\r\n    personList: [],\r\n    filteredPersonList: []\r\n}\r\n\r\nexport default function PersonListReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case SET_PERSONLIST: \r\n            return {\r\n                ...state,\r\n                personList: [...action.payload]\r\n            }\r\n        case SET_FILTEREDPERSONLIST: \r\n            return {\r\n                ...state,\r\n                filteredPersonList: [...action.payload]\r\n            }\r\n        case UPDATE_FILTEREDPERSONLIST:\r\n            return {\r\n                ...state,\r\n                personList: [...state.personList.slice(0, action.payload[0]), action.payload[1], ...state.personList.slice(action.payload[0] + 1)]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}