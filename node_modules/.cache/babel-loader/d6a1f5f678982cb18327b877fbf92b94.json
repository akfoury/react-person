{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Documents\\\\react-person\\\\src\\\\components\\\\PersonList\\\\PersonList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport './PersonList.css';\nimport { convertFormDataToObject } from '../../utils/FormData';\nimport { connect } from \"react-redux\";\nimport { putFormDataAsJson, deletePerson } from '../../api/PersonAPI';\nimport { List, ListItem, ListItemSecondaryAction, ListItemText, IconButton, Grid, Typography, Button, Chip } from '@mui/material';\nimport { Close, Send, Edit } from '@mui/icons-material';\nimport { setFilteredPersonList, updateFilteredPersonList, deletePersonList } from \"../../actions\";\nimport FilterInputList from \"../FilterInputList/FilterInputList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PersonList({\n  personList,\n  filteredPersonList,\n  setFilteredPersonList,\n  updateFilteredPersonList,\n  deletePersonList\n}) {\n  _s();\n\n  const [editedRowIndex, setEditedRowIndex] = useState(null); // permet de switcher sur le mode édition d'une ligne\n\n  const toggleIsEditing = e => {\n    const personID = e.currentTarget.dataset.idedit;\n    const editableIndex = filteredPersonList.findIndex(item => parseInt(item.id) === parseInt(personID));\n    setEditedRowIndex(editableIndex);\n  }; // gestion du button delete\n\n\n  const handleDelete = async e => {\n    e.preventDefault();\n    e.stopPropagation(); // Récupérer l'id de la ligne\n\n    console.log(e.currentTarget);\n    const personID = e.currentTarget.dataset.iddelete;\n    console.log(personID); // Supprimer la personne\n\n    const responseData = await deletePerson(personID); // Récuperer l'index de l'élément à supprimer\n\n    const removeIndex = personList.findIndex(item => item.id === parseInt(personID)); // Mettre à jour le state\n\n    deletePersonList(removeIndex);\n  }; // Element React pour la modification d'une ligne\n\n\n  const EditableRow = ({\n    value,\n    name,\n    type\n  }) => {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"flex-start\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          defaultValue: value,\n          name: name,\n          type: type,\n          style: {\n            border: '#008080 solid 0.5px',\n            width: '100%',\n            margin: '2px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this);\n  }; // Gérer le formulaire de la mise à jour d'une personne\n\n\n  const handleFormSubmit = async e => {\n    e.preventDefault(); // Récupérer les données du formulaire\n\n    const personID = e.currentTarget.querySelectorAll('button[type=submit]').dataset.sendid;\n    console.log(personID);\n    const updateIndex = filteredPersonList.findIndex(item => parseInt(item.id) === parseInt(personID));\n    console.log(updateIndex);\n    const url = `person/${personID}`;\n\n    try {\n      // Requête PUT\n      const {\n        formData,\n        _\n      } = convertFormDataToObject(e);\n      const responseData = await putFormDataAsJson({\n        formData,\n        url\n      }); // Mise à jour de la liste des utilisateurs\n\n      updateFilteredPersonList(updateIndex, responseData);\n      setEditedRowIndex(-1);\n    } catch (error) {\n      console.error(error);\n    }\n  }; // Initialisation du state stockant la liste filtrée\n\n\n  useEffect(() => {\n    setFilteredPersonList(personList);\n  }, [personList]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 16,\n    md: 12,\n    className: \"grid\",\n    children: /*#__PURE__*/_jsxDEV(List, {\n      className: \"list\",\n      children: [/*#__PURE__*/_jsxDEV(ListItem, {\n        className: \"list-item\",\n        style: {\n          backgroundColor: '#9AC2C980'\n        },\n        children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n          disableTypography: true,\n          primary: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"body2\",\n            style: {\n              fontWeight: 700,\n              width: 10,\n              color: '#004040'\n            },\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 34\n          }, this),\n          className: \"list-item-text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          disableTypography: true,\n          primary: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"body2\",\n            style: {\n              fontWeight: 700,\n              width: 10,\n              color: '#004040'\n            },\n            children: \"Pr\\xE9nom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 34\n          }, this),\n          className: \"list-item-text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          disableTypography: true,\n          primary: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"body2\",\n            style: {\n              fontWeight: 700,\n              width: 10,\n              color: '#004040'\n            },\n            children: \"Nom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 34\n          }, this),\n          className: \"list-item-text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          disableTypography: true,\n          primary: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"body2\",\n            style: {\n              fontWeight: 700,\n              width: 10,\n              color: '#004040'\n            },\n            children: \"Adresse\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 34\n          }, this),\n          className: \"list-item-text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          disableTypography: true,\n          primary: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"body2\",\n            style: {\n              fontWeight: 700,\n              width: 10,\n              color: '#004040',\n              paddingRight: 30\n            },\n            children: \"Actif\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 34\n          }, this),\n          className: \"list-item-text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            edge: \"end\",\n            \"aria-label\": \"delete\",\n            type: \"submit\",\n            children: /*#__PURE__*/_jsxDEV(Send, {\n              style: {\n                display: \"none\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            edge: \"end\",\n            \"aria-label\": \"delete\",\n            type: \"submit\",\n            children: /*#__PURE__*/_jsxDEV(Send, {\n              style: {\n                display: \"none\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FilterInputList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), filteredPersonList.length != 0 && filteredPersonList.map((item, index) => index === editedRowIndex ? /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"editForm\",\n        onSubmit: handleFormSubmit,\n        children: /*#__PURE__*/_jsxDEV(ListItem, {\n          className: \"list-item\",\n          children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n            disableTypography: true,\n            primary: /*#__PURE__*/_jsxDEV(EditableRow, {\n              value: item.id,\n              name: \"id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 42\n            }, this),\n            className: \"list-item-text personID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            disableTypography: true,\n            primary: /*#__PURE__*/_jsxDEV(EditableRow, {\n              value: item.firstname,\n              name: \"firstname\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 42\n            }, this),\n            className: \"list-item-text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            disableTypography: true,\n            primary: /*#__PURE__*/_jsxDEV(EditableRow, {\n              value: item.lastname,\n              name: \"lastname\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 42\n            }, this),\n            className: \"list-item-text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            disableTypography: true,\n            primary: /*#__PURE__*/_jsxDEV(EditableRow, {\n              value: item.address,\n              name: \"address\",\n              type: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 42\n            }, this),\n            className: \"list-item-text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            disableTypography: true,\n            primary: /*#__PURE__*/_jsxDEV(EditableRow, {\n              value: item.isActive,\n              name: \"isActive\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 42\n            }, this),\n            className: \"list-item-text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              edge: \"end\",\n              \"aria-label\": \"edit\",\n              type: \"submit\",\n              \"data-idsend\": item.id,\n              children: /*#__PURE__*/_jsxDEV(Send, {\n                style: {\n                  fill: \"#008080\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(ListItem, {\n        className: \"list-item\",\n        children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n          disableTypography: true,\n          primary: /*#__PURE__*/_jsxDEV(Typography, {\n            type: \"body2\",\n            children: item.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 34\n          }, this),\n          className: \"list-item-text personID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          disableTypography: true,\n          primary: /*#__PURE__*/_jsxDEV(Typography, {\n            type: \"body2\",\n            children: item.firstname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 34\n          }, this),\n          className: \"list-item-text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          disableTypography: true,\n          primary: /*#__PURE__*/_jsxDEV(Typography, {\n            type: \"body2\",\n            children: item.lastname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 34\n          }, this),\n          className: \"list-item-text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          disableTypography: true,\n          primary: /*#__PURE__*/_jsxDEV(Typography, {\n            type: \"body2\",\n            children: item.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 34\n          }, this),\n          className: \"list-item-text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          disableTypography: true,\n          primary: parseInt(item.isActive) ? /*#__PURE__*/_jsxDEV(Chip, {\n            style: {\n              backgroundColor: 'rgba(53, 219, 94, 0.8)',\n              color: 'white',\n              fontWeight: 700\n            },\n            label: \"Actif\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 60\n          }, this) : /*#__PURE__*/_jsxDEV(Chip, {\n            style: {\n              backgroundColor: 'rgba(209, 42, 23, 0.8)',\n              color: 'white',\n              fontWeight: 700\n            },\n            label: \"Inactif\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 170\n          }, this),\n          className: \"list-item-text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            edge: \"end\",\n            \"aria-label\": \"edit\",\n            onClick: toggleIsEditing,\n            \"data-idedit\": item.id,\n            children: /*#__PURE__*/_jsxDEV(Edit, {\n              style: {\n                fill: \"#008080\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            edge: \"end\",\n            \"aria-label\": \"delete\",\n            onClick: handleDelete,\n            \"data-iddelete\": item.id,\n            children: /*#__PURE__*/_jsxDEV(Close, {\n              style: {\n                fill: \"#008080\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PersonList, \"fyNklzHZlF389bculobK0ZuiFmw=\");\n\n_c = PersonList;\n\nconst mapStateToProps = state => {\n  return {\n    personList: state.personList.personList,\n    filteredPersonList: state.personList.filteredPersonList\n  };\n};\n\nconst mapDispatchToProps = {\n  setFilteredPersonList,\n  updateFilteredPersonList,\n  deletePersonList\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(PersonList);\n\nvar _c;\n\n$RefreshReg$(_c, \"PersonList\");","map":{"version":3,"sources":["C:/Users/Alex/Documents/react-person/src/components/PersonList/PersonList.js"],"names":["React","useState","useEffect","convertFormDataToObject","connect","putFormDataAsJson","deletePerson","List","ListItem","ListItemSecondaryAction","ListItemText","IconButton","Grid","Typography","Button","Chip","Close","Send","Edit","setFilteredPersonList","updateFilteredPersonList","deletePersonList","FilterInputList","PersonList","personList","filteredPersonList","editedRowIndex","setEditedRowIndex","toggleIsEditing","e","personID","currentTarget","dataset","idedit","editableIndex","findIndex","item","parseInt","id","handleDelete","preventDefault","stopPropagation","console","log","iddelete","responseData","removeIndex","EditableRow","value","name","type","display","justifyContent","border","width","margin","handleFormSubmit","querySelectorAll","sendid","updateIndex","url","formData","_","error","backgroundColor","fontWeight","color","paddingRight","length","map","index","firstname","lastname","address","isActive","fill","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport './PersonList.css';\r\nimport { convertFormDataToObject } from '../../utils/FormData';\r\nimport { connect } from \"react-redux\";\r\nimport { \r\n    putFormDataAsJson, \r\n    deletePerson\r\n} from '../../api/PersonAPI';\r\nimport {\r\n    List,\r\n    ListItem,\r\n    ListItemSecondaryAction,\r\n    ListItemText,\r\n    IconButton,\r\n    Grid,\r\n    Typography,\r\n    Button,\r\n    Chip\r\n} from '@mui/material';\r\nimport {\r\n    Close,\r\n    Send,\r\n    Edit\r\n} from '@mui/icons-material';\r\nimport { setFilteredPersonList, updateFilteredPersonList, deletePersonList } from \"../../actions\";\r\nimport FilterInputList from \"../FilterInputList/FilterInputList\";\r\n\r\n\r\n\r\nfunction PersonList({ personList, filteredPersonList, setFilteredPersonList, updateFilteredPersonList, deletePersonList }) {\r\n    const [editedRowIndex, setEditedRowIndex] = useState(null);\r\n\r\n    // permet de switcher sur le mode édition d'une ligne\r\n    const toggleIsEditing = (e) => {\r\n        const personID = e.currentTarget.dataset.idedit;\r\n        const editableIndex = filteredPersonList.findIndex(item => parseInt(item.id) === parseInt(personID));\r\n        setEditedRowIndex(editableIndex);\r\n    }  \r\n    \r\n    // gestion du button delete\r\n    const handleDelete = async (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        // Récupérer l'id de la ligne\r\n        console.log(e.currentTarget);\r\n        const personID = e.currentTarget.dataset.iddelete;\r\n        console.log(personID);\r\n\r\n        // Supprimer la personne\r\n        const responseData = await deletePerson(personID);\r\n\r\n        // Récuperer l'index de l'élément à supprimer\r\n        const removeIndex = personList.findIndex(item => item.id === parseInt(personID));\r\n\r\n        // Mettre à jour le state\r\n        deletePersonList(removeIndex);\r\n    }\r\n\r\n    // Element React pour la modification d'une ligne\r\n    const EditableRow = ({ value, name, type }) => {\r\n        return (\r\n            <React.Fragment>\r\n            <div style={{ display: \"flex\", justifyContent: \"flex-start\"}}>\r\n                <input\r\n                    defaultValue={value}\r\n                    name={name}\r\n                    type={type}\r\n                    style={{border: '#008080 solid 0.5px', width: '100%', margin: '2px'}}\r\n                />\r\n            </div>\r\n            </React.Fragment>\r\n        )\r\n    };\r\n\r\n    // Gérer le formulaire de la mise à jour d'une personne\r\n    const handleFormSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Récupérer les données du formulaire\r\n        const personID = e.currentTarget.querySelectorAll('button[type=submit]').dataset.sendid;\r\n        console.log(personID);\r\n        const updateIndex = filteredPersonList.findIndex(item => parseInt(item.id) === parseInt(personID));\r\n        console.log(updateIndex);\r\n        const url = `person/${personID}`;\r\n\r\n        try {\r\n            // Requête PUT\r\n            const { formData, _} = convertFormDataToObject(e);\r\n            const responseData = await putFormDataAsJson({ formData, url });\r\n\r\n            // Mise à jour de la liste des utilisateurs\r\n            updateFilteredPersonList(updateIndex, responseData);\r\n\r\n            setEditedRowIndex(-1);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    // Initialisation du state stockant la liste filtrée\r\n    useEffect(() => {\r\n        setFilteredPersonList(personList);\r\n    }, [personList]);\r\n\r\n    return (\r\n        <Grid item xs={16} md={12} className=\"grid\">\r\n            <List className='list'>\r\n                <ListItem className='list-item' style={{ backgroundColor: '#9AC2C980' }}>\r\n                    <ListItemText\r\n                        disableTypography\r\n                        primary={<Button type=\"body2\" style={{ fontWeight: 700, width: 10, color: '#004040' }}>ID</Button>}\r\n                        className='list-item-text'\r\n                    />\r\n                    <ListItemText\r\n                        disableTypography\r\n                        primary={<Button type=\"body2\" style={{ fontWeight: 700, width: 10, color: '#004040' }}>Prénom</Button>}\r\n                        className='list-item-text'\r\n                    />\r\n                    <ListItemText\r\n                        disableTypography\r\n                        primary={<Button type=\"body2\" style={{ fontWeight: 700, width: 10, color: '#004040' }}>Nom</Button>}\r\n                        className='list-item-text'\r\n                    />\r\n                    <ListItemText\r\n                        disableTypography\r\n                        primary={<Button type=\"body2\" style={{ fontWeight: 700, width: 10, color: '#004040' }}>Adresse</Button>}\r\n                        className='list-item-text'\r\n                    />\r\n                    <ListItemText\r\n                        disableTypography\r\n                        primary={<Button type=\"body2\" style={{ fontWeight: 700, width: 10, color: '#004040', paddingRight: 30 }}>Actif</Button>}\r\n                        className='list-item-text'\r\n                    />\r\n                    <ListItemSecondaryAction>\r\n                        <IconButton edge=\"end\" aria-label=\"delete\" type=\"submit\">\r\n                            <Send \r\n                                style={{display: \"none\"}} \r\n                            />\r\n                        </IconButton>\r\n                    </ListItemSecondaryAction>\r\n                    <ListItemSecondaryAction>\r\n                        <IconButton edge=\"end\" aria-label=\"delete\" type=\"submit\">\r\n                            <Send \r\n                                style={{display: \"none\"}} \r\n                            />\r\n                        </IconButton>\r\n                    </ListItemSecondaryAction>\r\n                </ListItem>\r\n                <FilterInputList />\r\n            {filteredPersonList.length != 0 && filteredPersonList.map((item, index) => (\r\n                index === editedRowIndex ? ( \r\n                    <form className=\"editForm\" onSubmit={handleFormSubmit}>\r\n                        <ListItem className='list-item'>\r\n                            <ListItemText\r\n                                disableTypography\r\n                                primary={<EditableRow value={item.id} name=\"id\" />}\r\n                                className='list-item-text personID'\r\n                            />\r\n                            <ListItemText\r\n                                disableTypography\r\n                                primary={<EditableRow value={item.firstname} name=\"firstname\" />}\r\n                                className='list-item-text'\r\n                            />\r\n                            <ListItemText\r\n                                disableTypography\r\n                                primary={<EditableRow value={item.lastname} name=\"lastname\" />}\r\n                                className='list-item-text'\r\n                            />\r\n                            <ListItemText\r\n                                disableTypography\r\n                                primary={<EditableRow value={item.address} name=\"address\" type=\"email\"/>}\r\n                                className='list-item-text'\r\n                            />\r\n                            <ListItemText\r\n                                disableTypography\r\n                                primary={<EditableRow value={item.isActive} name=\"isActive\" />}\r\n                                className='list-item-text'\r\n                            />\r\n                            <ListItemSecondaryAction>\r\n                                <IconButton edge=\"end\" aria-label=\"edit\" type=\"submit\" data-idsend={item.id}>\r\n                                    <Send \r\n                                        style={{fill: \"#008080\"}} \r\n                                    />\r\n                                </IconButton>\r\n                            </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                    </form>\r\n                    ) : (\r\n                <ListItem className='list-item'>\r\n                        <ListItemText\r\n                        disableTypography\r\n                        primary={<Typography type=\"body2\">{item.id}</Typography>}\r\n                        className='list-item-text personID'\r\n                        />\r\n                        <ListItemText\r\n                        disableTypography\r\n                        primary={<Typography type=\"body2\" >{item.firstname}</Typography>}\r\n                        className='list-item-text'\r\n                        />\r\n                        <ListItemText\r\n                        disableTypography\r\n                        primary={<Typography type=\"body2\">{item.lastname}</Typography>}\r\n                        className='list-item-text'\r\n                        />\r\n                        <ListItemText\r\n                        disableTypography\r\n                        primary={<Typography type=\"body2\">{item.address}</Typography>}\r\n                        className='list-item-text'\r\n                        />\r\n                        <ListItemText\r\n                        disableTypography\r\n                        primary={parseInt(item.isActive) ? <Chip style={{backgroundColor: 'rgba(53, 219, 94, 0.8)', color: 'white', fontWeight: 700}} label=\"Actif\" /> : <Chip style={{backgroundColor: 'rgba(209, 42, 23, 0.8)', color: 'white', fontWeight: 700}} label=\"Inactif\" />}\r\n                        className='list-item-text'\r\n                        />\r\n                    <ListItemSecondaryAction>\r\n                        <IconButton edge=\"end\" aria-label=\"edit\" onClick={toggleIsEditing} data-idedit={item.id} >\r\n                            <Edit \r\n                                style={{fill: \"#008080\"}} \r\n                            />\r\n                        </IconButton>\r\n                        <IconButton edge=\"end\" aria-label=\"delete\" onClick={handleDelete} data-iddelete={item.id}>\r\n                            <Close \r\n                                style={{fill: \"#008080\"}} \r\n                            />\r\n                        </IconButton>\r\n                    </ListItemSecondaryAction>\r\n                </ListItem>\r\n                )\r\n            ))}\r\n            </List>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        personList: state.personList.personList,\r\n        filteredPersonList: state.personList.filteredPersonList\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    setFilteredPersonList,\r\n    updateFilteredPersonList,\r\n    deletePersonList\r\n  }\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(PersonList);\r\n  "]},"metadata":{},"sourceType":"module"}