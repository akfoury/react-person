{"ast":null,"code":"import _defineProperty from\"C:/Users/Alex/Documents/react-person/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:/Users/Alex/Documents/react-person/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/Users/Alex/Documents/react-person/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{useState,useEffect}from'react';import{connect}from\"react-redux\";import FilterInput from'../FilterInput/FilterInput';import{getListOfFilteredID}from'../../utils/ListFilter';import{deleteAllPerson}from'../../api/PersonAPI';import{setPersonList}from\"../../actions\";import{ClearAll}from'@mui/icons-material';import{ListItem,ListItemSecondaryAction,ListItemText,IconButton}from'@mui/material';// Initialisation des valeurs de filtres\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var initialFilteredPersonList={id:'',firstname:'',lastname:'',address:'',isActive:''};function FilterInputList(_ref){var personList=_ref.personList,setPersonList=_ref.setPersonList;var _useState=useState(initialFilteredPersonList),_useState2=_slicedToArray(_useState,2),filterOptions=_useState2[0],setFilterOptions=_useState2[1];// Gestion du state stockant les valeurs de filtrage\nvar handleFormFilterInput=function handleFormFilterInput(e){var _e$target=e.target,value=_e$target.value,name=_e$target.name;setFilterOptions(function(prevState){return _objectSpread(_objectSpread({},prevState),{},_defineProperty({},name,value));});};// Suppression de toutes les lignes\nvar handleDeleteAll=function handleDeleteAll(e){e.preventDefault();e.stopPropagation();deleteAllPerson().then(function(){setPersonList([]);});};// Appel de l'algorithme à chaque fois qu'une valeur de filtrage change\nuseEffect(function(){var filteredID=getListOfFilteredID(filterOptions,personList);if(filteredID.length!=0){setPersonList(personList.map(function(obj){return filteredID.includes(String(obj.id))?_objectSpread(_objectSpread({},obj),{},{visibility:true}):_objectSpread(_objectSpread({},obj),{},{visibility:false});}));}},[filterOptions]);return/*#__PURE__*/_jsx(\"form\",{className:\"filterForm\",children:/*#__PURE__*/_jsxs(ListItem,{className:\"list-item filters\",ContainerComponent:\"div\",children:[/*#__PURE__*/_jsx(ListItemText,{disableTypography:true,primary:/*#__PURE__*/_jsx(FilterInput,{filterOptions:filterOptions,optionName:\"id\",handleFormFilterInput:handleFormFilterInput}),className:\"list-item-text\"}),/*#__PURE__*/_jsx(ListItemText,{disableTypography:true,primary:/*#__PURE__*/_jsx(FilterInput,{filterOptions:filterOptions,optionName:\"firstname\",handleFormFilterInput:handleFormFilterInput}),className:\"list-item-text\"}),/*#__PURE__*/_jsx(ListItemText,{disableTypography:true,primary:/*#__PURE__*/_jsx(FilterInput,{filterOptions:filterOptions,optionName:\"lastname\",handleFormFilterInput:handleFormFilterInput}),className:\"list-item-text\"}),/*#__PURE__*/_jsx(ListItemText,{disableTypography:true,primary:/*#__PURE__*/_jsx(FilterInput,{filterOptions:filterOptions,optionName:\"address\",handleFormFilterInput:handleFormFilterInput}),className:\"list-item-text\"}),/*#__PURE__*/_jsx(ListItemText,{disableTypography:true,primary:/*#__PURE__*/_jsx(FilterInput,{filterOptions:filterOptions,optionName:\"isActive\",handleFormFilterInput:handleFormFilterInput}),className:\"list-item-text\"}),/*#__PURE__*/_jsx(ListItemSecondaryAction,{children:/*#__PURE__*/_jsx(IconButton,{edge:\"end\",\"aria-label\":\"deleteall\",onClick:handleDeleteAll,children:/*#__PURE__*/_jsx(ClearAll,{style:{fill:\"#008080\"},fontSize:\"large\"})})})]})});}var mapStateToProps=function mapStateToProps(state){return{personList:state.personList.personList};};var mapDispatchToProps={setPersonList:setPersonList};export default connect(mapStateToProps,mapDispatchToProps)(FilterInputList);","map":{"version":3,"sources":["C:/Users/Alex/Documents/react-person/src/components/FilterInputList/FilterInputList.js"],"names":["React","useState","useEffect","connect","FilterInput","getListOfFilteredID","deleteAllPerson","setPersonList","ClearAll","ListItem","ListItemSecondaryAction","ListItemText","IconButton","initialFilteredPersonList","id","firstname","lastname","address","isActive","FilterInputList","personList","filterOptions","setFilterOptions","handleFormFilterInput","e","target","value","name","prevState","handleDeleteAll","preventDefault","stopPropagation","then","filteredID","length","map","obj","includes","String","visibility","fill","mapStateToProps","state","mapDispatchToProps"],"mappings":"kdAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,WAAP,KAAwB,4BAAxB,CACA,OAASC,mBAAT,KAAoC,wBAApC,CACA,OACIC,eADJ,KAEO,qBAFP,CAGA,OAASC,aAAT,KAA8B,eAA9B,CACA,OAASC,QAAT,KAAyB,qBAAzB,CACA,OACIC,QADJ,CAEIC,uBAFJ,CAGIC,YAHJ,CAIIC,UAJJ,KAKO,eALP,CAOA;wFACA,GAAMC,CAAAA,yBAAyB,CAAG,CAC9BC,EAAE,CAAE,EAD0B,CAE9BC,SAAS,CAAE,EAFmB,CAG9BC,QAAQ,CAAE,EAHoB,CAI9BC,OAAO,CAAE,EAJqB,CAK9BC,QAAQ,CAAE,EALoB,CAAlC,CAQA,QAASC,CAAAA,eAAT,MAAwD,IAA7BC,CAAAA,UAA6B,MAA7BA,UAA6B,CAAjBb,aAAiB,MAAjBA,aAAiB,CACpD,cAA2CN,QAAQ,CAACY,yBAAD,CAAnD,wCAAOQ,aAAP,eAAsBC,gBAAtB,eAEA;AACA,GAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACC,CAAD,CAAO,CACjC,cAAwBA,CAAC,CAACC,MAA1B,CAAQC,KAAR,WAAQA,KAAR,CAAeC,IAAf,WAAeA,IAAf,CACAL,gBAAgB,CAAC,SAAAM,SAAS,CAAI,CAC1B,sCAAWA,SAAX,wBAAuBD,IAAvB,CAA8BD,KAA9B,GACH,CAFe,CAAhB,CAGH,CALD,CAOA;AACA,GAAMG,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACL,CAAD,CAAO,CAC3BA,CAAC,CAACM,cAAF,GACAN,CAAC,CAACO,eAAF,GAEAzB,eAAe,GAAG0B,IAAlB,CAAuB,UAAM,CACzBzB,aAAa,CAAC,EAAD,CAAb,CACH,CAFD,EAGH,CAPD,CASA;AACAL,SAAS,CAAC,UAAM,CACZ,GAAM+B,CAAAA,UAAU,CAAG5B,mBAAmB,CAACgB,aAAD,CAAgBD,UAAhB,CAAtC,CACA,GAAIa,UAAU,CAACC,MAAX,EAAqB,CAAzB,CAA4B,CACxB3B,aAAa,CAACa,UAAU,CAACe,GAAX,CAAe,SAAAC,GAAG,QAAIH,CAAAA,UAAU,CAACI,QAAX,CAAoBC,MAAM,CAACF,GAAG,CAACtB,EAAL,CAA1B,iCAA2CsB,GAA3C,MAAgDG,UAAU,CAAE,IAA5D,kCAA0EH,GAA1E,MAA+EG,UAAU,CAAE,KAA3F,EAAJ,EAAlB,CAAD,CAAb,CACH,CACJ,CALQ,CAKN,CAAClB,aAAD,CALM,CAAT,CAOA,mBACI,aAAM,SAAS,CAAC,YAAhB,uBACI,MAAC,QAAD,EAAU,SAAS,CAAC,mBAApB,CAAwC,kBAAkB,CAAC,KAA3D,wBACI,KAAC,YAAD,EACI,iBAAiB,KADrB,CAEI,OAAO,cAAE,KAAC,WAAD,EAAa,aAAa,CAAEA,aAA5B,CAA2C,UAAU,CAAC,IAAtD,CAA2D,qBAAqB,CAAEE,qBAAlF,EAFb,CAGI,SAAS,CAAC,gBAHd,EADJ,cAMI,KAAC,YAAD,EACI,iBAAiB,KADrB,CAEI,OAAO,cAAE,KAAC,WAAD,EAAa,aAAa,CAAEF,aAA5B,CAA2C,UAAU,CAAC,WAAtD,CAAkE,qBAAqB,CAAEE,qBAAzF,EAFb,CAGI,SAAS,CAAC,gBAHd,EANJ,cAWI,KAAC,YAAD,EACI,iBAAiB,KADrB,CAEI,OAAO,cAAE,KAAC,WAAD,EAAa,aAAa,CAAEF,aAA5B,CAA2C,UAAU,CAAC,UAAtD,CAAiE,qBAAqB,CAAEE,qBAAxF,EAFb,CAGI,SAAS,CAAC,gBAHd,EAXJ,cAgBI,KAAC,YAAD,EACI,iBAAiB,KADrB,CAEI,OAAO,cAAE,KAAC,WAAD,EAAa,aAAa,CAAEF,aAA5B,CAA2C,UAAU,CAAC,SAAtD,CAAgE,qBAAqB,CAAEE,qBAAvF,EAFb,CAGI,SAAS,CAAC,gBAHd,EAhBJ,cAqBI,KAAC,YAAD,EACI,iBAAiB,KADrB,CAEI,OAAO,cAAE,KAAC,WAAD,EAAa,aAAa,CAAEF,aAA5B,CAA2C,UAAU,CAAC,UAAtD,CAAiE,qBAAqB,CAAEE,qBAAxF,EAFb,CAGI,SAAS,CAAC,gBAHd,EArBJ,cA0BI,KAAC,uBAAD,wBACI,KAAC,UAAD,EAAY,IAAI,CAAC,KAAjB,CAAuB,aAAW,WAAlC,CAA8C,OAAO,CAAEM,eAAvD,uBACI,KAAC,QAAD,EACI,KAAK,CAAE,CAACW,IAAI,CAAE,SAAP,CADX,CAEI,QAAQ,CAAC,OAFb,EADJ,EADJ,EA1BJ,GADJ,EADJ,CAuCH,CAED,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,CAAI,CAC7B,MAAO,CACHtB,UAAU,CAAEsB,KAAK,CAACtB,UAAN,CAAiBA,UAD1B,CAAP,CAGH,CAJD,CAKA,GAAMuB,CAAAA,kBAAkB,CAAG,CACvBpC,aAAa,CAAbA,aADuB,CAA3B,CAIA,cAAeJ,CAAAA,OAAO,CAACsC,eAAD,CAAkBE,kBAAlB,CAAP,CAA6CxB,eAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport FilterInput from '../FilterInput/FilterInput';\r\nimport { getListOfFilteredID } from '../../utils/ListFilter';\r\nimport { \r\n    deleteAllPerson \r\n} from '../../api/PersonAPI';\r\nimport { setPersonList } from \"../../actions\";\r\nimport { ClearAll } from '@mui/icons-material';\r\nimport {\r\n    ListItem,\r\n    ListItemSecondaryAction,\r\n    ListItemText,\r\n    IconButton,\r\n} from '@mui/material';\r\n\r\n// Initialisation des valeurs de filtres\r\nconst initialFilteredPersonList = {\r\n    id: '',\r\n    firstname: '',\r\n    lastname: '',\r\n    address: '',\r\n    isActive: ''\r\n}\r\n\r\nfunction FilterInputList({ personList, setPersonList }) {\r\n    const [filterOptions, setFilterOptions]  = useState(initialFilteredPersonList);\r\n\r\n    // Gestion du state stockant les valeurs de filtrage\r\n    const handleFormFilterInput = (e) => {\r\n        const { value, name } = e.target;\r\n        setFilterOptions(prevState => {\r\n            return {...prevState, [name]: value}\r\n        });\r\n    }\r\n\r\n    // Suppression de toutes les lignes\r\n    const handleDeleteAll = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        deleteAllPerson().then(() => {\r\n            setPersonList([]);\r\n        });\r\n    }\r\n\r\n    // Appel de l'algorithme à chaque fois qu'une valeur de filtrage change\r\n    useEffect(() => {\r\n        const filteredID = getListOfFilteredID(filterOptions, personList);\r\n        if (filteredID.length != 0) {\r\n            setPersonList(personList.map(obj => filteredID.includes(String(obj.id)) ? ({...obj, visibility: true}) : ({...obj, visibility: false})));\r\n        }\r\n    }, [filterOptions]);\r\n\r\n    return (\r\n        <form className=\"filterForm\">\r\n            <ListItem className='list-item filters' ContainerComponent=\"div\">\r\n                <ListItemText\r\n                    disableTypography\r\n                    primary={<FilterInput filterOptions={filterOptions} optionName=\"id\" handleFormFilterInput={handleFormFilterInput} />}\r\n                    className='list-item-text'\r\n                />\r\n                <ListItemText\r\n                    disableTypography\r\n                    primary={<FilterInput filterOptions={filterOptions} optionName=\"firstname\" handleFormFilterInput={handleFormFilterInput} />}\r\n                    className='list-item-text'\r\n                />\r\n                <ListItemText\r\n                    disableTypography\r\n                    primary={<FilterInput filterOptions={filterOptions} optionName=\"lastname\" handleFormFilterInput={handleFormFilterInput} />}\r\n                    className='list-item-text'\r\n                />\r\n                <ListItemText\r\n                    disableTypography\r\n                    primary={<FilterInput filterOptions={filterOptions} optionName=\"address\" handleFormFilterInput={handleFormFilterInput} />}\r\n                    className='list-item-text'\r\n                />\r\n                <ListItemText\r\n                    disableTypography\r\n                    primary={<FilterInput filterOptions={filterOptions} optionName=\"isActive\" handleFormFilterInput={handleFormFilterInput} />}\r\n                    className='list-item-text'\r\n                />\r\n                <ListItemSecondaryAction>\r\n                    <IconButton edge=\"end\" aria-label=\"deleteall\" onClick={handleDeleteAll}>\r\n                        <ClearAll\r\n                            style={{fill: \"#008080\"}} \r\n                            fontSize=\"large\"\r\n                        />\r\n                    </IconButton>\r\n                </ListItemSecondaryAction>\r\n            </ListItem>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        personList: state.personList.personList,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    setPersonList,\r\n  }\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterInputList);\r\n\r\n"]},"metadata":{},"sourceType":"module"}