{"ast":null,"code":"import { SET_PERSONLIST, ADD_PERSONLIST, DELETE_PERSONLIST, UPDATE_PERSONLIST } from \"../actions/actions-types\";\nconst initialState = {\n  personList: [],\n  filteredPersonList: []\n};\nexport default function PersonListReducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_PERSONLIST:\n      return { ...state,\n        personList: [...action.payload]\n      };\n\n    case ADD_PERSONLIST:\n      return { ...state,\n        personList: [action.payload, ...state.personList]\n      };\n\n    case DELETE_PERSONLIST:\n      const deleteDeepClone = [...state.personList];\n      return { ...state,\n        personList: deleteDeepClone.filter((item, index) => index !== action.payload)\n      };\n\n    case UPDATE_PERSONLIST:\n      const updateDeepClone = [...state.personList];\n      return { ...state,\n        personList: [...updateDeepClone.slice(0, action.payload[0]), action.payload[1], ...updateDeepClone.slice(action.payload[0] + 1)]\n      };\n\n    default:\n      return state;\n  }\n}\n_c = PersonListReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PersonListReducer\");","map":{"version":3,"sources":["C:/Users/Alex/Documents/react-person/src/reducers/PersonListReducer.js"],"names":["SET_PERSONLIST","ADD_PERSONLIST","DELETE_PERSONLIST","UPDATE_PERSONLIST","initialState","personList","filteredPersonList","PersonListReducer","state","action","type","payload","deleteDeepClone","filter","item","index","updateDeepClone","slice"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,cAAzB,EAAyCC,iBAAzC,EAA4DC,iBAA5D,QAAqF,0BAArF;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE,EADK;AAEjBC,EAAAA,kBAAkB,EAAE;AAFH,CAArB;AAKA,eAAe,SAASC,iBAAT,CAA2BC,KAAK,GAAGJ,YAAnC,EAAiDK,MAAjD,EAAyD;AACpE,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKV,cAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHH,QAAAA,UAAU,EAAE,CAAC,GAAGI,MAAM,CAACE,OAAX;AAFT,OAAP;;AAIJ,SAAKV,cAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHH,QAAAA,UAAU,EAAE,CAACI,MAAM,CAACE,OAAR,EAAiB,GAAGH,KAAK,CAACH,UAA1B;AAFT,OAAP;;AAIJ,SAAKH,iBAAL;AACI,YAAMU,eAAe,GAAG,CAAC,GAAGJ,KAAK,CAACH,UAAV,CAAxB;AACA,aAAO,EACH,GAAGG,KADA;AAEHH,QAAAA,UAAU,EAAEO,eAAe,CAACC,MAAhB,CAAuB,CAACC,IAAD,EAAOC,KAAP,KAAiBA,KAAK,KAAKN,MAAM,CAACE,OAAzD;AAFT,OAAP;;AAIJ,SAAKR,iBAAL;AACI,YAAMa,eAAe,GAAG,CAAC,GAAGR,KAAK,CAACH,UAAV,CAAxB;AACA,aAAO,EACH,GAAGG,KADA;AAEHH,QAAAA,UAAU,EAAE,CAAC,GAAGW,eAAe,CAACC,KAAhB,CAAsB,CAAtB,EAAyBR,MAAM,CAACE,OAAP,CAAe,CAAf,CAAzB,CAAJ,EAAiDF,MAAM,CAACE,OAAP,CAAe,CAAf,CAAjD,EAAoE,GAAGK,eAAe,CAACC,KAAhB,CAAsBR,MAAM,CAACE,OAAP,CAAe,CAAf,IAAoB,CAA1C,CAAvE;AAFT,OAAP;;AAIJ;AACI,aAAOH,KAAP;AAxBR;AA0BH;KA3BuBD,iB","sourcesContent":["import { SET_PERSONLIST, ADD_PERSONLIST, DELETE_PERSONLIST, UPDATE_PERSONLIST } from \"../actions/actions-types\";\r\n\r\nconst initialState = {\r\n    personList: [],\r\n    filteredPersonList: []\r\n}\r\n\r\nexport default function PersonListReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case SET_PERSONLIST:\r\n            return {\r\n                ...state,\r\n                personList: [...action.payload]\r\n            }\r\n        case ADD_PERSONLIST:\r\n            return {\r\n                ...state,\r\n                personList: [action.payload, ...state.personList]\r\n            }\r\n        case DELETE_PERSONLIST:\r\n            const deleteDeepClone = [...state.personList];\r\n            return {\r\n                ...state,\r\n                personList: deleteDeepClone.filter((item, index) => index !== action.payload)\r\n            }\r\n        case UPDATE_PERSONLIST:\r\n            const updateDeepClone = [...state.personList];\r\n            return {\r\n                ...state,\r\n                personList: [...updateDeepClone.slice(0, action.payload[0]), action.payload[1], ...updateDeepClone.slice(action.payload[0] + 1)]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}