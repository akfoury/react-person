{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Documents\\\\react-person\\\\src\\\\components\\\\PersonList\\\\PersonList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport './PersonList.css';\nimport $ from \"jquery\";\nimport Scrollbars from 'react-custom-scrollbars';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SendIcon from '@material-ui/icons/Send';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { putFormDataAsJson, deletePerson } from '../../api/PersonAPI';\nimport { convertFormDataToObject } from '../../utils/FormData';\nimport { getListOfFilteredID } from '../../utils/ListFilter';\nimport Button from '@material-ui/core/Button'; // Initialisation des valeurs de filtres\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialFilteredPersonList = {\n  id: '',\n  firstname: '',\n  lastname: '',\n  address: '',\n  isActive: ''\n};\nconst initialSortPersonList = {\n  id: false,\n  firstname: false,\n  lastname: false,\n  address: false,\n  isActive: false\n};\nexport default function PersonList({\n  setPersonList,\n  personList\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [editedRowIndex, setEditedRowIndex] = useState(null);\n  const [filterOptions, setFilterOptions] = useState(initialFilteredPersonList);\n  const [filteredListPerson, setFilteredListPerson] = useState([]);\n  const [sortColumnsStatus, setSortColumnsStatus] = useState(initialSortPersonList);\n  const [actualColumnSorted, setActualColumnSorted] = useState(null); // Gestion du state stockant les valeurs de filtrage\n\n  const handleFormFilterInput = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    setFilterOptions(prevState => {\n      return { ...prevState,\n        [name]: value\n      };\n    });\n  }; // permet de switcher sur le mode édition d'une ligne\n\n\n  const toggleIsEditing = e => {\n    if ($(e.currentTarget).attr('class').includes('editableIcon')) {\n      const personID = $($(e.currentTarget).parents()[3]).find('.personID').text();\n      const editableIndex = personList.findIndex(item => parseInt(item.id) === parseInt(personID));\n      setEditedRowIndex(editableIndex);\n    }\n  }; // Element React pour la modification d'une ligne\n\n\n  const EditableRow = ({\n    value,\n    name,\n    type,\n    lastRow\n  }) => {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"flex-start\",\n          width: lastRow ? '70%' : '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: `MuiTypography-root MuiTypography-h7 MuiTypography-displayInline`,\n          defaultValue: value,\n          name: name,\n          type: type,\n          style: {\n            border: '#008080 solid 0.5px',\n            width: '100%',\n            margin: '2px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this);\n  }; // Gérer le formulaire de la mise à jour d'une personne\n\n\n  const handleFormSubmit = async e => {\n    e.preventDefault(); // Récupérer les données du formulaire\n\n    const personID = $(e.currentTarget).find('.personID').find('input').attr('value');\n    const updateIndex = personList.findIndex(item => parseInt(item.id) === parseInt(personID));\n    const url = `person/${personID}`;\n\n    try {\n      // Requête PUT\n      const {\n        formData,\n        _\n      } = convertFormDataToObject(e);\n      let responseData = await putFormDataAsJson({\n        formData,\n        url\n      });\n      console.log(responseData); // Mise à jour de la liste des utilisateurs\n\n      setPersonList(prevState => {\n        return [...prevState.slice(0, updateIndex), responseData, ...prevState.slice(updateIndex + 1)];\n      });\n      setEditedRowIndex(-1);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  function dynamicSortMultiple() {\n    var props = arguments;\n    return function (obj1, obj2) {\n      var i = 0,\n          result = 0,\n          numberOfProperties = props.length;\n\n      while (result === 0 && i < numberOfProperties) {\n        result = dynamicSort(props[i])(obj1, obj2);\n        i++;\n      }\n\n      return result;\n    };\n  }\n\n  const sortColumn = col => {\n    setSortColumnsStatus(prevState => {\n      return { ...prevState,\n        [col]: !sortColumnsStatus[col]\n      };\n    });\n    setActualColumnSorted(col);\n  };\n\n  console.log(sortColumnsStatus);\n  console.log(actualColumnSorted); // Initialisation du state stockant la liste filtrée\n\n  useEffect(() => {\n    setFilteredListPerson(personList);\n  }, [personList]); // Appel à l'algorithme à chaque fois qu'une valeur de filtrage change\n\n  useEffect(() => {\n    const filteredID = getListOfFilteredID(filterOptions, personList);\n    console.log(typeof filteredID[0]);\n\n    if (filteredID.length != 0) {\n      setFilteredListPerson(personList.filter((item, index) => filteredID.includes(String(item.id))));\n    }\n  }, [filterOptions]);\n  useEffect(() => {\n    People.sort(dynamicSortMultiple(\"Name\", \"-Surname\"));\n    setFilteredListPerson(filteredListPerson.sort((a, b) => a[actualColumnSorted] - b[actualColumnSorted]));\n  }, [sortColumnsStatus, actualColumnSorted]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Scrollbars, {\n      style: {\n        width: '70%',\n        height: '100%'\n      },\n      renderTrackHorizontal: props => /*#__PURE__*/_jsxDEV(\"div\", { ...props,\n        style: {\n          display: 'none'\n        },\n        className: \"track-horizontal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 94\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 16,\n        md: 12,\n        children: /*#__PURE__*/_jsxDEV(List, {\n          className: classes.List,\n          children: [/*#__PURE__*/_jsxDEV(ListItem, {\n            className: classes.listItem,\n            style: {\n              backgroundColor: '#9AC2C980'\n            },\n            children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n              disableTypography: true,\n              primary: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"body2\",\n                style: {\n                  fontWeight: 700,\n                  width: 10,\n                  color: '#004040'\n                },\n                onClick: () => sortColumn(\"id\"),\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 38\n              }, this),\n              className: classes.listItemText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              disableTypography: true,\n              primary: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"body2\",\n                style: {\n                  fontWeight: 700,\n                  width: 10,\n                  color: '#004040'\n                },\n                onClick: () => sortColumn(\"firstname\"),\n                children: \"Pr\\xE9nom\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 38\n              }, this),\n              className: classes.listItemText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              disableTypography: true,\n              primary: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"body2\",\n                style: {\n                  fontWeight: 700,\n                  width: 10,\n                  color: '#004040'\n                },\n                onClick: () => sortColumn(\"lastname\"),\n                children: \"Nom\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 38\n              }, this),\n              className: classes.listItemText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              disableTypography: true,\n              primary: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"body2\",\n                style: {\n                  fontWeight: 700,\n                  width: 10,\n                  color: '#004040'\n                },\n                onClick: () => sortColumn(\"address\"),\n                children: \"Adresse\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 38\n              }, this),\n              className: classes.listItemText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              disableTypography: true,\n              primary: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"body2\",\n                style: {\n                  fontWeight: 700,\n                  width: 10,\n                  color: '#004040',\n                  paddingRight: 30\n                },\n                onClick: () => sortColumn(\"isActive\"),\n                children: \"Actif\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 38\n              }, this),\n              className: classes.listItemText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                edge: \"end\",\n                \"aria-label\": \"delete\",\n                type: \"submit\",\n                children: /*#__PURE__*/_jsxDEV(SendIcon, {\n                  style: {\n                    display: \"none\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                edge: \"end\",\n                \"aria-label\": \"delete\",\n                type: \"submit\",\n                children: /*#__PURE__*/_jsxDEV(SendIcon, {\n                  style: {\n                    display: \"none\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"filterForm\",\n            children: /*#__PURE__*/_jsxDEV(ListItem, {\n              className: classes.listItem,\n              children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                disableTypography: true,\n                primary: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: \"flex\",\n                    justifyContent: \"flex-start\",\n                    width: '100%'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"MuiTypography-root MuiTypography-h7 MuiTypography-displayInline\",\n                    defaultValue: filterOptions[\"id\"],\n                    onChange: handleFormFilterInput,\n                    name: \"id\",\n                    style: {\n                      border: '#008080 solid 0.5px',\n                      width: '100%',\n                      margin: '2px'\n                    },\n                    placeholder: \"Filtrer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 200,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 33\n                }, this),\n                className: classes.listItemText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                disableTypography: true,\n                primary: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: \"flex\",\n                    justifyContent: \"flex-start\",\n                    width: '100%'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"MuiTypography-root MuiTypography-h7 MuiTypography-displayInline\",\n                    defaultValue: filterOptions[\"firstname\"],\n                    onChange: handleFormFilterInput,\n                    name: \"firstname\",\n                    style: {\n                      border: '#008080 solid 0.5px',\n                      width: '100%',\n                      margin: '2px'\n                    },\n                    placeholder: \"Filtrer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 33\n                }, this),\n                className: classes.listItemText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                disableTypography: true,\n                primary: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: \"flex\",\n                    justifyContent: \"flex-start\",\n                    width: '100%'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"MuiTypography-root MuiTypography-h7 MuiTypography-displayInline\",\n                    defaultValue: filterOptions[\"lastname\"],\n                    onChange: handleFormFilterInput,\n                    name: \"lastname\",\n                    style: {\n                      border: '#008080 solid 0.5px',\n                      width: '100%',\n                      margin: '2px'\n                    },\n                    placeholder: \"Filtrer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 33\n                }, this),\n                className: classes.listItemText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                disableTypography: true,\n                primary: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: \"flex\",\n                    justifyContent: \"flex-start\",\n                    width: '100%'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"MuiTypography-root MuiTypography-h7 MuiTypography-displayInline\",\n                    defaultValue: filterOptions[\"address\"],\n                    onChange: handleFormFilterInput,\n                    name: \"address\",\n                    style: {\n                      border: '#008080 solid 0.5px',\n                      width: '100%',\n                      margin: '2px'\n                    },\n                    placeholder: \"Filtrer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 33\n                }, this),\n                className: classes.listItemText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                disableTypography: true,\n                primary: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: \"flex\",\n                    justifyContent: \"flex-start\",\n                    width: '70%'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"MuiTypography-root MuiTypography-h7 MuiTypography-displayInline\",\n                    defaultValue: filterOptions[\"isActive\"],\n                    onChange: handleFormFilterInput,\n                    name: \"isActive\",\n                    style: {\n                      border: '#008080 solid 0.5px',\n                      width: '100%',\n                      margin: '2px'\n                    },\n                    placeholder: \"Filtrer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 33\n                }, this),\n                className: classes.listItemText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 21\n          }, this), filteredListPerson.map((item, index) => index === editedRowIndex ? /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"editForm\",\n            onSubmit: handleFormSubmit,\n            children: /*#__PURE__*/_jsxDEV(ListItem, {\n              className: classes.listItem,\n              children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                disableTypography: true,\n                primary: /*#__PURE__*/_jsxDEV(EditableRow, {\n                  value: item.id,\n                  name: \"id\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 46\n                }, this),\n                className: `${classes.listItemText} personID`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                disableTypography: true,\n                primary: /*#__PURE__*/_jsxDEV(EditableRow, {\n                  value: item.firstname,\n                  name: \"firstname\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 46\n                }, this),\n                className: classes.listItemText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                disableTypography: true,\n                primary: /*#__PURE__*/_jsxDEV(EditableRow, {\n                  value: item.lastname,\n                  name: \"lastname\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 46\n                }, this),\n                className: classes.listItemText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                disableTypography: true,\n                primary: /*#__PURE__*/_jsxDEV(EditableRow, {\n                  value: item.address,\n                  name: \"address\",\n                  type: \"email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 46\n                }, this),\n                className: classes.listItemText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                disableTypography: true,\n                primary: /*#__PURE__*/_jsxDEV(EditableRow, {\n                  value: item.isActive,\n                  name: \"isActive\",\n                  lastRow: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 46\n                }, this),\n                className: classes.listItemText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  edge: \"end\",\n                  \"aria-label\": \"delete\",\n                  type: \"submit\",\n                  children: /*#__PURE__*/_jsxDEV(SendIcon, {\n                    style: {\n                      fill: \"#008080\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 304,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(ListItem, {\n            className: classes.listItem,\n            children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n              disableTypography: true,\n              primary: /*#__PURE__*/_jsxDEV(Typography, {\n                type: \"body2\",\n                children: item.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 38\n              }, this),\n              className: `${classes.listItemText} personID`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              disableTypography: true,\n              primary: /*#__PURE__*/_jsxDEV(Typography, {\n                type: \"body2\",\n                children: item.firstname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 38\n              }, this),\n              className: classes.listItemText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              disableTypography: true,\n              primary: /*#__PURE__*/_jsxDEV(Typography, {\n                type: \"body2\",\n                children: item.lastname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 38\n              }, this),\n              className: classes.listItemText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              disableTypography: true,\n              primary: /*#__PURE__*/_jsxDEV(Typography, {\n                type: \"body2\",\n                children: item.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 38\n              }, this),\n              className: classes.listItemText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              disableTypography: true,\n              primary: /*#__PURE__*/_jsxDEV(Typography, {\n                type: \"body2\",\n                children: item.isActive ? '1' : '0'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 38\n              }, this),\n              className: classes.listItemText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                edge: \"end\",\n                \"aria-label\": \"edit\",\n                children: /*#__PURE__*/_jsxDEV(EditIcon, {\n                  style: {\n                    fill: \"#008080\"\n                  },\n                  onClick: toggleIsEditing,\n                  className: \"editableIcon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                edge: \"end\",\n                \"aria-label\": \"delete\",\n                children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n                  style: {\n                    fill: \"#008080\"\n                  },\n                  onClick: e => {\n                    const personID = $($(e.currentTarget).parents()[3]).find('.personID').text();\n                    deletePerson(e, personID).then(() => {\n                      // Récuperer l'index de l'élément à supprimer\n                      const removeIndex = personList.findIndex(item => item.id === parseInt(personID)); // Faire une copie du state\n\n                      const newArray = [...personList]; // Supprimer l'élément du nouveau tableau\n\n                      newArray.splice(removeIndex, 1); // Mettre à jour le state\n\n                      setPersonList(newArray);\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 21\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(PersonList, \"AWgIcwhKH0Sn+2u1OgtqCDK9dsE=\", false, function () {\n  return [useStyles];\n});\n\n_c = PersonList;\nconst useStyles = makeStyles(theme => ({\n  listItem: {\n    backgroundColor: 'none',\n    \"&:hover\": {\n      backgroundColor: 'rgba(0,0,0,0.05);',\n      cursor: 'pointer'\n    },\n    padding: 4\n  },\n  listItemText: {\n    display: 'flex',\n    justifyContent: 'flex-start',\n    '&:nth-child(1)': {\n      width: '10%',\n      justifyContent: 'center'\n    },\n    '&:nth-child(2)': {\n      width: '20%'\n    },\n    '&:nth-child(3)': {\n      width: '20%'\n    },\n    '&:nth-child(4)': {\n      width: '30%'\n    },\n    '&:nth-child(5)': {\n      width: '20%'\n    }\n  },\n  button: {\n    margin: theme.spacing(1),\n    [theme.breakpoints.down(\"sm\")]: {\n      minWidth: 32,\n      paddingLeft: 8,\n      paddingRight: 8,\n      marginBottom: 40,\n      cursor: \"pointer\",\n      \"& .MuiButton-startIcon\": {\n        margin: 0\n      }\n    }\n  },\n  buttonText: {\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\"\n    },\n    display: \"flex\",\n    marginRight: 5\n  },\n  List: {\n    padding: 0\n  },\n  Input: {\n    '&:nth-child(5)': {\n      width: '70%'\n    }\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"PersonList\");","map":{"version":3,"sources":["C:/Users/Alex/Documents/react-person/src/components/PersonList/PersonList.js"],"names":["React","useState","useEffect","$","Scrollbars","makeStyles","List","ListItem","ListItemSecondaryAction","ListItemText","IconButton","Grid","Typography","CloseIcon","SendIcon","EditIcon","putFormDataAsJson","deletePerson","convertFormDataToObject","getListOfFilteredID","Button","initialFilteredPersonList","id","firstname","lastname","address","isActive","initialSortPersonList","PersonList","setPersonList","personList","classes","useStyles","editedRowIndex","setEditedRowIndex","filterOptions","setFilterOptions","filteredListPerson","setFilteredListPerson","sortColumnsStatus","setSortColumnsStatus","actualColumnSorted","setActualColumnSorted","handleFormFilterInput","e","value","name","target","prevState","toggleIsEditing","currentTarget","attr","includes","personID","parents","find","text","editableIndex","findIndex","item","parseInt","EditableRow","type","lastRow","display","justifyContent","width","border","margin","handleFormSubmit","preventDefault","updateIndex","url","formData","_","responseData","console","log","slice","error","dynamicSortMultiple","props","arguments","obj1","obj2","i","result","numberOfProperties","length","dynamicSort","sortColumn","col","filteredID","filter","index","String","People","sort","a","b","height","listItem","backgroundColor","fontWeight","color","listItemText","paddingRight","map","fill","then","removeIndex","newArray","splice","theme","cursor","padding","button","spacing","breakpoints","down","minWidth","paddingLeft","marginBottom","buttonText","marginRight","Input"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport './PersonList.css';\r\nimport $ from \"jquery\";\r\nimport Scrollbars from 'react-custom-scrollbars';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { putFormDataAsJson, deletePerson } from '../../api/PersonAPI';\r\nimport { convertFormDataToObject } from '../../utils/FormData';\r\nimport { getListOfFilteredID } from '../../utils/ListFilter';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n// Initialisation des valeurs de filtres\r\nconst initialFilteredPersonList = {\r\n    id: '',\r\n    firstname: '',\r\n    lastname: '',\r\n    address: '',\r\n    isActive: ''\r\n}\r\n\r\nconst initialSortPersonList = {\r\n    id: false,\r\n    firstname: false,\r\n    lastname: false,\r\n    address: false,\r\n    isActive: false\r\n}\r\n\r\nexport default function PersonList({ setPersonList, personList }) {\r\n    const classes = useStyles();\r\n    const [editedRowIndex, setEditedRowIndex] = useState(null);\r\n    const [filterOptions, setFilterOptions]  = useState(initialFilteredPersonList);\r\n    const [filteredListPerson, setFilteredListPerson] = useState([]);\r\n    const [sortColumnsStatus, setSortColumnsStatus] = useState(initialSortPersonList);\r\n    const [actualColumnSorted, setActualColumnSorted] = useState(null);\r\n\r\n    // Gestion du state stockant les valeurs de filtrage\r\n    const handleFormFilterInput = (e) => {\r\n        const { value, name } = e.target;\r\n        setFilterOptions(prevState => {\r\n            return {...prevState, [name]: value}\r\n        });\r\n    }\r\n\r\n    // permet de switcher sur le mode édition d'une ligne\r\n    const toggleIsEditing = (e) => {\r\n        if ($(e.currentTarget).attr('class').includes('editableIcon')) {\r\n            const personID = $($(e.currentTarget).parents()[3]).find('.personID').text();\r\n            const editableIndex = personList.findIndex(item => parseInt(item.id) === parseInt(personID));\r\n            setEditedRowIndex(editableIndex);\r\n        }\r\n    }   \r\n\r\n    // Element React pour la modification d'une ligne\r\n    const EditableRow = ({ value, name, type, lastRow }) => {\r\n        return (\r\n            <React.Fragment>\r\n            <div style={{ display: \"flex\", justifyContent: \"flex-start\", width: lastRow ? '70%' : '100%' }}>\r\n                <input\r\n                    className={`MuiTypography-root MuiTypography-h7 MuiTypography-displayInline`}\r\n                    defaultValue={value}\r\n                    name={name}\r\n                    type={type}\r\n                    style={{border: '#008080 solid 0.5px', width: '100%', margin: '2px'}}\r\n                />\r\n            </div>\r\n            </React.Fragment>\r\n        )\r\n    };\r\n\r\n    // Gérer le formulaire de la mise à jour d'une personne\r\n    const handleFormSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Récupérer les données du formulaire\r\n        const personID = $(e.currentTarget).find('.personID').find('input').attr('value');\r\n        const updateIndex = personList.findIndex(item => parseInt(item.id) === parseInt(personID));\r\n        const url = `person/${personID}`;\r\n\r\n        try {\r\n            // Requête PUT\r\n            const { formData, _} = convertFormDataToObject(e);\r\n            let responseData = await putFormDataAsJson({ formData, url });\r\n            console.log(responseData);\r\n\r\n            // Mise à jour de la liste des utilisateurs\r\n            setPersonList(prevState => {\r\n                return  [...prevState.slice(0, updateIndex), responseData, ...prevState.slice(updateIndex + 1)];\r\n            });\r\n\r\n            setEditedRowIndex(-1);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    function dynamicSortMultiple() {\r\n        var props = arguments;\r\n        return function (obj1, obj2) {\r\n            var i = 0, result = 0, numberOfProperties = props.length;\r\n            while(result === 0 && i < numberOfProperties) {\r\n                result = dynamicSort(props[i])(obj1, obj2);\r\n                i++;\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n\r\n    const sortColumn = (col) => {\r\n        setSortColumnsStatus(prevState => {\r\n            return {...prevState, [col]: !sortColumnsStatus[col]}\r\n        });\r\n        setActualColumnSorted(col);\r\n    }\r\n    console.log(sortColumnsStatus);\r\n    console.log(actualColumnSorted);\r\n\r\n    // Initialisation du state stockant la liste filtrée\r\n    useEffect(() => {\r\n        setFilteredListPerson(personList);\r\n    }, [personList]);\r\n\r\n    // Appel à l'algorithme à chaque fois qu'une valeur de filtrage change\r\n    useEffect(() => {\r\n        const filteredID = getListOfFilteredID(filterOptions, personList);\r\n        console.log(typeof(filteredID[0]))\r\n        if (filteredID.length != 0) {\r\n            setFilteredListPerson(personList.filter((item, index) => filteredID.includes(String(item.id))));\r\n        }\r\n    }, [filterOptions]);\r\n\r\n    useEffect(() => {\r\n        People.sort(dynamicSortMultiple(\"Name\", \"-Surname\"));\r\n        setFilteredListPerson(filteredListPerson.sort((a, b) => a[actualColumnSorted]-b[actualColumnSorted]));\r\n    }, [sortColumnsStatus, actualColumnSorted]);\r\n\r\n    return (\r\n        <>\r\n        <Scrollbars style={{ width: '70%', height: '100%' }} renderTrackHorizontal={props => <div {...props} style={{display: 'none'}} className=\"track-horizontal\"/>}>\r\n          <Grid item xs={16} md={12}>\r\n              <List className={classes.List}>\r\n                    <ListItem className={classes.listItem} style={{ backgroundColor: '#9AC2C980' }}>\r\n                        <ListItemText\r\n                            disableTypography\r\n                            primary={<Button type=\"body2\" style={{ fontWeight: 700, width: 10, color: '#004040' }} onClick={() => sortColumn(\"id\")}>ID</Button>}\r\n                            className={classes.listItemText}\r\n                        />\r\n                        <ListItemText\r\n                            disableTypography\r\n                            primary={<Button type=\"body2\" style={{ fontWeight: 700, width: 10, color: '#004040' }} onClick={() => sortColumn(\"firstname\")}>Prénom</Button>}\r\n                            className={classes.listItemText}\r\n                        />\r\n                        <ListItemText\r\n                            disableTypography\r\n                            primary={<Button type=\"body2\" style={{ fontWeight: 700, width: 10, color: '#004040' }} onClick={() => sortColumn(\"lastname\")}>Nom</Button>}\r\n                            className={classes.listItemText}\r\n                        />\r\n                        <ListItemText\r\n                            disableTypography\r\n                            primary={<Button type=\"body2\" style={{ fontWeight: 700, width: 10, color: '#004040' }} onClick={() => sortColumn(\"address\")}>Adresse</Button>}\r\n                            className={classes.listItemText}\r\n                        />\r\n                        <ListItemText\r\n                            disableTypography\r\n                            primary={<Button type=\"body2\" style={{ fontWeight: 700, width: 10, color: '#004040', paddingRight: 30 }} onClick={() => sortColumn(\"isActive\")}>Actif</Button>}\r\n                            className={classes.listItemText}\r\n                        />\r\n                        <ListItemSecondaryAction>\r\n                            <IconButton edge=\"end\" aria-label=\"delete\" type=\"submit\">\r\n                                <SendIcon \r\n                                    style={{display: \"none\"}} \r\n                                />\r\n                            </IconButton>\r\n                        </ListItemSecondaryAction>\r\n                        <ListItemSecondaryAction>\r\n                            <IconButton edge=\"end\" aria-label=\"delete\" type=\"submit\">\r\n                                <SendIcon \r\n                                    style={{display: \"none\"}} \r\n                                />\r\n                            </IconButton>\r\n                        </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                    <form className=\"filterForm\">\r\n                        <ListItem className={classes.listItem}>\r\n                            <ListItemText\r\n                                disableTypography\r\n                                primary={\r\n                                <div style={{ display: \"flex\", justifyContent: \"flex-start\", width: '100%' }}>\r\n                                    <input\r\n                                        className=\"MuiTypography-root MuiTypography-h7 MuiTypography-displayInline\"\r\n                                        defaultValue={filterOptions[\"id\"]}\r\n                                        onChange={handleFormFilterInput}\r\n                                        name={\"id\"}\r\n                                        style={{border: '#008080 solid 0.5px', width: '100%', margin: '2px'}}\r\n                                        placeholder=\"Filtrer\"\r\n                                    />\r\n                                </div>}\r\n                                className={classes.listItemText} \r\n                            />\r\n                            <ListItemText\r\n                                disableTypography\r\n                                primary={\r\n                                <div style={{ display: \"flex\", justifyContent: \"flex-start\", width: '100%' }}>\r\n                                    <input\r\n                                        className=\"MuiTypography-root MuiTypography-h7 MuiTypography-displayInline\"\r\n                                        defaultValue={filterOptions[\"firstname\"]}\r\n                                        onChange={handleFormFilterInput}\r\n                                        name={\"firstname\"}\r\n                                        style={{border: '#008080 solid 0.5px', width: '100%', margin: '2px'}}\r\n                                        placeholder=\"Filtrer\"\r\n                                    />\r\n                                </div>}\r\n                                className={classes.listItemText}\r\n                            />\r\n                            <ListItemText\r\n                                disableTypography\r\n                                primary={\r\n                                <div style={{ display: \"flex\", justifyContent: \"flex-start\", width: '100%' }}>\r\n                                    <input\r\n                                        className=\"MuiTypography-root MuiTypography-h7 MuiTypography-displayInline\"\r\n                                        defaultValue={filterOptions[\"lastname\"]}\r\n                                        onChange={handleFormFilterInput}\r\n                                        name={\"lastname\"}\r\n                                        style={{border: '#008080 solid 0.5px', width: '100%', margin: '2px'}}\r\n                                        placeholder=\"Filtrer\"\r\n                                    />\r\n                                </div>}\r\n                                className={classes.listItemText}\r\n                            />\r\n                            <ListItemText\r\n                                disableTypography\r\n                                primary={\r\n                                <div style={{ display: \"flex\", justifyContent: \"flex-start\", width: '100%' }}>\r\n                                    <input\r\n                                        className=\"MuiTypography-root MuiTypography-h7 MuiTypography-displayInline\"\r\n                                        defaultValue={filterOptions[\"address\"]}\r\n                                        onChange={handleFormFilterInput}\r\n                                        name={\"address\"}\r\n                                        style={{border: '#008080 solid 0.5px', width: '100%', margin: '2px'}}\r\n                                        placeholder=\"Filtrer\"    \r\n                                    />\r\n                                </div>}\r\n                                className={classes.listItemText}\r\n                            />\r\n                            <ListItemText\r\n                                disableTypography\r\n                                primary={\r\n                                <div style={{ display: \"flex\", justifyContent: \"flex-start\", width: '70%' }}>\r\n                                    <input\r\n                                        className=\"MuiTypography-root MuiTypography-h7 MuiTypography-displayInline\"\r\n                                        defaultValue={filterOptions[\"isActive\"]}\r\n                                        onChange={handleFormFilterInput}\r\n                                        name={\"isActive\"}\r\n                                        style={{border: '#008080 solid 0.5px', width: '100%', margin: '2px'}}\r\n                                        placeholder=\"Filtrer\"\r\n                                    />\r\n                                </div>}\r\n                                className={classes.listItemText}\r\n                            />\r\n                        </ListItem>\r\n                    </form>\r\n                {filteredListPerson.map((item, index) => (\r\n                    index === editedRowIndex ? ( \r\n                        <form className=\"editForm\" onSubmit={handleFormSubmit}>\r\n                            <ListItem className={classes.listItem}>\r\n                                <ListItemText\r\n                                    disableTypography\r\n                                    primary={<EditableRow value={item.id} name={\"id\"}/>}\r\n                                    className={`${classes.listItemText} personID`}\r\n                                />\r\n                                <ListItemText\r\n                                    disableTypography\r\n                                    primary={<EditableRow value={item.firstname} name={\"firstname\"} />}\r\n                                    className={classes.listItemText}\r\n                                />\r\n                                <ListItemText\r\n                                    disableTypography\r\n                                    primary={<EditableRow value={item.lastname} name={\"lastname\"} />}\r\n                                    className={classes.listItemText}\r\n                                />\r\n                                <ListItemText\r\n                                    disableTypography\r\n                                    primary={<EditableRow value={item.address} name={\"address\"} type={\"email\"}/>}\r\n                                    className={classes.listItemText}\r\n                                />\r\n                                <ListItemText\r\n                                    disableTypography\r\n                                    primary={<EditableRow value={item.isActive} name={\"isActive\"} lastRow={true} />}\r\n                                    className={classes.listItemText}\r\n                                />\r\n                                <ListItemSecondaryAction>\r\n                                    <IconButton edge=\"end\" aria-label=\"delete\" type=\"submit\">\r\n                                        <SendIcon \r\n                                            style={{fill: \"#008080\"}} \r\n                                        />\r\n                                    </IconButton>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                       </form>\r\n                        ) : (\r\n                    <ListItem className={classes.listItem}>\r\n                            <ListItemText\r\n                            disableTypography\r\n                            primary={<Typography type=\"body2\">{item.id}</Typography>}\r\n                            className={`${classes.listItemText} personID`}\r\n                            />\r\n                            <ListItemText\r\n                            disableTypography\r\n                            primary={<Typography type=\"body2\" >{item.firstname}</Typography>}\r\n                            className={classes.listItemText}\r\n                            />\r\n                            <ListItemText\r\n                            disableTypography\r\n                            primary={<Typography type=\"body2\">{item.lastname}</Typography>}\r\n                            className={classes.listItemText}\r\n                            />\r\n                            <ListItemText\r\n                            disableTypography\r\n                            primary={<Typography type=\"body2\">{item.address}</Typography>}\r\n                            className={classes.listItemText}\r\n                            />\r\n                            <ListItemText\r\n                            disableTypography\r\n                            primary={<Typography type=\"body2\">{item.isActive ? '1' : '0'}</Typography>}\r\n                            className={classes.listItemText}\r\n                            />\r\n                        <ListItemSecondaryAction>\r\n                        <IconButton edge=\"end\" aria-label=\"edit\">\r\n                            <EditIcon \r\n                                style={{fill: \"#008080\"}} \r\n                                onClick={toggleIsEditing}\r\n                                className=\"editableIcon\" \r\n                            />\r\n                        </IconButton>\r\n                        <IconButton edge=\"end\" aria-label=\"delete\">\r\n                            <CloseIcon \r\n                                style={{fill: \"#008080\"}} \r\n                                onClick={(e) => {\r\n                                    const personID = $($(e.currentTarget).parents()[3]).find('.personID').text();\r\n                                    deletePerson(e, personID).then(() => {\r\n                                        // Récuperer l'index de l'élément à supprimer\r\n                                        const removeIndex = personList.findIndex(item => item.id === parseInt(personID));\r\n                                    \r\n                                        // Faire une copie du state\r\n                                        const newArray = [...personList];\r\n                                    \r\n                                        // Supprimer l'élément du nouveau tableau\r\n                                        newArray.splice(removeIndex, 1);\r\n                                    \r\n                                        // Mettre à jour le state\r\n                                        setPersonList(newArray);\r\n                                    });\r\n                                }} \r\n                            />\r\n                        </IconButton>\r\n                        </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                    )\r\n                ))}\r\n              </List>\r\n          </Grid>\r\n        </Scrollbars>\r\n        </>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    listItem: {\r\n      backgroundColor: 'none',\r\n      \"&:hover\": {\r\n          backgroundColor: 'rgba(0,0,0,0.05);',\r\n          cursor: 'pointer'\r\n      },\r\n      padding: 4,\r\n    },\r\n    listItemText: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-start',\r\n        '&:nth-child(1)': {\r\n            width: '10%',\r\n            justifyContent: 'center',\r\n        },\r\n        '&:nth-child(2)': {\r\n            width: '20%'\r\n        },\r\n        '&:nth-child(3)': {\r\n            width: '20%'\r\n        },\r\n        '&:nth-child(4)': {\r\n            width: '30%'\r\n        },\r\n        '&:nth-child(5)': {\r\n            width: '20%',\r\n        }\r\n    },\r\n    button: {\r\n      margin: theme.spacing(1),\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n        minWidth: 32,\r\n        paddingLeft: 8,\r\n        paddingRight: 8,\r\n        marginBottom: 40,\r\n        cursor: \"pointer\",\r\n        \"& .MuiButton-startIcon\": {\r\n          margin: 0\r\n        }\r\n      }\r\n    },\r\n    buttonText: {\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n        display: \"none\"\r\n      },\r\n      display: \"flex\",\r\n      marginRight: 5\r\n    },\r\n    List: {\r\n        padding: 0,\r\n    },\r\n    Input: {\r\n        '&:nth-child(5)': {\r\n            width: '70%'\r\n        }\r\n    }\r\n}));"]},"metadata":{},"sourceType":"module"}