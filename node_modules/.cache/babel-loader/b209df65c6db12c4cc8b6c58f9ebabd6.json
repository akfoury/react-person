{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Documents\\\\react-person\\\\src\\\\components\\\\PersonList\\\\PersonList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport './PersonList.css';\nimport $ from \"jquery\";\nimport { convertFormDataToObject } from '../../utils/FormData';\nimport { getListOfFilteredID } from '../../utils/ListFilter';\nimport { putFormDataAsJson, deletePerson, getAllPersonSorteredByColumn, deleteAllPerson } from '../../api/PersonAPI';\nimport { List, ListItem, ListItemSecondaryAction, ListItemText, IconButton, Grid, Typography, Button, Chip } from '@mui/material';\nimport { Close, FilterList, Send, Edit, ClearAll } from '@mui/icons-material'; // Initialisation des valeurs de filtres\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialFilteredPersonList = {\n  id: '',\n  firstname: '',\n  lastname: '',\n  address: '',\n  isActive: ''\n};\nconst initialSortPersonList = {\n  id: false,\n  firstname: false,\n  lastname: false,\n  address: false,\n  isActive: false\n};\nexport default function PersonList({\n  setPersonList,\n  personList\n}) {\n  _s();\n\n  const [editedRowIndex, setEditedRowIndex] = useState(null);\n  const [filterOptions, setFilterOptions] = useState(initialFilteredPersonList);\n  const [filteredListPerson, setFilteredListPerson] = useState([]);\n  const [sortColumnsStatus, setSortColumnsStatus] = useState(initialSortPersonList);\n  const [actualColumnSorted, setActualColumnSorted] = useState(\"id\"); // Gestion du state stockant les valeurs de filtrage\n\n  const handleFormFilterInput = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    setFilterOptions(prevState => {\n      return { ...prevState,\n        [name]: value\n      };\n    });\n  }; // permet de switcher sur le mode édition d'une ligne\n\n\n  const toggleIsEditing = e => {\n    const personID = $(e.currentTarget).data(\"idedit\");\n    const editableIndex = filteredListPerson.findIndex(item => parseInt(item.id) === parseInt(personID));\n    setEditedRowIndex(editableIndex);\n  }; // gestion du button delete\n\n\n  const handleDelete = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    const personID = $(e.currentTarget).data(\"iddelete\");\n    deletePerson(personID).then(() => {\n      // Récuperer l'index de l'élément à supprimer\n      const removeIndex = filteredListPerson.findIndex(item => item.id === parseInt(personID)); // Faire une copie du state\n\n      const newArray = [...filteredListPerson]; // Supprimer l'élément du nouveau tableau\n\n      newArray.splice(removeIndex, 1); // Mettre à jour le state\n\n      setFilteredListPerson(newArray);\n    });\n  };\n\n  const handleDeleteAll = e => {\n    e.preventDefault();\n    e.stopPropagation();\n  }; // Element React pour la modification d'une ligne\n\n\n  const EditableRow = ({\n    value,\n    name,\n    type,\n    lastRow\n  }) => {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"flex-start\",\n          width: lastRow ? '70%' : '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          defaultValue: value,\n          name: name,\n          type: type,\n          style: {\n            border: '#008080 solid 0.5px',\n            width: '100%',\n            margin: '2px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this);\n  }; // Gérer le formulaire de la mise à jour d'une personne\n\n\n  const handleFormSubmit = async e => {\n    e.preventDefault(); // Récupérer les données du formulaire\n\n    const personID = $(e.currentTarget).find('.personID').find('input').attr('value');\n    const updateIndex = filteredListPerson.findIndex(item => parseInt(item.id) === parseInt(personID));\n    const url = `person/${personID}`;\n\n    try {\n      // Requête PUT\n      const {\n        formData,\n        _\n      } = convertFormDataToObject(e);\n      let responseData = await putFormDataAsJson({\n        formData,\n        url\n      }); // Mise à jour de la liste des utilisateurs\n\n      setPersonList(prevState => {\n        return [...prevState.slice(0, updateIndex), responseData, ...prevState.slice(updateIndex + 1)];\n      });\n      setEditedRowIndex(-1);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const sortColumn = col => {\n    setSortColumnsStatus(prevState => {\n      return { ...prevState,\n        [col]: !sortColumnsStatus[col]\n      };\n    });\n    setActualColumnSorted(col);\n    $('.columnFilter').val(\"\");\n  }; // Initialisation du state stockant la liste filtrée\n\n\n  useEffect(() => {\n    setFilteredListPerson(personList);\n  }, [personList]); // Appel à l'algorithme à chaque fois qu'une valeur de filtrage change\n\n  useEffect(() => {\n    const filteredID = getListOfFilteredID(filterOptions, personList);\n\n    if (filteredID.length != 0) {\n      setFilteredListPerson(personList.filter((item, index) => filteredID.includes(String(item.id))));\n    }\n  }, [filterOptions]);\n  useEffect(() => {\n    if (sortColumnsStatus[actualColumnSorted]) {\n      getAllPersonSorteredByColumn(actualColumnSorted, \"desc\").then(data => {\n        setFilteredListPerson(data);\n      });\n    } else {\n      getAllPersonSorteredByColumn(actualColumnSorted, \"asc\").then(data => {\n        setFilteredListPerson(data);\n      });\n    }\n  }, [actualColumnSorted, sortColumnsStatus]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 16,\n    md: 12,\n    className: \"grid\",\n    children: /*#__PURE__*/_jsxDEV(List, {\n      className: \"list\",\n      children: [/*#__PURE__*/_jsxDEV(ListItem, {\n        className: \"list-item\",\n        style: {\n          backgroundColor: '#9AC2C980'\n        },\n        children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n          disableTypography: true,\n          primary: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"body2\",\n            style: {\n              fontWeight: 700,\n              width: 10,\n              color: '#004040'\n            },\n            onClick: () => sortColumn(\"id\"),\n            endIcon: /*#__PURE__*/_jsxDEV(FilterList, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 154\n            }, this),\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 34\n          }, this),\n          className: \"list-item-text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          disableTypography: true,\n          primary: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"body2\",\n            style: {\n              fontWeight: 700,\n              width: 10,\n              color: '#004040'\n            },\n            onClick: () => sortColumn(\"firstname\"),\n            endIcon: /*#__PURE__*/_jsxDEV(FilterList, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 161\n            }, this),\n            children: \"Pr\\xE9nom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 34\n          }, this),\n          className: \"list-item-text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          disableTypography: true,\n          primary: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"body2\",\n            style: {\n              fontWeight: 700,\n              width: 10,\n              color: '#004040'\n            },\n            onClick: () => sortColumn(\"lastname\"),\n            endIcon: /*#__PURE__*/_jsxDEV(FilterList, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 160\n            }, this),\n            children: \"Nom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 34\n          }, this),\n          className: \"list-item-text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          disableTypography: true,\n          primary: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"body2\",\n            style: {\n              fontWeight: 700,\n              width: 10,\n              color: '#004040'\n            },\n            onClick: () => sortColumn(\"address\"),\n            endIcon: /*#__PURE__*/_jsxDEV(FilterList, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 159\n            }, this),\n            children: \"Adresse\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 34\n          }, this),\n          className: \"list-item-text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          disableTypography: true,\n          primary: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"body2\",\n            style: {\n              fontWeight: 700,\n              width: 10,\n              color: '#004040',\n              paddingRight: 30\n            },\n            onClick: () => sortColumn(\"isActive\"),\n            endIcon: /*#__PURE__*/_jsxDEV(FilterList, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 178\n            }, this),\n            children: \"Actif\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 34\n          }, this),\n          className: \"list-item-text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            edge: \"end\",\n            \"aria-label\": \"delete\",\n            type: \"submit\",\n            children: /*#__PURE__*/_jsxDEV(Send, {\n              style: {\n                display: \"none\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            edge: \"end\",\n            \"aria-label\": \"delete\",\n            type: \"submit\",\n            children: /*#__PURE__*/_jsxDEV(Send, {\n              style: {\n                display: \"none\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"filterForm\",\n        children: /*#__PURE__*/_jsxDEV(ListItem, {\n          className: \"list-item\",\n          children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n            disableTypography: true,\n            primary: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                justifyContent: \"flex-start\",\n                width: '100%'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"MuiTypography-root MuiTypography-h7 MuiTypography-displayInline columnFilter\",\n                defaultValue: filterOptions[\"id\"],\n                onChange: handleFormFilterInput,\n                name: \"id\",\n                style: {\n                  border: '#008080 solid 0.5px',\n                  width: '100%',\n                  margin: '2px'\n                },\n                placeholder: \"Filtrer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 29\n            }, this),\n            className: \"list-item-text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            disableTypography: true,\n            primary: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                justifyContent: \"flex-start\",\n                width: '100%'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"MuiTypography-root MuiTypography-h7 MuiTypography-displayInline columnFilter\",\n                defaultValue: filterOptions[\"firstname\"],\n                onChange: handleFormFilterInput,\n                name: \"firstname\",\n                style: {\n                  border: '#008080 solid 0.5px',\n                  width: '100%',\n                  margin: '2px'\n                },\n                placeholder: \"Filtrer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 29\n            }, this),\n            className: \"list-item-text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            disableTypography: true,\n            primary: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                justifyContent: \"flex-start\",\n                width: '100%'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"MuiTypography-root MuiTypography-h7 MuiTypography-displayInline columnFilter\",\n                defaultValue: filterOptions[\"lastname\"],\n                onChange: handleFormFilterInput,\n                name: \"lastname\",\n                style: {\n                  border: '#008080 solid 0.5px',\n                  width: '100%',\n                  margin: '2px'\n                },\n                placeholder: \"Filtrer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 29\n            }, this),\n            className: \"list-item-text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            disableTypography: true,\n            primary: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                justifyContent: \"flex-start\",\n                width: '100%'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"MuiTypography-root MuiTypography-h7 MuiTypography-displayInline columnFilter\",\n                defaultValue: filterOptions[\"address\"],\n                onChange: handleFormFilterInput,\n                name: \"address\",\n                style: {\n                  border: '#008080 solid 0.5px',\n                  width: '100%',\n                  margin: '2px'\n                },\n                placeholder: \"Filtrer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 29\n            }, this),\n            className: \"list-item-text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            disableTypography: true,\n            primary: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                justifyContent: \"flex-start\",\n                width: '70%'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"MuiTypography-root MuiTypography-h7 MuiTypography-displayInline columnFilter\",\n                defaultValue: filterOptions[\"isActive\"],\n                onChange: handleFormFilterInput,\n                name: \"isActive\",\n                style: {\n                  border: '#008080 solid 0.5px',\n                  width: '100%',\n                  margin: '2px'\n                },\n                placeholder: \"Filtrer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 29\n            }, this),\n            className: \"list-item-text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              edge: \"end\",\n              \"aria-label\": \"deleteall\",\n              children: /*#__PURE__*/_jsxDEV(ClearAll, {\n                style: {\n                  fill: \"#008080\"\n                },\n                fontSize: \"large\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this), filteredListPerson.map((item, index) => index === editedRowIndex ? /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"editForm\",\n        onSubmit: handleFormSubmit,\n        children: /*#__PURE__*/_jsxDEV(ListItem, {\n          className: \"list-item\",\n          children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n            disableTypography: true,\n            primary: /*#__PURE__*/_jsxDEV(EditableRow, {\n              value: item.id,\n              name: \"id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 42\n            }, this),\n            className: \"list-item-text personID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            disableTypography: true,\n            primary: /*#__PURE__*/_jsxDEV(EditableRow, {\n              value: item.firstname,\n              name: \"firstname\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 42\n            }, this),\n            className: \"list-item-text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            disableTypography: true,\n            primary: /*#__PURE__*/_jsxDEV(EditableRow, {\n              value: item.lastname,\n              name: \"lastname\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 42\n            }, this),\n            className: \"list-item-text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            disableTypography: true,\n            primary: /*#__PURE__*/_jsxDEV(EditableRow, {\n              value: item.address,\n              name: \"address\",\n              type: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 42\n            }, this),\n            className: \"list-item-text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            disableTypography: true,\n            primary: /*#__PURE__*/_jsxDEV(EditableRow, {\n              value: item.isActive,\n              name: \"isActive\",\n              lastRow: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 42\n            }, this),\n            className: \"list-item-text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              edge: \"end\",\n              \"aria-label\": \"edit\",\n              type: \"submit\",\n              children: /*#__PURE__*/_jsxDEV(Send, {\n                style: {\n                  fill: \"#008080\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(ListItem, {\n        className: \"list-item\",\n        children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n          disableTypography: true,\n          primary: /*#__PURE__*/_jsxDEV(Typography, {\n            type: \"body2\",\n            children: item.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 34\n          }, this),\n          className: \"list-item-text personID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          disableTypography: true,\n          primary: /*#__PURE__*/_jsxDEV(Typography, {\n            type: \"body2\",\n            children: item.firstname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 34\n          }, this),\n          className: \"list-item-text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          disableTypography: true,\n          primary: /*#__PURE__*/_jsxDEV(Typography, {\n            type: \"body2\",\n            children: item.lastname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 34\n          }, this),\n          className: \"list-item-text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          disableTypography: true,\n          primary: /*#__PURE__*/_jsxDEV(Typography, {\n            type: \"body2\",\n            children: item.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 34\n          }, this),\n          className: \"list-item-text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          disableTypography: true,\n          primary: parseInt(item.isActive) ? /*#__PURE__*/_jsxDEV(Chip, {\n            style: {\n              backgroundColor: 'rgba(53, 219, 94, 0.8)',\n              color: 'white',\n              fontWeight: 700\n            },\n            label: \"Actif\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 60\n          }, this) : /*#__PURE__*/_jsxDEV(Chip, {\n            style: {\n              backgroundColor: 'rgba(209, 42, 23, 0.8)',\n              color: 'white',\n              fontWeight: 700\n            },\n            label: \"Inactif\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 170\n          }, this),\n          className: \"list-item-text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            edge: \"end\",\n            \"aria-label\": \"edit\",\n            onClick: toggleIsEditing,\n            \"data-idedit\": item.id,\n            children: /*#__PURE__*/_jsxDEV(Edit, {\n              style: {\n                fill: \"#008080\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            edge: \"end\",\n            \"aria-label\": \"delete\",\n            onClick: handleDelete,\n            \"data-iddelete\": item.id,\n            children: /*#__PURE__*/_jsxDEV(Close, {\n              style: {\n                fill: \"#008080\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PersonList, \"23KhZQDHFmSVdN/mo85NwkKCMK4=\");\n\n_c = PersonList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PersonList\");","map":{"version":3,"sources":["C:/Users/Alex/Documents/react-person/src/components/PersonList/PersonList.js"],"names":["React","useState","useEffect","$","convertFormDataToObject","getListOfFilteredID","putFormDataAsJson","deletePerson","getAllPersonSorteredByColumn","deleteAllPerson","List","ListItem","ListItemSecondaryAction","ListItemText","IconButton","Grid","Typography","Button","Chip","Close","FilterList","Send","Edit","ClearAll","initialFilteredPersonList","id","firstname","lastname","address","isActive","initialSortPersonList","PersonList","setPersonList","personList","editedRowIndex","setEditedRowIndex","filterOptions","setFilterOptions","filteredListPerson","setFilteredListPerson","sortColumnsStatus","setSortColumnsStatus","actualColumnSorted","setActualColumnSorted","handleFormFilterInput","e","value","name","target","prevState","toggleIsEditing","personID","currentTarget","data","editableIndex","findIndex","item","parseInt","handleDelete","preventDefault","stopPropagation","then","removeIndex","newArray","splice","handleDeleteAll","EditableRow","type","lastRow","display","justifyContent","width","border","margin","handleFormSubmit","find","attr","updateIndex","url","formData","_","responseData","slice","error","console","sortColumn","col","val","filteredID","length","filter","index","includes","String","backgroundColor","fontWeight","color","paddingRight","fill","map"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,kBAAP;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,uBAAT,QAAwC,sBAAxC;AACA,SAASC,mBAAT,QAAoC,wBAApC;AACA,SAASC,iBAAT,EACIC,YADJ,EACkBC,4BADlB,EACgDC,eADhD,QACuE,qBADvE;AAEA,SACIC,IADJ,EAEIC,QAFJ,EAGIC,uBAHJ,EAIIC,YAJJ,EAKIC,UALJ,EAMIC,IANJ,EAOIC,UAPJ,EAQIC,MARJ,EASIC,IATJ,QAUO,eAVP;AAWA,SACIC,KADJ,EAEIC,UAFJ,EAGIC,IAHJ,EAIIC,IAJJ,EAKIC,QALJ,QAMO,qBANP,C,CASA;;;AACA,MAAMC,yBAAyB,GAAG;AAC9BC,EAAAA,EAAE,EAAE,EAD0B;AAE9BC,EAAAA,SAAS,EAAE,EAFmB;AAG9BC,EAAAA,QAAQ,EAAE,EAHoB;AAI9BC,EAAAA,OAAO,EAAE,EAJqB;AAK9BC,EAAAA,QAAQ,EAAE;AALoB,CAAlC;AAQA,MAAMC,qBAAqB,GAAG;AAC1BL,EAAAA,EAAE,EAAE,KADsB;AAE1BC,EAAAA,SAAS,EAAE,KAFe;AAG1BC,EAAAA,QAAQ,EAAE,KAHgB;AAI1BC,EAAAA,OAAO,EAAE,KAJiB;AAK1BC,EAAAA,QAAQ,EAAE;AALgB,CAA9B;AAQA,eAAe,SAASE,UAAT,CAAoB;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA;AAAjB,CAApB,EAAmD;AAAA;;AAC9D,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsClC,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM,CAACmC,aAAD,EAAgBC,gBAAhB,IAAqCpC,QAAQ,CAACuB,yBAAD,CAAnD;AACA,QAAM,CAACc,kBAAD,EAAqBC,qBAArB,IAA8CtC,QAAQ,CAAC,EAAD,CAA5D;AACA,QAAM,CAACuC,iBAAD,EAAoBC,oBAApB,IAA4CxC,QAAQ,CAAC6B,qBAAD,CAA1D;AACA,QAAM,CAACY,kBAAD,EAAqBC,qBAArB,IAA8C1C,QAAQ,CAAC,IAAD,CAA5D,CAL8D,CAO9D;;AACA,QAAM2C,qBAAqB,GAAIC,CAAD,IAAO;AACjC,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkBF,CAAC,CAACG,MAA1B;AACAX,IAAAA,gBAAgB,CAACY,SAAS,IAAI;AAC1B,aAAO,EAAC,GAAGA,SAAJ;AAAe,SAACF,IAAD,GAAQD;AAAvB,OAAP;AACH,KAFe,CAAhB;AAGH,GALD,CAR8D,CAe9D;;;AACA,QAAMI,eAAe,GAAIL,CAAD,IAAO;AAC3B,UAAMM,QAAQ,GAAGhD,CAAC,CAAC0C,CAAC,CAACO,aAAH,CAAD,CAAmBC,IAAnB,CAAwB,QAAxB,CAAjB;AACA,UAAMC,aAAa,GAAGhB,kBAAkB,CAACiB,SAAnB,CAA6BC,IAAI,IAAIC,QAAQ,CAACD,IAAI,CAAC/B,EAAN,CAAR,KAAsBgC,QAAQ,CAACN,QAAD,CAAnE,CAAtB;AACAhB,IAAAA,iBAAiB,CAACmB,aAAD,CAAjB;AACH,GAJD,CAhB8D,CAsB9D;;;AACA,QAAMI,YAAY,GAAIb,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACc,cAAF;AACAd,IAAAA,CAAC,CAACe,eAAF;AACA,UAAMT,QAAQ,GAAGhD,CAAC,CAAC0C,CAAC,CAACO,aAAH,CAAD,CAAmBC,IAAnB,CAAwB,UAAxB,CAAjB;AAEA9C,IAAAA,YAAY,CAAC4C,QAAD,CAAZ,CAAuBU,IAAvB,CAA4B,MAAM;AAC9B;AACA,YAAMC,WAAW,GAAGxB,kBAAkB,CAACiB,SAAnB,CAA6BC,IAAI,IAAIA,IAAI,CAAC/B,EAAL,KAAYgC,QAAQ,CAACN,QAAD,CAAzD,CAApB,CAF8B,CAI9B;;AACA,YAAMY,QAAQ,GAAG,CAAC,GAAGzB,kBAAJ,CAAjB,CAL8B,CAO9B;;AACAyB,MAAAA,QAAQ,CAACC,MAAT,CAAgBF,WAAhB,EAA6B,CAA7B,EAR8B,CAU9B;;AACAvB,MAAAA,qBAAqB,CAACwB,QAAD,CAArB;AACH,KAZD;AAaH,GAlBD;;AAoBA,QAAME,eAAe,GAAIpB,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACc,cAAF;AACAd,IAAAA,CAAC,CAACe,eAAF;AAGH,GALD,CA3C8D,CAkD9D;;;AACA,QAAMM,WAAW,GAAG,CAAC;AAAEpB,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeoB,IAAAA,IAAf;AAAqBC,IAAAA;AAArB,GAAD,KAAoC;AACpD,wBACI,QAAC,KAAD,CAAO,QAAP;AAAA,6BACA;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAE,MAAX;AAAmBC,UAAAA,cAAc,EAAE,YAAnC;AAAiDC,UAAAA,KAAK,EAAEH,OAAO,GAAG,KAAH,GAAW;AAA1E,SAAZ;AAAA,+BACI;AACI,UAAA,YAAY,EAAEtB,KADlB;AAEI,UAAA,IAAI,EAAEC,IAFV;AAGI,UAAA,IAAI,EAAEoB,IAHV;AAII,UAAA,KAAK,EAAE;AAACK,YAAAA,MAAM,EAAE,qBAAT;AAAgCD,YAAAA,KAAK,EAAE,MAAvC;AAA+CE,YAAAA,MAAM,EAAE;AAAvD;AAJX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH,GAbD,CAnD8D,CAkE9D;;;AACA,QAAMC,gBAAgB,GAAG,MAAO7B,CAAP,IAAa;AAClCA,IAAAA,CAAC,CAACc,cAAF,GADkC,CAGlC;;AACA,UAAMR,QAAQ,GAAGhD,CAAC,CAAC0C,CAAC,CAACO,aAAH,CAAD,CAAmBuB,IAAnB,CAAwB,WAAxB,EAAqCA,IAArC,CAA0C,OAA1C,EAAmDC,IAAnD,CAAwD,OAAxD,CAAjB;AACA,UAAMC,WAAW,GAAGvC,kBAAkB,CAACiB,SAAnB,CAA6BC,IAAI,IAAIC,QAAQ,CAACD,IAAI,CAAC/B,EAAN,CAAR,KAAsBgC,QAAQ,CAACN,QAAD,CAAnE,CAApB;AACA,UAAM2B,GAAG,GAAI,UAAS3B,QAAS,EAA/B;;AAEA,QAAI;AACA;AACA,YAAM;AAAE4B,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,UAAiB5E,uBAAuB,CAACyC,CAAD,CAA9C;AACA,UAAIoC,YAAY,GAAG,MAAM3E,iBAAiB,CAAC;AAAEyE,QAAAA,QAAF;AAAYD,QAAAA;AAAZ,OAAD,CAA1C,CAHA,CAKA;;AACA9C,MAAAA,aAAa,CAACiB,SAAS,IAAI;AACvB,eAAQ,CAAC,GAAGA,SAAS,CAACiC,KAAV,CAAgB,CAAhB,EAAmBL,WAAnB,CAAJ,EAAqCI,YAArC,EAAmD,GAAGhC,SAAS,CAACiC,KAAV,CAAgBL,WAAW,GAAG,CAA9B,CAAtD,CAAR;AACH,OAFY,CAAb;AAIA1C,MAAAA,iBAAiB,CAAC,CAAC,CAAF,CAAjB;AACH,KAXD,CAWE,OAAOgD,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH;AACJ,GAtBD;;AAwBA,QAAME,UAAU,GAAIC,GAAD,IAAS;AACxB7C,IAAAA,oBAAoB,CAACQ,SAAS,IAAI;AAC9B,aAAO,EAAC,GAAGA,SAAJ;AAAe,SAACqC,GAAD,GAAO,CAAC9C,iBAAiB,CAAC8C,GAAD;AAAxC,OAAP;AACH,KAFmB,CAApB;AAIA3C,IAAAA,qBAAqB,CAAC2C,GAAD,CAArB;AACAnF,IAAAA,CAAC,CAAC,eAAD,CAAD,CAAmBoF,GAAnB,CAAuB,EAAvB;AACH,GAPD,CA3F8D,CAoG9D;;;AACArF,EAAAA,SAAS,CAAC,MAAM;AACZqC,IAAAA,qBAAqB,CAACN,UAAD,CAArB;AACH,GAFQ,EAEN,CAACA,UAAD,CAFM,CAAT,CArG8D,CAyG9D;;AACA/B,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMsF,UAAU,GAAGnF,mBAAmB,CAAC+B,aAAD,EAAgBH,UAAhB,CAAtC;;AACA,QAAIuD,UAAU,CAACC,MAAX,IAAqB,CAAzB,EAA4B;AACxBlD,MAAAA,qBAAqB,CAACN,UAAU,CAACyD,MAAX,CAAkB,CAAClC,IAAD,EAAOmC,KAAP,KAAiBH,UAAU,CAACI,QAAX,CAAoBC,MAAM,CAACrC,IAAI,CAAC/B,EAAN,CAA1B,CAAnC,CAAD,CAArB;AACH;AACJ,GALQ,EAKN,CAACW,aAAD,CALM,CAAT;AAOAlC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIsC,iBAAiB,CAACE,kBAAD,CAArB,EAA2C;AACvClC,MAAAA,4BAA4B,CAACkC,kBAAD,EAAqB,MAArB,CAA5B,CAAyDmB,IAAzD,CAA8DR,IAAI,IAAI;AAClEd,QAAAA,qBAAqB,CAACc,IAAD,CAArB;AACH,OAFD;AAGH,KAJD,MAIO;AACH7C,MAAAA,4BAA4B,CAACkC,kBAAD,EAAqB,KAArB,CAA5B,CAAwDmB,IAAxD,CAA6DR,IAAI,IAAI;AACjEd,QAAAA,qBAAqB,CAACc,IAAD,CAArB;AACH,OAFD;AAGH;AACJ,GAVQ,EAUN,CAACX,kBAAD,EAAqBF,iBAArB,CAVM,CAAT;AAaA,sBACI,QAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,EAAvB;AAA2B,IAAA,SAAS,EAAC,MAArC;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA,8BACI,QAAC,QAAD;AAAU,QAAA,SAAS,EAAC,WAApB;AAAgC,QAAA,KAAK,EAAE;AAAEsD,UAAAA,eAAe,EAAE;AAAnB,SAAvC;AAAA,gCACI,QAAC,YAAD;AACI,UAAA,iBAAiB,MADrB;AAEI,UAAA,OAAO,eAAE,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,OAAb;AAAqB,YAAA,KAAK,EAAE;AAAEC,cAAAA,UAAU,EAAE,GAAd;AAAmBxB,cAAAA,KAAK,EAAE,EAA1B;AAA8ByB,cAAAA,KAAK,EAAE;AAArC,aAA5B;AAA8E,YAAA,OAAO,EAAE,MAAMX,UAAU,CAAC,IAAD,CAAvG;AAA+G,YAAA,OAAO,eAAE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,oBAAxH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFb;AAGI,UAAA,SAAS,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI,QAAC,YAAD;AACI,UAAA,iBAAiB,MADrB;AAEI,UAAA,OAAO,eAAE,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,OAAb;AAAqB,YAAA,KAAK,EAAE;AAAEU,cAAAA,UAAU,EAAE,GAAd;AAAmBxB,cAAAA,KAAK,EAAE,EAA1B;AAA8ByB,cAAAA,KAAK,EAAE;AAArC,aAA5B;AAA8E,YAAA,OAAO,EAAE,MAAMX,UAAU,CAAC,WAAD,CAAvG;AAAsH,YAAA,OAAO,eAAE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,oBAA/H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFb;AAGI,UAAA,SAAS,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA,gBANJ,eAWI,QAAC,YAAD;AACI,UAAA,iBAAiB,MADrB;AAEI,UAAA,OAAO,eAAE,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,OAAb;AAAqB,YAAA,KAAK,EAAE;AAAEU,cAAAA,UAAU,EAAE,GAAd;AAAmBxB,cAAAA,KAAK,EAAE,EAA1B;AAA8ByB,cAAAA,KAAK,EAAE;AAArC,aAA5B;AAA8E,YAAA,OAAO,EAAE,MAAMX,UAAU,CAAC,UAAD,CAAvG;AAAqH,YAAA,OAAO,eAAE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,oBAA9H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFb;AAGI,UAAA,SAAS,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA,gBAXJ,eAgBI,QAAC,YAAD;AACI,UAAA,iBAAiB,MADrB;AAEI,UAAA,OAAO,eAAE,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,OAAb;AAAqB,YAAA,KAAK,EAAE;AAAEU,cAAAA,UAAU,EAAE,GAAd;AAAmBxB,cAAAA,KAAK,EAAE,EAA1B;AAA8ByB,cAAAA,KAAK,EAAE;AAArC,aAA5B;AAA8E,YAAA,OAAO,EAAE,MAAMX,UAAU,CAAC,SAAD,CAAvG;AAAoH,YAAA,OAAO,eAAE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,oBAA7H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFb;AAGI,UAAA,SAAS,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA,gBAhBJ,eAqBI,QAAC,YAAD;AACI,UAAA,iBAAiB,MADrB;AAEI,UAAA,OAAO,eAAE,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,OAAb;AAAqB,YAAA,KAAK,EAAE;AAAEU,cAAAA,UAAU,EAAE,GAAd;AAAmBxB,cAAAA,KAAK,EAAE,EAA1B;AAA8ByB,cAAAA,KAAK,EAAE,SAArC;AAAgDC,cAAAA,YAAY,EAAE;AAA9D,aAA5B;AAAgG,YAAA,OAAO,EAAE,MAAMZ,UAAU,CAAC,UAAD,CAAzH;AAAuI,YAAA,OAAO,eAAE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,oBAAhJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFb;AAGI,UAAA,SAAS,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA,gBArBJ,eA0BI,QAAC,uBAAD;AAAA,iCACI,QAAC,UAAD;AAAY,YAAA,IAAI,EAAC,KAAjB;AAAuB,0BAAW,QAAlC;AAA2C,YAAA,IAAI,EAAC,QAAhD;AAAA,mCACI,QAAC,IAAD;AACI,cAAA,KAAK,EAAE;AAAChB,gBAAAA,OAAO,EAAE;AAAV;AADX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBA1BJ,eAiCI,QAAC,uBAAD;AAAA,iCACI,QAAC,UAAD;AAAY,YAAA,IAAI,EAAC,KAAjB;AAAuB,0BAAW,QAAlC;AAA2C,YAAA,IAAI,EAAC,QAAhD;AAAA,mCACI,QAAC,IAAD;AACI,cAAA,KAAK,EAAE;AAACA,gBAAAA,OAAO,EAAE;AAAV;AADX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAjCJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eA0CI;AAAM,QAAA,SAAS,EAAC,YAAhB;AAAA,+BACI,QAAC,QAAD;AAAU,UAAA,SAAS,EAAC,WAApB;AAAA,kCACI,QAAC,YAAD;AACI,YAAA,iBAAiB,MADrB;AAEI,YAAA,OAAO,eACP;AAAK,cAAA,KAAK,EAAE;AAAEA,gBAAAA,OAAO,EAAE,MAAX;AAAmBC,gBAAAA,cAAc,EAAE,YAAnC;AAAiDC,gBAAAA,KAAK,EAAE;AAAxD,eAAZ;AAAA,qCACI;AACI,gBAAA,SAAS,EAAC,8EADd;AAEI,gBAAA,YAAY,EAAEnC,aAAa,CAAC,IAAD,CAF/B;AAGI,gBAAA,QAAQ,EAAEQ,qBAHd;AAII,gBAAA,IAAI,EAAC,IAJT;AAKI,gBAAA,KAAK,EAAE;AAAC4B,kBAAAA,MAAM,EAAE,qBAAT;AAAgCD,kBAAAA,KAAK,EAAE,MAAvC;AAA+CE,kBAAAA,MAAM,EAAE;AAAvD,iBALX;AAMI,gBAAA,WAAW,EAAC;AANhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAaI,YAAA,SAAS,EAAC;AAbd;AAAA;AAAA;AAAA;AAAA,kBADJ,eAgBI,QAAC,YAAD;AACI,YAAA,iBAAiB,MADrB;AAEI,YAAA,OAAO,eACP;AAAK,cAAA,KAAK,EAAE;AAAEJ,gBAAAA,OAAO,EAAE,MAAX;AAAmBC,gBAAAA,cAAc,EAAE,YAAnC;AAAiDC,gBAAAA,KAAK,EAAE;AAAxD,eAAZ;AAAA,qCACI;AACI,gBAAA,SAAS,EAAC,8EADd;AAEI,gBAAA,YAAY,EAAEnC,aAAa,CAAC,WAAD,CAF/B;AAGI,gBAAA,QAAQ,EAAEQ,qBAHd;AAII,gBAAA,IAAI,EAAC,WAJT;AAKI,gBAAA,KAAK,EAAE;AAAC4B,kBAAAA,MAAM,EAAE,qBAAT;AAAgCD,kBAAAA,KAAK,EAAE,MAAvC;AAA+CE,kBAAAA,MAAM,EAAE;AAAvD,iBALX;AAMI,gBAAA,WAAW,EAAC;AANhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAaI,YAAA,SAAS,EAAC;AAbd;AAAA;AAAA;AAAA;AAAA,kBAhBJ,eA+BI,QAAC,YAAD;AACI,YAAA,iBAAiB,MADrB;AAEI,YAAA,OAAO,eACP;AAAK,cAAA,KAAK,EAAE;AAAEJ,gBAAAA,OAAO,EAAE,MAAX;AAAmBC,gBAAAA,cAAc,EAAE,YAAnC;AAAiDC,gBAAAA,KAAK,EAAE;AAAxD,eAAZ;AAAA,qCACI;AACI,gBAAA,SAAS,EAAC,8EADd;AAEI,gBAAA,YAAY,EAAEnC,aAAa,CAAC,UAAD,CAF/B;AAGI,gBAAA,QAAQ,EAAEQ,qBAHd;AAII,gBAAA,IAAI,EAAC,UAJT;AAKI,gBAAA,KAAK,EAAE;AAAC4B,kBAAAA,MAAM,EAAE,qBAAT;AAAgCD,kBAAAA,KAAK,EAAE,MAAvC;AAA+CE,kBAAAA,MAAM,EAAE;AAAvD,iBALX;AAMI,gBAAA,WAAW,EAAC;AANhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAaI,YAAA,SAAS,EAAC;AAbd;AAAA;AAAA;AAAA;AAAA,kBA/BJ,eA8CI,QAAC,YAAD;AACI,YAAA,iBAAiB,MADrB;AAEI,YAAA,OAAO,eACP;AAAK,cAAA,KAAK,EAAE;AAAEJ,gBAAAA,OAAO,EAAE,MAAX;AAAmBC,gBAAAA,cAAc,EAAE,YAAnC;AAAiDC,gBAAAA,KAAK,EAAE;AAAxD,eAAZ;AAAA,qCACI;AACI,gBAAA,SAAS,EAAC,8EADd;AAEI,gBAAA,YAAY,EAAEnC,aAAa,CAAC,SAAD,CAF/B;AAGI,gBAAA,QAAQ,EAAEQ,qBAHd;AAII,gBAAA,IAAI,EAAC,SAJT;AAKI,gBAAA,KAAK,EAAE;AAAC4B,kBAAAA,MAAM,EAAE,qBAAT;AAAgCD,kBAAAA,KAAK,EAAE,MAAvC;AAA+CE,kBAAAA,MAAM,EAAE;AAAvD,iBALX;AAMI,gBAAA,WAAW,EAAC;AANhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAaI,YAAA,SAAS,EAAC;AAbd;AAAA;AAAA;AAAA;AAAA,kBA9CJ,eA6DI,QAAC,YAAD;AACI,YAAA,iBAAiB,MADrB;AAEI,YAAA,OAAO,eACP;AAAK,cAAA,KAAK,EAAE;AAAEJ,gBAAAA,OAAO,EAAE,MAAX;AAAmBC,gBAAAA,cAAc,EAAE,YAAnC;AAAiDC,gBAAAA,KAAK,EAAE;AAAxD,eAAZ;AAAA,qCACI;AACI,gBAAA,SAAS,EAAC,8EADd;AAEI,gBAAA,YAAY,EAAEnC,aAAa,CAAC,UAAD,CAF/B;AAGI,gBAAA,QAAQ,EAAEQ,qBAHd;AAII,gBAAA,IAAI,EAAC,UAJT;AAKI,gBAAA,KAAK,EAAE;AAAC4B,kBAAAA,MAAM,EAAE,qBAAT;AAAgCD,kBAAAA,KAAK,EAAE,MAAvC;AAA+CE,kBAAAA,MAAM,EAAE;AAAvD,iBALX;AAMI,gBAAA,WAAW,EAAC;AANhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAaI,YAAA,SAAS,EAAC;AAbd;AAAA;AAAA;AAAA;AAAA,kBA7DJ,eA4EI,QAAC,uBAAD;AAAA,mCACI,QAAC,UAAD;AAAY,cAAA,IAAI,EAAC,KAAjB;AAAuB,4BAAW,WAAlC;AAAA,qCACI,QAAC,QAAD;AACI,gBAAA,KAAK,EAAE;AAACyB,kBAAAA,IAAI,EAAE;AAAP,iBADX;AAEI,gBAAA,QAAQ,EAAC;AAFb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBA5EJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cA1CJ,EAiIC5D,kBAAkB,CAAC6D,GAAnB,CAAuB,CAAC3C,IAAD,EAAOmC,KAAP,KACpBA,KAAK,KAAKzD,cAAV,gBACI;AAAM,QAAA,SAAS,EAAC,UAAhB;AAA2B,QAAA,QAAQ,EAAEwC,gBAArC;AAAA,+BACI,QAAC,QAAD;AAAU,UAAA,SAAS,EAAC,WAApB;AAAA,kCACI,QAAC,YAAD;AACI,YAAA,iBAAiB,MADrB;AAEI,YAAA,OAAO,eAAE,QAAC,WAAD;AAAa,cAAA,KAAK,EAAElB,IAAI,CAAC/B,EAAzB;AAA6B,cAAA,IAAI,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,oBAFb;AAGI,YAAA,SAAS,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA,kBADJ,eAMI,QAAC,YAAD;AACI,YAAA,iBAAiB,MADrB;AAEI,YAAA,OAAO,eAAE,QAAC,WAAD;AAAa,cAAA,KAAK,EAAE+B,IAAI,CAAC9B,SAAzB;AAAoC,cAAA,IAAI,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,oBAFb;AAGI,YAAA,SAAS,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA,kBANJ,eAWI,QAAC,YAAD;AACI,YAAA,iBAAiB,MADrB;AAEI,YAAA,OAAO,eAAE,QAAC,WAAD;AAAa,cAAA,KAAK,EAAE8B,IAAI,CAAC7B,QAAzB;AAAmC,cAAA,IAAI,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA,oBAFb;AAGI,YAAA,SAAS,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA,kBAXJ,eAgBI,QAAC,YAAD;AACI,YAAA,iBAAiB,MADrB;AAEI,YAAA,OAAO,eAAE,QAAC,WAAD;AAAa,cAAA,KAAK,EAAE6B,IAAI,CAAC5B,OAAzB;AAAkC,cAAA,IAAI,EAAC,SAAvC;AAAiD,cAAA,IAAI,EAAE;AAAvD;AAAA;AAAA;AAAA;AAAA,oBAFb;AAGI,YAAA,SAAS,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA,kBAhBJ,eAqBI,QAAC,YAAD;AACI,YAAA,iBAAiB,MADrB;AAEI,YAAA,OAAO,eAAE,QAAC,WAAD;AAAa,cAAA,KAAK,EAAE4B,IAAI,CAAC3B,QAAzB;AAAmC,cAAA,IAAI,EAAC,UAAxC;AAAmD,cAAA,OAAO,EAAE;AAA5D;AAAA;AAAA;AAAA;AAAA,oBAFb;AAGI,YAAA,SAAS,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA,kBArBJ,eA0BI,QAAC,uBAAD;AAAA,mCACI,QAAC,UAAD;AAAY,cAAA,IAAI,EAAC,KAAjB;AAAuB,4BAAW,MAAlC;AAAyC,cAAA,IAAI,EAAC,QAA9C;AAAA,qCACI,QAAC,IAAD;AACI,gBAAA,KAAK,EAAE;AAACqE,kBAAAA,IAAI,EAAE;AAAP;AADX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,gBAsCA,QAAC,QAAD;AAAU,QAAA,SAAS,EAAC,WAApB;AAAA,gCACQ,QAAC,YAAD;AACA,UAAA,iBAAiB,MADjB;AAEA,UAAA,OAAO,eAAE,QAAC,UAAD;AAAY,YAAA,IAAI,EAAC,OAAjB;AAAA,sBAA0B1C,IAAI,CAAC/B;AAA/B;AAAA;AAAA;AAAA;AAAA,kBAFT;AAGA,UAAA,SAAS,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA,gBADR,eAMQ,QAAC,YAAD;AACA,UAAA,iBAAiB,MADjB;AAEA,UAAA,OAAO,eAAE,QAAC,UAAD;AAAY,YAAA,IAAI,EAAC,OAAjB;AAAA,sBAA2B+B,IAAI,CAAC9B;AAAhC;AAAA;AAAA;AAAA;AAAA,kBAFT;AAGA,UAAA,SAAS,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA,gBANR,eAWQ,QAAC,YAAD;AACA,UAAA,iBAAiB,MADjB;AAEA,UAAA,OAAO,eAAE,QAAC,UAAD;AAAY,YAAA,IAAI,EAAC,OAAjB;AAAA,sBAA0B8B,IAAI,CAAC7B;AAA/B;AAAA;AAAA;AAAA;AAAA,kBAFT;AAGA,UAAA,SAAS,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA,gBAXR,eAgBQ,QAAC,YAAD;AACA,UAAA,iBAAiB,MADjB;AAEA,UAAA,OAAO,eAAE,QAAC,UAAD;AAAY,YAAA,IAAI,EAAC,OAAjB;AAAA,sBAA0B6B,IAAI,CAAC5B;AAA/B;AAAA;AAAA;AAAA;AAAA,kBAFT;AAGA,UAAA,SAAS,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA,gBAhBR,eAqBQ,QAAC,YAAD;AACA,UAAA,iBAAiB,MADjB;AAEA,UAAA,OAAO,EAAE6B,QAAQ,CAACD,IAAI,CAAC3B,QAAN,CAAR,gBAA0B,QAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAACiE,cAAAA,eAAe,EAAE,wBAAlB;AAA4CE,cAAAA,KAAK,EAAE,OAAnD;AAA4DD,cAAAA,UAAU,EAAE;AAAxE,aAAb;AAA2F,YAAA,KAAK,EAAC;AAAjG;AAAA;AAAA;AAAA;AAAA,kBAA1B,gBAAwI,QAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAACD,cAAAA,eAAe,EAAE,wBAAlB;AAA4CE,cAAAA,KAAK,EAAE,OAAnD;AAA4DD,cAAAA,UAAU,EAAE;AAAxE,aAAb;AAA2F,YAAA,KAAK,EAAC;AAAjG;AAAA;AAAA;AAAA;AAAA,kBAFjJ;AAGA,UAAA,SAAS,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA,gBArBR,eA0BI,QAAC,uBAAD;AAAA,kCACI,QAAC,UAAD;AAAY,YAAA,IAAI,EAAC,KAAjB;AAAuB,0BAAW,MAAlC;AAAyC,YAAA,OAAO,EAAE7C,eAAlD;AAAmE,2BAAaM,IAAI,CAAC/B,EAArF;AAAA,mCACI,QAAC,IAAD;AACI,cAAA,KAAK,EAAE;AAACyE,gBAAAA,IAAI,EAAE;AAAP;AADX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAMI,QAAC,UAAD;AAAY,YAAA,IAAI,EAAC,KAAjB;AAAuB,0BAAW,QAAlC;AAA2C,YAAA,OAAO,EAAExC,YAApD;AAAkE,6BAAeF,IAAI,CAAC/B,EAAtF;AAAA,mCACI,QAAC,KAAD;AACI,cAAA,KAAK,EAAE;AAACyE,gBAAAA,IAAI,EAAE;AAAP;AADX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAvCH,CAjID;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAsNH;;GApVuBnE,U;;KAAAA,U","sourcesContent":["import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport './PersonList.css';\r\nimport $ from \"jquery\";\r\nimport { convertFormDataToObject } from '../../utils/FormData';\r\nimport { getListOfFilteredID } from '../../utils/ListFilter';\r\nimport { putFormDataAsJson, \r\n    deletePerson, getAllPersonSorteredByColumn, deleteAllPerson } from '../../api/PersonAPI';\r\nimport {\r\n    List,\r\n    ListItem,\r\n    ListItemSecondaryAction,\r\n    ListItemText,\r\n    IconButton,\r\n    Grid,\r\n    Typography,\r\n    Button,\r\n    Chip\r\n} from '@mui/material';\r\nimport {\r\n    Close,\r\n    FilterList,\r\n    Send,\r\n    Edit,\r\n    ClearAll\r\n} from '@mui/icons-material';\r\n\r\n\r\n// Initialisation des valeurs de filtres\r\nconst initialFilteredPersonList = {\r\n    id: '',\r\n    firstname: '',\r\n    lastname: '',\r\n    address: '',\r\n    isActive: ''\r\n}\r\n\r\nconst initialSortPersonList = {\r\n    id: false,\r\n    firstname: false,\r\n    lastname: false,\r\n    address: false,\r\n    isActive: false\r\n}\r\n\r\nexport default function PersonList({ setPersonList, personList }) {\r\n    const [editedRowIndex, setEditedRowIndex] = useState(null);\r\n    const [filterOptions, setFilterOptions]  = useState(initialFilteredPersonList);\r\n    const [filteredListPerson, setFilteredListPerson] = useState([]);\r\n    const [sortColumnsStatus, setSortColumnsStatus] = useState(initialSortPersonList);\r\n    const [actualColumnSorted, setActualColumnSorted] = useState(\"id\");\r\n\r\n    // Gestion du state stockant les valeurs de filtrage\r\n    const handleFormFilterInput = (e) => {\r\n        const { value, name } = e.target;\r\n        setFilterOptions(prevState => {\r\n            return {...prevState, [name]: value}\r\n        });\r\n    }\r\n\r\n    // permet de switcher sur le mode édition d'une ligne\r\n    const toggleIsEditing = (e) => {\r\n        const personID = $(e.currentTarget).data(\"idedit\");\r\n        const editableIndex = filteredListPerson.findIndex(item => parseInt(item.id) === parseInt(personID));\r\n        setEditedRowIndex(editableIndex);\r\n    }  \r\n    \r\n    // gestion du button delete\r\n    const handleDelete = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        const personID = $(e.currentTarget).data(\"iddelete\");\r\n\r\n        deletePerson(personID).then(() => {\r\n            // Récuperer l'index de l'élément à supprimer\r\n            const removeIndex = filteredListPerson.findIndex(item => item.id === parseInt(personID));\r\n        \r\n            // Faire une copie du state\r\n            const newArray = [...filteredListPerson];\r\n        \r\n            // Supprimer l'élément du nouveau tableau\r\n            newArray.splice(removeIndex, 1);\r\n        \r\n            // Mettre à jour le state\r\n            setFilteredListPerson(newArray);\r\n        });\r\n    }\r\n\r\n    const handleDeleteAll = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n\r\n    }\r\n\r\n    // Element React pour la modification d'une ligne\r\n    const EditableRow = ({ value, name, type, lastRow }) => {\r\n        return (\r\n            <React.Fragment>\r\n            <div style={{ display: \"flex\", justifyContent: \"flex-start\", width: lastRow ? '70%' : '100%' }}>\r\n                <input\r\n                    defaultValue={value}\r\n                    name={name}\r\n                    type={type}\r\n                    style={{border: '#008080 solid 0.5px', width: '100%', margin: '2px'}}\r\n                />\r\n            </div>\r\n            </React.Fragment>\r\n        )\r\n    };\r\n\r\n    // Gérer le formulaire de la mise à jour d'une personne\r\n    const handleFormSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Récupérer les données du formulaire\r\n        const personID = $(e.currentTarget).find('.personID').find('input').attr('value');\r\n        const updateIndex = filteredListPerson.findIndex(item => parseInt(item.id) === parseInt(personID));\r\n        const url = `person/${personID}`;\r\n\r\n        try {\r\n            // Requête PUT\r\n            const { formData, _} = convertFormDataToObject(e);\r\n            let responseData = await putFormDataAsJson({ formData, url });\r\n\r\n            // Mise à jour de la liste des utilisateurs\r\n            setPersonList(prevState => {\r\n                return  [...prevState.slice(0, updateIndex), responseData, ...prevState.slice(updateIndex + 1)];\r\n            });\r\n\r\n            setEditedRowIndex(-1);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    const sortColumn = (col) => {\r\n        setSortColumnsStatus(prevState => {\r\n            return {...prevState, [col]: !sortColumnsStatus[col]}\r\n        });\r\n\r\n        setActualColumnSorted(col);\r\n        $('.columnFilter').val(\"\");\r\n    }\r\n\r\n    // Initialisation du state stockant la liste filtrée\r\n    useEffect(() => {\r\n        setFilteredListPerson(personList);\r\n    }, [personList]);\r\n\r\n    // Appel à l'algorithme à chaque fois qu'une valeur de filtrage change\r\n    useEffect(() => {\r\n        const filteredID = getListOfFilteredID(filterOptions, personList);\r\n        if (filteredID.length != 0) {\r\n            setFilteredListPerson(personList.filter((item, index) => filteredID.includes(String(item.id))));\r\n        }\r\n    }, [filterOptions]);\r\n\r\n    useEffect(() => {\r\n        if (sortColumnsStatus[actualColumnSorted]) {\r\n            getAllPersonSorteredByColumn(actualColumnSorted, \"desc\").then(data => {\r\n                setFilteredListPerson(data);\r\n            }); \r\n        } else {\r\n            getAllPersonSorteredByColumn(actualColumnSorted, \"asc\").then(data => {\r\n                setFilteredListPerson(data);\r\n            }); \r\n        }\r\n    }, [actualColumnSorted, sortColumnsStatus]);\r\n\r\n\r\n    return (\r\n        <Grid item xs={16} md={12} className=\"grid\">\r\n            <List className='list'>\r\n                <ListItem className='list-item' style={{ backgroundColor: '#9AC2C980' }}>\r\n                    <ListItemText\r\n                        disableTypography\r\n                        primary={<Button type=\"body2\" style={{ fontWeight: 700, width: 10, color: '#004040' }} onClick={() => sortColumn(\"id\")} endIcon={<FilterList />}>ID</Button>}\r\n                        className='list-item-text'\r\n                    />\r\n                    <ListItemText\r\n                        disableTypography\r\n                        primary={<Button type=\"body2\" style={{ fontWeight: 700, width: 10, color: '#004040' }} onClick={() => sortColumn(\"firstname\")} endIcon={<FilterList />}>Prénom</Button>}\r\n                        className='list-item-text'\r\n                    />\r\n                    <ListItemText\r\n                        disableTypography\r\n                        primary={<Button type=\"body2\" style={{ fontWeight: 700, width: 10, color: '#004040' }} onClick={() => sortColumn(\"lastname\")} endIcon={<FilterList />}>Nom</Button>}\r\n                        className='list-item-text'\r\n                    />\r\n                    <ListItemText\r\n                        disableTypography\r\n                        primary={<Button type=\"body2\" style={{ fontWeight: 700, width: 10, color: '#004040' }} onClick={() => sortColumn(\"address\")} endIcon={<FilterList />}>Adresse</Button>}\r\n                        className='list-item-text'\r\n                    />\r\n                    <ListItemText\r\n                        disableTypography\r\n                        primary={<Button type=\"body2\" style={{ fontWeight: 700, width: 10, color: '#004040', paddingRight: 30 }} onClick={() => sortColumn(\"isActive\")} endIcon={<FilterList />}>Actif</Button>}\r\n                        className='list-item-text'\r\n                    />\r\n                    <ListItemSecondaryAction>\r\n                        <IconButton edge=\"end\" aria-label=\"delete\" type=\"submit\">\r\n                            <Send \r\n                                style={{display: \"none\"}} \r\n                            />\r\n                        </IconButton>\r\n                    </ListItemSecondaryAction>\r\n                    <ListItemSecondaryAction>\r\n                        <IconButton edge=\"end\" aria-label=\"delete\" type=\"submit\">\r\n                            <Send \r\n                                style={{display: \"none\"}} \r\n                            />\r\n                        </IconButton>\r\n                    </ListItemSecondaryAction>\r\n                </ListItem>\r\n                <form className=\"filterForm\">\r\n                    <ListItem className='list-item'>\r\n                        <ListItemText\r\n                            disableTypography\r\n                            primary={\r\n                            <div style={{ display: \"flex\", justifyContent: \"flex-start\", width: '100%' }}>\r\n                                <input\r\n                                    className=\"MuiTypography-root MuiTypography-h7 MuiTypography-displayInline columnFilter\"\r\n                                    defaultValue={filterOptions[\"id\"]}\r\n                                    onChange={handleFormFilterInput}\r\n                                    name=\"id\"\r\n                                    style={{border: '#008080 solid 0.5px', width: '100%', margin: '2px'}}\r\n                                    placeholder=\"Filtrer\"\r\n                                />\r\n                            </div>}\r\n                            className='list-item-text'\r\n                        />\r\n                        <ListItemText\r\n                            disableTypography\r\n                            primary={\r\n                            <div style={{ display: \"flex\", justifyContent: \"flex-start\", width: '100%' }}>\r\n                                <input\r\n                                    className=\"MuiTypography-root MuiTypography-h7 MuiTypography-displayInline columnFilter\"\r\n                                    defaultValue={filterOptions[\"firstname\"]}\r\n                                    onChange={handleFormFilterInput}\r\n                                    name=\"firstname\"\r\n                                    style={{border: '#008080 solid 0.5px', width: '100%', margin: '2px'}}\r\n                                    placeholder=\"Filtrer\"\r\n                                />\r\n                            </div>}\r\n                            className='list-item-text'\r\n                        />\r\n                        <ListItemText\r\n                            disableTypography\r\n                            primary={\r\n                            <div style={{ display: \"flex\", justifyContent: \"flex-start\", width: '100%' }}>\r\n                                <input\r\n                                    className=\"MuiTypography-root MuiTypography-h7 MuiTypography-displayInline columnFilter\"\r\n                                    defaultValue={filterOptions[\"lastname\"]}\r\n                                    onChange={handleFormFilterInput}\r\n                                    name=\"lastname\"\r\n                                    style={{border: '#008080 solid 0.5px', width: '100%', margin: '2px'}}\r\n                                    placeholder=\"Filtrer\"\r\n                                />\r\n                            </div>}\r\n                            className='list-item-text'\r\n                        />\r\n                        <ListItemText\r\n                            disableTypography\r\n                            primary={\r\n                            <div style={{ display: \"flex\", justifyContent: \"flex-start\", width: '100%' }}>\r\n                                <input\r\n                                    className=\"MuiTypography-root MuiTypography-h7 MuiTypography-displayInline columnFilter\"\r\n                                    defaultValue={filterOptions[\"address\"]}\r\n                                    onChange={handleFormFilterInput}\r\n                                    name=\"address\"\r\n                                    style={{border: '#008080 solid 0.5px', width: '100%', margin: '2px'}}\r\n                                    placeholder=\"Filtrer\"    \r\n                                />\r\n                            </div>}\r\n                            className='list-item-text'\r\n                        />\r\n                        <ListItemText\r\n                            disableTypography\r\n                            primary={\r\n                            <div style={{ display: \"flex\", justifyContent: \"flex-start\", width: '70%' }}>\r\n                                <input\r\n                                    className=\"MuiTypography-root MuiTypography-h7 MuiTypography-displayInline columnFilter\"\r\n                                    defaultValue={filterOptions[\"isActive\"]}\r\n                                    onChange={handleFormFilterInput}\r\n                                    name=\"isActive\"\r\n                                    style={{border: '#008080 solid 0.5px', width: '100%', margin: '2px'}}\r\n                                    placeholder=\"Filtrer\"\r\n                                />\r\n                            </div>}\r\n                            className='list-item-text'\r\n                        />\r\n                        <ListItemSecondaryAction>\r\n                            <IconButton edge=\"end\" aria-label=\"deleteall\">\r\n                                <ClearAll\r\n                                    style={{fill: \"#008080\"}} \r\n                                    fontSize=\"large\"\r\n                                />\r\n                            </IconButton>\r\n                        </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                </form>\r\n            {filteredListPerson.map((item, index) => (\r\n                index === editedRowIndex ? ( \r\n                    <form className=\"editForm\" onSubmit={handleFormSubmit}>\r\n                        <ListItem className='list-item'>\r\n                            <ListItemText\r\n                                disableTypography\r\n                                primary={<EditableRow value={item.id} name=\"id\" />}\r\n                                className='list-item-text personID'\r\n                            />\r\n                            <ListItemText\r\n                                disableTypography\r\n                                primary={<EditableRow value={item.firstname} name=\"firstname\" />}\r\n                                className='list-item-text'\r\n                            />\r\n                            <ListItemText\r\n                                disableTypography\r\n                                primary={<EditableRow value={item.lastname} name=\"lastname\" />}\r\n                                className='list-item-text'\r\n                            />\r\n                            <ListItemText\r\n                                disableTypography\r\n                                primary={<EditableRow value={item.address} name=\"address\" type={\"email\"}/>}\r\n                                className='list-item-text'\r\n                            />\r\n                            <ListItemText\r\n                                disableTypography\r\n                                primary={<EditableRow value={item.isActive} name=\"isActive\" lastRow={true} />}\r\n                                className='list-item-text'\r\n                            />\r\n                            <ListItemSecondaryAction>\r\n                                <IconButton edge=\"end\" aria-label=\"edit\" type=\"submit\">\r\n                                    <Send \r\n                                        style={{fill: \"#008080\"}} \r\n                                    />\r\n                                </IconButton>\r\n                            </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                    </form>\r\n                    ) : (\r\n                <ListItem className='list-item'>\r\n                        <ListItemText\r\n                        disableTypography\r\n                        primary={<Typography type=\"body2\">{item.id}</Typography>}\r\n                        className='list-item-text personID'\r\n                        />\r\n                        <ListItemText\r\n                        disableTypography\r\n                        primary={<Typography type=\"body2\" >{item.firstname}</Typography>}\r\n                        className='list-item-text'\r\n                        />\r\n                        <ListItemText\r\n                        disableTypography\r\n                        primary={<Typography type=\"body2\">{item.lastname}</Typography>}\r\n                        className='list-item-text'\r\n                        />\r\n                        <ListItemText\r\n                        disableTypography\r\n                        primary={<Typography type=\"body2\">{item.address}</Typography>}\r\n                        className='list-item-text'\r\n                        />\r\n                        <ListItemText\r\n                        disableTypography\r\n                        primary={parseInt(item.isActive) ? <Chip style={{backgroundColor: 'rgba(53, 219, 94, 0.8)', color: 'white', fontWeight: 700}} label=\"Actif\" /> : <Chip style={{backgroundColor: 'rgba(209, 42, 23, 0.8)', color: 'white', fontWeight: 700}} label=\"Inactif\" />}\r\n                        className='list-item-text'\r\n                        />\r\n                    <ListItemSecondaryAction>\r\n                        <IconButton edge=\"end\" aria-label=\"edit\" onClick={toggleIsEditing} data-idedit={item.id} >\r\n                            <Edit \r\n                                style={{fill: \"#008080\"}} \r\n                            />\r\n                        </IconButton>\r\n                        <IconButton edge=\"end\" aria-label=\"delete\" onClick={handleDelete} data-iddelete={item.id}>\r\n                            <Close \r\n                                style={{fill: \"#008080\"}} \r\n                            />\r\n                        </IconButton>\r\n                    </ListItemSecondaryAction>\r\n                </ListItem>\r\n                )\r\n            ))}\r\n            </List>\r\n        </Grid>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}