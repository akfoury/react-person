{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Documents\\\\react-person\\\\src\\\\components\\\\PersonForm\\\\PersonForm.js\";\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport $ from \"jquery\";\nimport './PersonForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PersonForm({\n  setPersonList,\n  setFormData,\n  formData\n}) {\n  const stateUpdate = target => {\n    setFormData(prevState => {\n      return { ...prevState,\n        [target.name]: target.value\n      };\n    });\n  };\n\n  const postFormDataAsJson = async ({\n    url,\n    formData\n  }) => {\n    const plainFormData = Object.fromEntries(formData.entries());\n    const formDataJsonString = JSON.stringify(plainFormData);\n    console.log(formDataJsonString);\n    const fetchOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: formDataJsonString\n    };\n    const response = await fetch(url, fetchOptions);\n    console.log(response);\n\n    if (!response.ok) {\n      const errorMessage = await response.text();\n      throw new Error(errorMessage);\n    }\n\n    return response.json();\n  };\n\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    console.log(form);\n    const url = form.action;\n    console.log(url);\n\n    try {\n      const formData = new FormData(form);\n      console.log(formData);\n      const responseData = await postFormDataAsJson({\n        url,\n        formData\n      });\n      setPersonList(prevState => {\n        return [...prevState, responseData];\n      });\n      console.log({\n        responseData\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  }; // const reinitializeFormData = () => {\n  //     setFormData(initialState);\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"personForm\",\n    action: \"/person\",\n    onSubmit: handleFormSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"personForm__item\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Nom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: formData.firstname,\n        name: \"firstname\",\n        onChange: e => stateUpdate(e.target)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"personForm__item\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Pr\\xE9nom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: formData.lastname,\n        name: \"lastname\",\n        onChange: e => stateUpdate(e.target)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"personForm__item\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Adresse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: formData.address,\n        name: \"address\",\n        onChange: e => stateUpdate(e.target)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"personForm__item\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Actif\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => stateUpdate(e.target),\n        value: formData.isActive,\n        name: \"isActive\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"true\",\n          children: \"Yes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"false\",\n          children: \"No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"personForm__item\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Ajouter Personne\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n_c = PersonForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PersonForm\");","map":{"version":3,"sources":["C:/Users/Alex/Documents/react-person/src/components/PersonForm/PersonForm.js"],"names":["React","useState","useEffect","$","PersonForm","setPersonList","setFormData","formData","stateUpdate","target","prevState","name","value","postFormDataAsJson","url","plainFormData","Object","fromEntries","entries","formDataJsonString","JSON","stringify","console","log","fetchOptions","method","headers","body","response","fetch","ok","errorMessage","text","Error","json","handleFormSubmit","e","preventDefault","form","currentTarget","action","FormData","responseData","error","firstname","lastname","address","isActive"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport $ from \"jquery\";\r\nimport './PersonForm.css';\r\n\r\nexport default function PersonForm( { setPersonList, setFormData, formData }) {\r\n    const stateUpdate = target => {\r\n        setFormData(prevState => {\r\n            return {...prevState, [target.name]: target.value};\r\n        });\r\n    }\r\n\r\n    const postFormDataAsJson = async ({ url, formData }) => {\r\n        const plainFormData = Object.fromEntries(formData.entries());\r\n        const formDataJsonString = JSON.stringify(plainFormData);\r\n        console.log(formDataJsonString);\r\n    \r\n        const fetchOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\",\r\n            },\r\n            body: formDataJsonString,\r\n        };\r\n    \r\n        const response = await fetch(url, fetchOptions);\r\n        console.log(response);\r\n    \r\n        if (!response.ok) {\r\n            const errorMessage = await response.text();\r\n            throw new Error(errorMessage);\r\n        }\r\n    \r\n        return response.json();\r\n    }\r\n    \r\n    const handleFormSubmit = async (e) => {\r\n        e.preventDefault();\r\n    \r\n        const form = e.currentTarget;\r\n        console.log(form);\r\n        const url = form.action;\r\n        console.log(url);\r\n    \r\n        try {\r\n            const formData = new FormData(form);\r\n            console.log(formData);\r\n            const responseData = await postFormDataAsJson({ url, formData });\r\n            setPersonList(prevState => {\r\n                return [...prevState, responseData];\r\n            });\r\n            console.log({ responseData });\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    // const reinitializeFormData = () => {\r\n    //     setFormData(initialState);\r\n    // }\r\n\r\n    return (\r\n        <form className=\"personForm\" action=\"/person\" onSubmit={handleFormSubmit}>\r\n            <div className=\"personForm__item\">\r\n                <label>Nom</label>\r\n                <input type=\"text\" value={formData.firstname} name=\"firstname\" onChange={e => stateUpdate(e.target)} />\r\n            </div>\r\n            <div className=\"personForm__item\">\r\n                <label>Prénom</label>\r\n                <input type=\"text\" value={formData.lastname} name=\"lastname\" onChange={e => stateUpdate(e.target)} />\r\n            </div>\r\n            <div className=\"personForm__item\">\r\n                <label>Adresse</label>\r\n                <input type=\"text\" value={formData.address} name=\"address\" onChange={e => stateUpdate(e.target)} />\r\n            </div>\r\n            <div className=\"personForm__item\">\r\n                <label>Actif</label>\r\n                <select onChange={e => stateUpdate(e.target)} value={formData.isActive} name=\"isActive\">\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                </select>\r\n            </div>\r\n            <div className=\"personForm__item\">\r\n                <input type=\"submit\" value=\"Ajouter Personne\" />\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}