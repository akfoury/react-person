{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Documents\\\\react-person\\\\src\\\\components\\\\PersonList\\\\PersonList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PersonList({\n  data\n}) {\n  _s();\n\n  const filterCaseAccentInsensitive = (filter, row) => {\n    const id = filter.pivotId || filter.id;\n    const content = row[id];\n\n    if (typeof content !== 'undefined') {\n      // filter by text in the table or if it's a object, filter by key\n      if (typeof content === 'object' && content !== null && content.key) {\n        return String(content.key).toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\").includes(filter.value.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\"));\n      } else {\n        return String(content).toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\").includes(filter.value.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\"));\n      }\n    }\n\n    return true;\n  };\n\n  useEffect(() => {\n    $('.rt-th > input').attr('autocomplete', 'nope');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Draggable, {\n    axis: \"y\",\n    bounds: {\n      top: 50,\n      bottom: 200\n    },\n    defaultPosition: {\n      x: 0,\n      y: 50\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"drag-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"draggable\",\n        children: /*#__PURE__*/_jsxDEV(ReactTable, {\n          data: data,\n          columns: [{\n            Header: 'PrÃ©nom',\n            accessor: 'firstname',\n            Cell: ({\n              row\n            }) => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-wrap\",\n              children: row.firstname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 37\n            }, this)\n          }, {\n            Header: 'Nom',\n            accessor: 'lastName',\n            Cell: ({\n              row\n            }) => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-wrap\",\n              children: row.lastname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 38\n            }, this)\n          }, {\n            Header: 'Adresse',\n            accessor: 'address',\n            Cell: ({\n              row\n            }) => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-wrap\",\n              children: row.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 38\n            }, this)\n          }, {\n            Header: 'Actif',\n            accessor: 'isActive',\n            Cell: ({\n              row\n            }) => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-wrap\",\n              children: row.isActive\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 38\n            }, this)\n          }],\n          defaultPageSize: 10,\n          className: \"-striped -highlight\",\n          resizable: true //   getTrProps={(state, rowInfo, instance) => {\n          //     return {\n          //       onClick: (e, handleOriginal) => {\n          //         $(e.currentTarget).parents('.rt-tr-group').nextAll().each((index, item) => $(item).css('background-color', 'transparent'));\n          //         $(e.currentTarget).parents('.rt-tr-group').nextAll().find('span').css('color', 'black');\n          //         $(e.currentTarget).parents('.rt-tr-group').nextAll().each((index, item) => $(item).removeClass('clicked'));\n          //         $(e.currentTarget).parents('.rt-tr-group').prevAll().each((index, item) =>  $(item).css('background-color', 'transparent'));\n          //         $(e.currentTarget).parents('.rt-tr-group').prevAll().find('span').css('color', 'black');\n          //         $(e.currentTarget).parents('.rt-tr-group').prevAll().each((index, item) => $(item).removeClass('clicked'));\n          //         if($(e.currentTarget).parents('.rt-tr-group').hasClass('clicked')) {\n          //           $(e.currentTarget).parents('.rt-tr-group').css('background-color', 'transparent');\n          //           $(e.currentTarget).parents('.rt-tr-group').each((index, item) => $(item).find('span').css('color', 'black'));\n          //         } else {\n          //           $(e.currentTarget).parents('.rt-tr-group').css('background-color', 'rgba(60, 84, 180, 0.35)');\n          //           $(e.currentTarget).parents('.rt-tr-group').each((index, item) => $(item).find('span').css('color', 'white'));\n          //         }\n          //         setIsUserUpdate(rowInfo.original.Update);\n          //         setCurrentUser(rowInfo.original);\n          //         setFirstName(rowInfo.original.FirstName);\n          //         setLastName(rowInfo.original.LastName);\n          //         setEmail(rowInfo.original.Email);\n          //         setKnownGroups(rowInfo.original.AffectedGroups.split('; |'));\n          //         reset();\n          //         setDisableStep1(true);\n          //         setDisableStep2(false);\n          //       }\n          //     };\n          //   }}\n          ,\n          filterable: true,\n          defaultFilterMethod: filterCaseAccentInsensitive\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 7\n  }, this);\n}\n\n_s(PersonList, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = PersonList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PersonList\");","map":{"version":3,"sources":["C:/Users/Alex/Documents/react-person/src/components/PersonList/PersonList.js"],"names":["React","PersonList","data","filterCaseAccentInsensitive","filter","row","id","pivotId","content","key","String","toLowerCase","normalize","replace","includes","value","useEffect","$","attr","top","bottom","x","y","Header","accessor","Cell","firstname","lastname","address","isActive"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nexport default function PersonList({ data }) {\r\n    const filterCaseAccentInsensitive= (filter, row) => {\r\n      const id = filter.pivotId || filter.id;\r\n      const content = row[id];\r\n      if (typeof content !== 'undefined') {\r\n          // filter by text in the table or if it's a object, filter by key\r\n          if (typeof content === 'object' && content !== null && content.key) {\r\n              return String(content.key).toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\").includes(filter.value.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\"));\r\n          } else {\r\n              return String(content).toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\").includes(filter.value.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\"));\r\n          }\r\n      }\r\n  \r\n      return true;\r\n  };\r\n  \r\n    useEffect(() => {\r\n      $('.rt-th > input').attr('autocomplete', 'nope');\r\n    }, []);\r\n  \r\n    return (\r\n      <Draggable\r\n        axis=\"y\"\r\n        bounds={{top: 50, bottom: 200}}\r\n        defaultPosition={{x: 0, y: 50}}\r\n      >\r\n        <div id=\"drag-container\">\r\n          <div id=\"draggable\">\r\n            <ReactTable\r\n              data={data}\r\n              columns={[\r\n                {\r\n                  Header: 'PrÃ©nom',\r\n                  accessor: 'firstname',\r\n                  Cell: ({ row }) =><span className=\"text-wrap\">{row.firstname}</span>\r\n                },\r\n                {\r\n                  Header: 'Nom',\r\n                  accessor: 'lastName',\r\n                  Cell: ({ row }) => <span className=\"text-wrap\">{row.lastname}</span>\r\n                },\r\n                {\r\n                  Header: 'Adresse',\r\n                  accessor: 'address',\r\n                  Cell: ({ row }) => <span className=\"text-wrap\">{row.address}</span>\r\n                },\r\n                {\r\n                  Header: 'Actif',\r\n                  accessor: 'isActive',\r\n                  Cell: ({ row }) => <span className=\"text-wrap\">{row.isActive}</span>\r\n                }\r\n              ]}\r\n              defaultPageSize={10}\r\n              className=\"-striped -highlight\"\r\n              resizable={true}\r\n            //   getTrProps={(state, rowInfo, instance) => {\r\n            //     return {\r\n            //       onClick: (e, handleOriginal) => {\r\n            //         $(e.currentTarget).parents('.rt-tr-group').nextAll().each((index, item) => $(item).css('background-color', 'transparent'));\r\n            //         $(e.currentTarget).parents('.rt-tr-group').nextAll().find('span').css('color', 'black');\r\n            //         $(e.currentTarget).parents('.rt-tr-group').nextAll().each((index, item) => $(item).removeClass('clicked'));\r\n              \r\n            //         $(e.currentTarget).parents('.rt-tr-group').prevAll().each((index, item) =>  $(item).css('background-color', 'transparent'));\r\n            //         $(e.currentTarget).parents('.rt-tr-group').prevAll().find('span').css('color', 'black');\r\n            //         $(e.currentTarget).parents('.rt-tr-group').prevAll().each((index, item) => $(item).removeClass('clicked'));\r\n              \r\n            //         if($(e.currentTarget).parents('.rt-tr-group').hasClass('clicked')) {\r\n            //           $(e.currentTarget).parents('.rt-tr-group').css('background-color', 'transparent');\r\n            //           $(e.currentTarget).parents('.rt-tr-group').each((index, item) => $(item).find('span').css('color', 'black'));\r\n            //         } else {\r\n            //           $(e.currentTarget).parents('.rt-tr-group').css('background-color', 'rgba(60, 84, 180, 0.35)');\r\n            //           $(e.currentTarget).parents('.rt-tr-group').each((index, item) => $(item).find('span').css('color', 'white'));\r\n            //         }\r\n  \r\n            //         setIsUserUpdate(rowInfo.original.Update);\r\n            //         setCurrentUser(rowInfo.original);\r\n            //         setFirstName(rowInfo.original.FirstName);\r\n            //         setLastName(rowInfo.original.LastName);\r\n            //         setEmail(rowInfo.original.Email);\r\n            //         setKnownGroups(rowInfo.original.AffectedGroups.split('; |'));\r\n            //         reset();\r\n            //         setDisableStep1(true);\r\n            //         setDisableStep2(false);\r\n            //       }\r\n            //     };\r\n            //   }}\r\n              filterable\r\n              defaultFilterMethod={filterCaseAccentInsensitive}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Draggable>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}