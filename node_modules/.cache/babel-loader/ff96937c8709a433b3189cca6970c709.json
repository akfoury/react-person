{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Documents\\\\react-person\\\\src\\\\components\\\\PersonList\\\\PersonList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport './PersonList.css';\nimport $ from \"jquery\";\nimport { convertFormDataToObject } from '../../utils/FormData';\nimport { getListOfFilteredID } from '../../utils/ListFilter';\nimport { putFormDataAsJson, deletePerson, deleteAllPerson } from '../../api/PersonAPI';\nimport { List, ListItem, ListItemSecondaryAction, ListItemText, IconButton, Grid, Typography, Button, Chip } from '@mui/material';\nimport { Close, Send, Edit, ClearAll } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PersonList({\n  setPersonList,\n  personList\n}) {\n  _s();\n\n  const [editedRowIndex, setEditedRowIndex] = useState(null);\n  const [filterOptions, setFilterOptions] = useState(initialFilteredPersonList);\n  const [filteredListPerson, setFilteredListPerson] = useState([]); // Gestion du state stockant les valeurs de filtrage\n\n  const handleFormFilterInput = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    setFilterOptions(prevState => {\n      return { ...prevState,\n        [name]: value\n      };\n    });\n  }; // permet de switcher sur le mode édition d'une ligne\n\n\n  const toggleIsEditing = e => {\n    const personID = $(e.currentTarget).data(\"idedit\");\n    const editableIndex = filteredListPerson.findIndex(item => parseInt(item.id) === parseInt(personID));\n    setEditedRowIndex(editableIndex);\n  }; // gestion du button delete\n\n\n  const handleDelete = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    const personID = $(e.currentTarget).data(\"iddelete\");\n    deletePerson(personID).then(() => {\n      // Récuperer l'index de l'élément à supprimer\n      const removeIndex = filteredListPerson.findIndex(item => item.id === parseInt(personID)); // Faire une copie du state\n\n      const newArray = [...filteredListPerson]; // Supprimer l'élément du nouveau tableau\n\n      newArray.splice(removeIndex, 1); // Mettre à jour le state\n\n      setFilteredListPerson(newArray);\n    });\n  };\n\n  const handleDeleteAll = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    deleteAllPerson().then(() => {\n      setFilteredListPerson([]);\n      setPersonList([]);\n    });\n  }; // Element React pour la modification d'une ligne\n\n\n  const EditableRow = ({\n    value,\n    name,\n    type,\n    lastRow\n  }) => {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"flex-start\",\n          width: lastRow ? '70%' : '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          defaultValue: value,\n          name: name,\n          type: type,\n          style: {\n            border: '#008080 solid 0.5px',\n            width: '100%',\n            margin: '2px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this);\n  }; // Gérer le formulaire de la mise à jour d'une personne\n\n\n  const handleFormSubmit = async e => {\n    e.preventDefault(); // Récupérer les données du formulaire\n\n    const personID = $(e.currentTarget).find('.personID').find('input').attr('value');\n    const updateIndex = filteredListPerson.findIndex(item => parseInt(item.id) === parseInt(personID));\n    const url = `person/${personID}`;\n\n    try {\n      // Requête PUT\n      const {\n        formData,\n        _\n      } = convertFormDataToObject(e);\n      let responseData = await putFormDataAsJson({\n        formData,\n        url\n      }); // Mise à jour de la liste des utilisateurs\n\n      setPersonList(prevState => {\n        return [...prevState.slice(0, updateIndex), responseData, ...prevState.slice(updateIndex + 1)];\n      });\n      setEditedRowIndex(-1);\n    } catch (error) {\n      console.error(error);\n    }\n  }; // Initialisation du state stockant la liste filtrée\n\n\n  useEffect(() => {\n    setFilteredListPerson(personList);\n  }, [personList]); // Appel à l'algorithme à chaque fois qu'une valeur de filtrage change\n\n  useEffect(() => {\n    const filteredID = getListOfFilteredID(filterOptions, personList);\n\n    if (filteredID.length != 0) {\n      setFilteredListPerson(personList.filter((item, index) => filteredID.includes(String(item.id))));\n    }\n  }, [filterOptions]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 16,\n    md: 12,\n    className: \"grid\",\n    children: /*#__PURE__*/_jsxDEV(List, {\n      className: \"list\",\n      children: [/*#__PURE__*/_jsxDEV(ListItem, {\n        className: \"list-item\",\n        style: {\n          backgroundColor: '#9AC2C980'\n        },\n        children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n          disableTypography: true,\n          primary: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"body2\",\n            style: {\n              fontWeight: 700,\n              width: 10,\n              color: '#004040'\n            },\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 34\n          }, this),\n          className: \"list-item-text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          disableTypography: true,\n          primary: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"body2\",\n            style: {\n              fontWeight: 700,\n              width: 10,\n              color: '#004040'\n            },\n            children: \"Pr\\xE9nom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 34\n          }, this),\n          className: \"list-item-text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          disableTypography: true,\n          primary: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"body2\",\n            style: {\n              fontWeight: 700,\n              width: 10,\n              color: '#004040'\n            },\n            children: \"Nom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 34\n          }, this),\n          className: \"list-item-text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          disableTypography: true,\n          primary: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"body2\",\n            style: {\n              fontWeight: 700,\n              width: 10,\n              color: '#004040'\n            },\n            children: \"Adresse\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 34\n          }, this),\n          className: \"list-item-text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          disableTypography: true,\n          primary: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"body2\",\n            style: {\n              fontWeight: 700,\n              width: 10,\n              color: '#004040',\n              paddingRight: 30\n            },\n            children: \"Actif\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 34\n          }, this),\n          className: \"list-item-text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            edge: \"end\",\n            \"aria-label\": \"delete\",\n            type: \"submit\",\n            children: /*#__PURE__*/_jsxDEV(Send, {\n              style: {\n                display: \"none\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            edge: \"end\",\n            \"aria-label\": \"delete\",\n            type: \"submit\",\n            children: /*#__PURE__*/_jsxDEV(Send, {\n              style: {\n                display: \"none\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), filteredListPerson && filteredListPerson.map((item, index) => index === editedRowIndex ? /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"editForm\",\n        onSubmit: handleFormSubmit,\n        children: /*#__PURE__*/_jsxDEV(ListItem, {\n          className: \"list-item\",\n          children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n            disableTypography: true,\n            primary: /*#__PURE__*/_jsxDEV(EditableRow, {\n              value: item.id,\n              name: \"id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 42\n            }, this),\n            className: \"list-item-text personID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            disableTypography: true,\n            primary: /*#__PURE__*/_jsxDEV(EditableRow, {\n              value: item.firstname,\n              name: \"firstname\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 42\n            }, this),\n            className: \"list-item-text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            disableTypography: true,\n            primary: /*#__PURE__*/_jsxDEV(EditableRow, {\n              value: item.lastname,\n              name: \"lastname\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 42\n            }, this),\n            className: \"list-item-text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            disableTypography: true,\n            primary: /*#__PURE__*/_jsxDEV(EditableRow, {\n              value: item.address,\n              name: \"address\",\n              type: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 42\n            }, this),\n            className: \"list-item-text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            disableTypography: true,\n            primary: /*#__PURE__*/_jsxDEV(EditableRow, {\n              value: item.isActive,\n              name: \"isActive\",\n              lastRow: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 42\n            }, this),\n            className: \"list-item-text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              edge: \"end\",\n              \"aria-label\": \"edit\",\n              type: \"submit\",\n              children: /*#__PURE__*/_jsxDEV(Send, {\n                style: {\n                  fill: \"#008080\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(ListItem, {\n        className: \"list-item\",\n        children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n          disableTypography: true,\n          primary: /*#__PURE__*/_jsxDEV(Typography, {\n            type: \"body2\",\n            children: item.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 34\n          }, this),\n          className: \"list-item-text personID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          disableTypography: true,\n          primary: /*#__PURE__*/_jsxDEV(Typography, {\n            type: \"body2\",\n            children: item.firstname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 34\n          }, this),\n          className: \"list-item-text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          disableTypography: true,\n          primary: /*#__PURE__*/_jsxDEV(Typography, {\n            type: \"body2\",\n            children: item.lastname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 34\n          }, this),\n          className: \"list-item-text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          disableTypography: true,\n          primary: /*#__PURE__*/_jsxDEV(Typography, {\n            type: \"body2\",\n            children: item.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 34\n          }, this),\n          className: \"list-item-text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          disableTypography: true,\n          primary: parseInt(item.isActive) ? /*#__PURE__*/_jsxDEV(Chip, {\n            style: {\n              backgroundColor: 'rgba(53, 219, 94, 0.8)',\n              color: 'white',\n              fontWeight: 700\n            },\n            label: \"Actif\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 60\n          }, this) : /*#__PURE__*/_jsxDEV(Chip, {\n            style: {\n              backgroundColor: 'rgba(209, 42, 23, 0.8)',\n              color: 'white',\n              fontWeight: 700\n            },\n            label: \"Inactif\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 170\n          }, this),\n          className: \"list-item-text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            edge: \"end\",\n            \"aria-label\": \"edit\",\n            onClick: toggleIsEditing,\n            \"data-idedit\": item.id,\n            children: /*#__PURE__*/_jsxDEV(Edit, {\n              style: {\n                fill: \"#008080\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            edge: \"end\",\n            \"aria-label\": \"delete\",\n            onClick: handleDelete,\n            \"data-iddelete\": item.id,\n            children: /*#__PURE__*/_jsxDEV(Close, {\n              style: {\n                fill: \"#008080\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PersonList, \"RxFeJpGEPZWP/6Qzzg70gNz85eg=\");\n\n_c = PersonList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PersonList\");","map":{"version":3,"sources":["C:/Users/Alex/Documents/react-person/src/components/PersonList/PersonList.js"],"names":["React","useState","useEffect","$","convertFormDataToObject","getListOfFilteredID","putFormDataAsJson","deletePerson","deleteAllPerson","List","ListItem","ListItemSecondaryAction","ListItemText","IconButton","Grid","Typography","Button","Chip","Close","Send","Edit","ClearAll","PersonList","setPersonList","personList","editedRowIndex","setEditedRowIndex","filterOptions","setFilterOptions","initialFilteredPersonList","filteredListPerson","setFilteredListPerson","handleFormFilterInput","e","value","name","target","prevState","toggleIsEditing","personID","currentTarget","data","editableIndex","findIndex","item","parseInt","id","handleDelete","preventDefault","stopPropagation","then","removeIndex","newArray","splice","handleDeleteAll","EditableRow","type","lastRow","display","justifyContent","width","border","margin","handleFormSubmit","find","attr","updateIndex","url","formData","_","responseData","slice","error","console","filteredID","length","filter","index","includes","String","backgroundColor","fontWeight","color","paddingRight","map","firstname","lastname","address","isActive","fill"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport './PersonList.css';\r\nimport $ from \"jquery\";\r\nimport { convertFormDataToObject } from '../../utils/FormData';\r\nimport { getListOfFilteredID } from '../../utils/ListFilter';\r\nimport { \r\n    putFormDataAsJson, \r\n    deletePerson, \r\n    deleteAllPerson \r\n} from '../../api/PersonAPI';\r\nimport {\r\n    List,\r\n    ListItem,\r\n    ListItemSecondaryAction,\r\n    ListItemText,\r\n    IconButton,\r\n    Grid,\r\n    Typography,\r\n    Button,\r\n    Chip\r\n} from '@mui/material';\r\nimport {\r\n    Close,\r\n    Send,\r\n    Edit,\r\n    ClearAll\r\n} from '@mui/icons-material';\r\n\r\n\r\nexport default function PersonList({ setPersonList, personList }) {\r\n    const [editedRowIndex, setEditedRowIndex] = useState(null);\r\n    const [filterOptions, setFilterOptions]  = useState(initialFilteredPersonList);\r\n    const [filteredListPerson, setFilteredListPerson] = useState([]);\r\n\r\n    // Gestion du state stockant les valeurs de filtrage\r\n    const handleFormFilterInput = (e) => {\r\n        const { value, name } = e.target;\r\n        setFilterOptions(prevState => {\r\n            return {...prevState, [name]: value}\r\n        });\r\n    }\r\n\r\n    // permet de switcher sur le mode édition d'une ligne\r\n    const toggleIsEditing = (e) => {\r\n        const personID = $(e.currentTarget).data(\"idedit\");\r\n        const editableIndex = filteredListPerson.findIndex(item => parseInt(item.id) === parseInt(personID));\r\n        setEditedRowIndex(editableIndex);\r\n    }  \r\n    \r\n    // gestion du button delete\r\n    const handleDelete = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        const personID = $(e.currentTarget).data(\"iddelete\");\r\n\r\n        deletePerson(personID).then(() => {\r\n            // Récuperer l'index de l'élément à supprimer\r\n            const removeIndex = filteredListPerson.findIndex(item => item.id === parseInt(personID));\r\n        \r\n            // Faire une copie du state\r\n            const newArray = [...filteredListPerson];\r\n        \r\n            // Supprimer l'élément du nouveau tableau\r\n            newArray.splice(removeIndex, 1);\r\n        \r\n            // Mettre à jour le state\r\n            setFilteredListPerson(newArray);\r\n        });\r\n    }\r\n\r\n    const handleDeleteAll = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        deleteAllPerson().then(() => {\r\n            setFilteredListPerson([]);\r\n            setPersonList([]);\r\n        });\r\n    }\r\n\r\n    // Element React pour la modification d'une ligne\r\n    const EditableRow = ({ value, name, type, lastRow }) => {\r\n        return (\r\n            <React.Fragment>\r\n            <div style={{ display: \"flex\", justifyContent: \"flex-start\", width: lastRow ? '70%' : '100%' }}>\r\n                <input\r\n                    defaultValue={value}\r\n                    name={name}\r\n                    type={type}\r\n                    style={{border: '#008080 solid 0.5px', width: '100%', margin: '2px'}}\r\n                />\r\n            </div>\r\n            </React.Fragment>\r\n        )\r\n    };\r\n\r\n    // Gérer le formulaire de la mise à jour d'une personne\r\n    const handleFormSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Récupérer les données du formulaire\r\n        const personID = $(e.currentTarget).find('.personID').find('input').attr('value');\r\n        const updateIndex = filteredListPerson.findIndex(item => parseInt(item.id) === parseInt(personID));\r\n        const url = `person/${personID}`;\r\n\r\n        try {\r\n            // Requête PUT\r\n            const { formData, _} = convertFormDataToObject(e);\r\n            let responseData = await putFormDataAsJson({ formData, url });\r\n\r\n            // Mise à jour de la liste des utilisateurs\r\n            setPersonList(prevState => {\r\n                return  [...prevState.slice(0, updateIndex), responseData, ...prevState.slice(updateIndex + 1)];\r\n            });\r\n\r\n            setEditedRowIndex(-1);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    // Initialisation du state stockant la liste filtrée\r\n    useEffect(() => {\r\n        setFilteredListPerson(personList);\r\n    }, [personList]);\r\n\r\n    // Appel à l'algorithme à chaque fois qu'une valeur de filtrage change\r\n    useEffect(() => {\r\n        const filteredID = getListOfFilteredID(filterOptions, personList);\r\n        if (filteredID.length != 0) {\r\n            setFilteredListPerson(personList.filter((item, index) => filteredID.includes(String(item.id))));\r\n        }\r\n    }, [filterOptions]);\r\n\r\n    return (\r\n        <Grid item xs={16} md={12} className=\"grid\">\r\n            <List className='list'>\r\n                <ListItem className='list-item' style={{ backgroundColor: '#9AC2C980' }}>\r\n                    <ListItemText\r\n                        disableTypography\r\n                        primary={<Button type=\"body2\" style={{ fontWeight: 700, width: 10, color: '#004040' }}>ID</Button>}\r\n                        className='list-item-text'\r\n                    />\r\n                    <ListItemText\r\n                        disableTypography\r\n                        primary={<Button type=\"body2\" style={{ fontWeight: 700, width: 10, color: '#004040' }}>Prénom</Button>}\r\n                        className='list-item-text'\r\n                    />\r\n                    <ListItemText\r\n                        disableTypography\r\n                        primary={<Button type=\"body2\" style={{ fontWeight: 700, width: 10, color: '#004040' }}>Nom</Button>}\r\n                        className='list-item-text'\r\n                    />\r\n                    <ListItemText\r\n                        disableTypography\r\n                        primary={<Button type=\"body2\" style={{ fontWeight: 700, width: 10, color: '#004040' }}>Adresse</Button>}\r\n                        className='list-item-text'\r\n                    />\r\n                    <ListItemText\r\n                        disableTypography\r\n                        primary={<Button type=\"body2\" style={{ fontWeight: 700, width: 10, color: '#004040', paddingRight: 30 }}>Actif</Button>}\r\n                        className='list-item-text'\r\n                    />\r\n                    <ListItemSecondaryAction>\r\n                        <IconButton edge=\"end\" aria-label=\"delete\" type=\"submit\">\r\n                            <Send \r\n                                style={{display: \"none\"}} \r\n                            />\r\n                        </IconButton>\r\n                    </ListItemSecondaryAction>\r\n                    <ListItemSecondaryAction>\r\n                        <IconButton edge=\"end\" aria-label=\"delete\" type=\"submit\">\r\n                            <Send \r\n                                style={{display: \"none\"}} \r\n                            />\r\n                        </IconButton>\r\n                    </ListItemSecondaryAction>\r\n                </ListItem>\r\n                \r\n            {filteredListPerson && filteredListPerson.map((item, index) => (\r\n                index === editedRowIndex ? ( \r\n                    <form className=\"editForm\" onSubmit={handleFormSubmit}>\r\n                        <ListItem className='list-item'>\r\n                            <ListItemText\r\n                                disableTypography\r\n                                primary={<EditableRow value={item.id} name=\"id\" />}\r\n                                className='list-item-text personID'\r\n                            />\r\n                            <ListItemText\r\n                                disableTypography\r\n                                primary={<EditableRow value={item.firstname} name=\"firstname\" />}\r\n                                className='list-item-text'\r\n                            />\r\n                            <ListItemText\r\n                                disableTypography\r\n                                primary={<EditableRow value={item.lastname} name=\"lastname\" />}\r\n                                className='list-item-text'\r\n                            />\r\n                            <ListItemText\r\n                                disableTypography\r\n                                primary={<EditableRow value={item.address} name=\"address\" type={\"email\"}/>}\r\n                                className='list-item-text'\r\n                            />\r\n                            <ListItemText\r\n                                disableTypography\r\n                                primary={<EditableRow value={item.isActive} name=\"isActive\" lastRow={true} />}\r\n                                className='list-item-text'\r\n                            />\r\n                            <ListItemSecondaryAction>\r\n                                <IconButton edge=\"end\" aria-label=\"edit\" type=\"submit\">\r\n                                    <Send \r\n                                        style={{fill: \"#008080\"}} \r\n                                    />\r\n                                </IconButton>\r\n                            </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                    </form>\r\n                    ) : (\r\n                <ListItem className='list-item'>\r\n                        <ListItemText\r\n                        disableTypography\r\n                        primary={<Typography type=\"body2\">{item.id}</Typography>}\r\n                        className='list-item-text personID'\r\n                        />\r\n                        <ListItemText\r\n                        disableTypography\r\n                        primary={<Typography type=\"body2\" >{item.firstname}</Typography>}\r\n                        className='list-item-text'\r\n                        />\r\n                        <ListItemText\r\n                        disableTypography\r\n                        primary={<Typography type=\"body2\">{item.lastname}</Typography>}\r\n                        className='list-item-text'\r\n                        />\r\n                        <ListItemText\r\n                        disableTypography\r\n                        primary={<Typography type=\"body2\">{item.address}</Typography>}\r\n                        className='list-item-text'\r\n                        />\r\n                        <ListItemText\r\n                        disableTypography\r\n                        primary={parseInt(item.isActive) ? <Chip style={{backgroundColor: 'rgba(53, 219, 94, 0.8)', color: 'white', fontWeight: 700}} label=\"Actif\" /> : <Chip style={{backgroundColor: 'rgba(209, 42, 23, 0.8)', color: 'white', fontWeight: 700}} label=\"Inactif\" />}\r\n                        className='list-item-text'\r\n                        />\r\n                    <ListItemSecondaryAction>\r\n                        <IconButton edge=\"end\" aria-label=\"edit\" onClick={toggleIsEditing} data-idedit={item.id} >\r\n                            <Edit \r\n                                style={{fill: \"#008080\"}} \r\n                            />\r\n                        </IconButton>\r\n                        <IconButton edge=\"end\" aria-label=\"delete\" onClick={handleDelete} data-iddelete={item.id}>\r\n                            <Close \r\n                                style={{fill: \"#008080\"}} \r\n                            />\r\n                        </IconButton>\r\n                    </ListItemSecondaryAction>\r\n                </ListItem>\r\n                )\r\n            ))}\r\n            </List>\r\n        </Grid>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}