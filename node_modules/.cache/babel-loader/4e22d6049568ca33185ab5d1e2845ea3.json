{"ast":null,"code":"// Algorithme de filtrage de la liste\nexport var getListOfFilteredID=function getListOfFilteredID(filterOptions,list){var counter={};list.map(function(item){return counter[item.id]=0;});list.map(function(item){Object.entries(item).map(function(val){if(String(val[1]).toLowerCase().startsWith(String(filterOptions[val[0]]).toLowerCase())&&String(filterOptions[val[0]])!=''){counter[item[\"id\"]]+=1;}});});var numberOfFieldsFilled=Object.values(filterOptions).filter(Boolean).length;counter=Object.entries(counter).filter(function(val){return val[1]===numberOfFieldsFilled;});counter=Object.fromEntries(counter);var idFiltered=Object.keys(counter);return idFiltered;};","map":{"version":3,"sources":["C:/Users/Alex/Documents/react-person/src/utils/ListFilter.js"],"names":["getListOfFilteredID","filterOptions","list","counter","map","item","id","Object","entries","val","String","toLowerCase","startsWith","numberOfFieldsFilled","values","filter","Boolean","length","fromEntries","idFiltered","keys"],"mappings":"AAAA;AACA,MAAO,IAAMA,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,aAAD,CAAgBC,IAAhB,CAAyB,CACxD,GAAIC,CAAAA,OAAO,CAAG,EAAd,CACAD,IAAI,CAACE,GAAL,CAAS,SAAAC,IAAI,QAAIF,CAAAA,OAAO,CAACE,IAAI,CAACC,EAAN,CAAP,CAAmB,CAAvB,EAAb,EACAJ,IAAI,CAACE,GAAL,CAAS,SAAAC,IAAI,CAAI,CACbE,MAAM,CAACC,OAAP,CAAeH,IAAf,EAAqBD,GAArB,CAAyB,SAAAK,GAAG,CAAI,CAC5B,GAAIC,MAAM,CAACD,GAAG,CAAC,CAAD,CAAJ,CAAN,CAAeE,WAAf,GAA6BC,UAA7B,CAAwCF,MAAM,CAACT,aAAa,CAACQ,GAAG,CAAC,CAAD,CAAJ,CAAd,CAAN,CAA8BE,WAA9B,EAAxC,GAAwFD,MAAM,CAACT,aAAa,CAACQ,GAAG,CAAC,CAAD,CAAJ,CAAd,CAAN,EAAiC,EAA7H,CAAiI,CAC7HN,OAAO,CAACE,IAAI,CAAC,IAAD,CAAL,CAAP,EAAuB,CAAvB,CACH,CACJ,CAJD,EAKH,CAND,EAOA,GAAMQ,CAAAA,oBAAoB,CAAGN,MAAM,CAACO,MAAP,CAAcb,aAAd,EAA6Bc,MAA7B,CAAoCC,OAApC,EAA6CC,MAA1E,CACAd,OAAO,CAAGI,MAAM,CAACC,OAAP,CAAeL,OAAf,EAAwBY,MAAxB,CAA+B,SAAAN,GAAG,QAAIA,CAAAA,GAAG,CAAC,CAAD,CAAH,GAAWI,oBAAf,EAAlC,CAAV,CACAV,OAAO,CAAGI,MAAM,CAACW,WAAP,CAAmBf,OAAnB,CAAV,CACA,GAAMgB,CAAAA,UAAU,CAAGZ,MAAM,CAACa,IAAP,CAAYjB,OAAZ,CAAnB,CAEA,MAAOgB,CAAAA,UAAP,CACH,CAhBM","sourcesContent":["// Algorithme de filtrage de la liste\r\nexport const getListOfFilteredID = (filterOptions, list) => {\r\n    let counter = {}\r\n    list.map(item => counter[item.id] = 0);\r\n    list.map(item => {\r\n        Object.entries(item).map(val => {\r\n            if (String(val[1]).toLowerCase().startsWith(String(filterOptions[val[0]]).toLowerCase()) && String(filterOptions[val[0]]) != '') {\r\n                counter[item[\"id\"]] += 1;\r\n            }\r\n        });  \r\n    });\r\n    const numberOfFieldsFilled = Object.values(filterOptions).filter(Boolean).length;\r\n    counter = Object.entries(counter).filter(val => val[1] === numberOfFieldsFilled);\r\n    counter = Object.fromEntries(counter);\r\n    const idFiltered = Object.keys(counter);\r\n\r\n    return idFiltered;\r\n};"]},"metadata":{},"sourceType":"module"}