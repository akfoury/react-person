{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Documents\\\\react-person\\\\src\\\\components\\\\PersonList\\\\PersonList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport './PersonList.css';\nimport $ from \"jquery\";\nimport Scrollbars from 'react-custom-scrollbars';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SendIcon from '@material-ui/icons/Send';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { v4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PersonList({\n  setPersonList,\n  personList\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [editedRowIndex, setEditedRowIndex] = useState(null);\n  const [filterOptions, setFilterOptions] = useState({});\n  const [filteredPerson, setFilteredPerson] = useState(personList); // function multiCriterionFilterArray(array, filters, searchString) {\n  //     const filterKeys = Object.keys(filters);\n  //     return array.filter(item => {\n  //       // validates all filter criteria\n  //       return filterKeys.every(key => {\n  //         // ignores non-function predicates\n  //         if (typeof filters[key] !== 'function') return true;\n  //         return filters[key](item[key], searchString[key]);\n  //       });\n  //     });\n  // }\n\n  const handleFormFilterInput = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    setFilterOptions(prevState => {\n      return { ...prevState,\n        [name]: value\n      };\n    });\n  };\n\n  const filter = () => {\n    let form = $('.filterForm')[0];\n    form = new FormData(form);\n    const plainFormData = Object.fromEntries(form.entries());\n    console.log(plainFormData);\n    setFilterOptions(plainFormData); // const keyword = value;\n    // console.log(filterOptions);\n    // const isEmpty = Object.values(filterOptions).every(x => x === null || x === '');\n    // if (keyword !== '') {\n    //   const results = personList.filter((person) => {\n    //     console.log(person);\n    //     console.log(name);\n    //     setFilterOptions({...filterOptions, [name]: keyword});\n    //     return person[name].toLowerCase().startsWith(keyword.toLowerCase());\n    //   });\n    //   setFilteredPerson(results);\n    // } else {\n    //     setFilterOptions({...filterOptions, [name]: ''});\n    // }\n    // if (isEmpty) {\n    //   // Si tout les champs sont vides mettre à jour le tableau avec toutes les personnes\n    //   setFilteredPerson(personList);\n    // }\n  }; // permet de switcher sur le mode édition d'une ligne\n\n\n  const toggleIsEditing = e => {\n    if ($(e.currentTarget).attr('class').includes('editableIcon')) {\n      const personID = $($(e.currentTarget).parents()[3]).find('.personID').text();\n      const editableIndex = personList.findIndex(item => parseInt(item.id) === parseInt(personID));\n      setEditedRowIndex(editableIndex);\n    }\n  }; // Element React pour la modification d'une ligne\n\n\n  const EditableRow = ({\n    value,\n    name\n  }) => {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"MuiTypography-root MuiTypography-h7 MuiTypography-displayInline\",\n          defaultValue: value,\n          name: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            display: \"none\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this);\n  }; // Element React pour la modification d'une ligne\n\n\n  const FilterInput = ({\n    value,\n    name,\n    key,\n    handleFormFilterInput\n  }) => {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"MuiTypography-root MuiTypography-h7 MuiTypography-displayInline\",\n          defaultValue: value,\n          onChange: handleFormFilterInput,\n          name: name,\n          autFocus: true\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            display: \"none\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this);\n  }; // Supprimer une personne de la liste\n\n\n  const deleteRow = e => {\n    // Supprimer l'élément dans la base de données\n    const personID = $($(e.currentTarget).parents()[3]).find('.personID').text();\n    const myInit = {\n      method: 'DELETE'\n    };\n    fetch(`person/${personID}`, myInit).then(() => {\n      // Récuperer l'index de l'élément à supprimer\n      const removeIndex = personList.findIndex(item => item.id === parseInt(personID)); // Faire une copie du state\n\n      const newArray = [...personList]; // Supprimer l'élément du nouveau tableau\n\n      newArray.splice(removeIndex, 1); // Mettre à jour le state\n\n      setPersonList(newArray);\n    });\n  }; // Convertir les données du formulaire sous la forme d'un objet js\n\n\n  const convertFormDataToObject = e => {\n    const form = e.currentTarget;\n    return new FormData(form);\n  }; // Gérer le formulaire de la mise à jour d'une personne\n\n\n  const handleFormSubmit = async e => {\n    e.preventDefault(); // Récupérer les données du formulaire\n\n    const personID = $(e.currentTarget).find('.personID').find('input').attr('value');\n    const updateIndex = personList.findIndex(item => parseInt(item.id) === parseInt(personID));\n    const url = `person/${personID}`;\n\n    try {\n      // Requête PUT\n      const formData = convertFormDataToObject(e);\n      let responseData = await putFormDataAsJson({\n        url,\n        formData\n      }); // Mise à jour de la liste des utilisateurs\n\n      setPersonList(prevState => {\n        return [...prevState.slice(0, updateIndex), responseData, ...prevState.slice(updateIndex + 1)];\n      });\n      setEditedRowIndex(-1);\n    } catch (error) {\n      console.error(error);\n    }\n  }; // REQUETE PUT via l'api person\n\n\n  const putFormDataAsJson = async ({\n    url,\n    formData\n  }) => {\n    const plainFormData = Object.fromEntries(formData.entries());\n    const formDataJsonString = JSON.stringify(plainFormData);\n    const fetchOptions = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: formDataJsonString\n    };\n    const response = await fetch(url, fetchOptions);\n\n    if (!response.ok) {\n      const errorMessage = await response.text();\n      throw new Error(errorMessage);\n    }\n\n    return response.json();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Scrollbars, {\n      style: {\n        width: '70%',\n        height: '100%'\n      },\n      renderTrackHorizontal: props => /*#__PURE__*/_jsxDEV(\"div\", { ...props,\n        style: {\n          display: 'none'\n        },\n        className: \"track-horizontal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 94\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 16,\n        md: 12,\n        children: /*#__PURE__*/_jsxDEV(List, {\n          className: classes.List,\n          children: [/*#__PURE__*/_jsxDEV(ListItem, {\n            className: classes.listItem,\n            style: {\n              backgroundColor: '#9AC2C980'\n            },\n            children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n              disableTypography: true,\n              primary: /*#__PURE__*/_jsxDEV(Typography, {\n                type: \"body2\",\n                style: {\n                  fontWeight: 700,\n                  width: 10,\n                  color: '#004040'\n                },\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 38\n              }, this),\n              className: classes.listItemText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              disableTypography: true,\n              primary: /*#__PURE__*/_jsxDEV(Typography, {\n                type: \"body2\",\n                style: {\n                  fontWeight: 700,\n                  width: 10,\n                  color: '#004040'\n                },\n                children: \"Pr\\xE9nom\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 38\n              }, this),\n              className: classes.listItemText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              disableTypography: true,\n              primary: /*#__PURE__*/_jsxDEV(Typography, {\n                type: \"body2\",\n                style: {\n                  fontWeight: 700,\n                  width: 10,\n                  color: '#004040'\n                },\n                children: \"Nom\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 38\n              }, this),\n              className: classes.listItemText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              disableTypography: true,\n              primary: /*#__PURE__*/_jsxDEV(Typography, {\n                type: \"body2\",\n                style: {\n                  fontWeight: 700,\n                  width: 10,\n                  color: '#004040'\n                },\n                children: \"Adresse\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 38\n              }, this),\n              className: classes.listItemText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              disableTypography: true,\n              primary: /*#__PURE__*/_jsxDEV(Typography, {\n                type: \"body2\",\n                style: {\n                  fontWeight: 700,\n                  width: 10,\n                  color: '#004040'\n                },\n                children: \"Actif\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 38\n              }, this),\n              className: classes.listItemText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"filterForm\",\n            children: /*#__PURE__*/_jsxDEV(ListItem, {\n              children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                disableTypography: true,\n                primary: /*#__PURE__*/_jsxDEV(FilterInput, {\n                  value: filterOptions[\"id\"],\n                  name: \"id\",\n                  handleFormFilterInput: handleFormFilterInput\n                }, \"id\", false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 42\n                }, this),\n                className: `${classes.listItemText} personID`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                disableTypography: true,\n                primary: /*#__PURE__*/_jsxDEV(FilterInput, {\n                  value: filterOptions[\"firstname\"],\n                  name: \"firstname\",\n                  handleFormFilterInput: handleFormFilterInput\n                }, \"firstname\", false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 42\n                }, this),\n                className: classes.listItemText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                disableTypography: true,\n                primary: /*#__PURE__*/_jsxDEV(FilterInput, {\n                  value: filterOptions[\"lastname\"],\n                  name: \"lastname\",\n                  handleFormFilterInput: handleFormFilterInput\n                }, \"lastname\", false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 42\n                }, this),\n                className: classes.listItemText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                disableTypography: true,\n                primary: /*#__PURE__*/_jsxDEV(FilterInput, {\n                  value: filterOptions[\"address\"],\n                  name: \"address\",\n                  handleFormFilterInput: handleFormFilterInput\n                }, \"isActive\", false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 42\n                }, this),\n                className: classes.listItemText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                disableTypography: true,\n                primary: /*#__PURE__*/_jsxDEV(FilterInput, {\n                  value: filterOptions[\"isActive\"],\n                  name: \"isActive\",\n                  handleFormFilterInput: handleFormFilterInput\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 42\n                }, this),\n                className: classes.listItemText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 21\n          }, this), personList.map((item, index) => index === editedRowIndex ? /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"editForm\",\n            onSubmit: handleFormSubmit,\n            children: /*#__PURE__*/_jsxDEV(ListItem, {\n              className: classes.listItem,\n              children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                disableTypography: true,\n                primary: /*#__PURE__*/_jsxDEV(EditableRow, {\n                  value: item.id,\n                  name: \"id\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 46\n                }, this),\n                className: `${classes.listItemText} personID`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                disableTypography: true,\n                primary: /*#__PURE__*/_jsxDEV(EditableRow, {\n                  value: item.firstname,\n                  name: \"firstname\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 46\n                }, this),\n                className: classes.listItemText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                disableTypography: true,\n                primary: /*#__PURE__*/_jsxDEV(EditableRow, {\n                  value: item.lastname,\n                  name: \"lastname\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 46\n                }, this),\n                className: classes.listItemText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                disableTypography: true,\n                primary: /*#__PURE__*/_jsxDEV(EditableRow, {\n                  value: item.address,\n                  name: \"address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 46\n                }, this),\n                className: classes.listItemText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                disableTypography: true,\n                primary: /*#__PURE__*/_jsxDEV(EditableRow, {\n                  value: item.isActive,\n                  name: \"isActive\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 46\n                }, this),\n                className: classes.listItemText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  edge: \"end\",\n                  \"aria-label\": \"delete\",\n                  type: \"submit\",\n                  children: /*#__PURE__*/_jsxDEV(SendIcon, {\n                    style: {\n                      fill: \"#008080\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(ListItem, {\n            className: classes.listItem,\n            children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n              disableTypography: true,\n              primary: /*#__PURE__*/_jsxDEV(Typography, {\n                type: \"body2\",\n                style: {\n                  fontWeight: 700,\n                  width: 10\n                },\n                children: item.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 38\n              }, this),\n              className: `${classes.listItemText} personID`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              disableTypography: true,\n              primary: /*#__PURE__*/_jsxDEV(Typography, {\n                type: \"body2\",\n                style: {\n                  fontWeight: 700,\n                  width: 10\n                },\n                children: item.firstname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 38\n              }, this),\n              className: classes.listItemText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              disableTypography: true,\n              primary: /*#__PURE__*/_jsxDEV(Typography, {\n                type: \"body2\",\n                style: {\n                  fontWeight: 700,\n                  width: 10\n                },\n                children: item.lastname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 38\n              }, this),\n              className: classes.listItemText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              disableTypography: true,\n              primary: /*#__PURE__*/_jsxDEV(Typography, {\n                type: \"body2\",\n                style: {\n                  fontWeight: 700,\n                  width: 10\n                },\n                children: item.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 38\n              }, this),\n              className: classes.listItemText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              disableTypography: true,\n              primary: /*#__PURE__*/_jsxDEV(Typography, {\n                type: \"body2\",\n                style: {\n                  fontWeight: 700,\n                  width: 10\n                },\n                children: item.isActive\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 38\n              }, this),\n              className: classes.listItemText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                edge: \"end\",\n                \"aria-label\": \"delete\",\n                children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n                  style: {\n                    fill: \"#008080\"\n                  },\n                  onClick: e => {\n                    deleteRow(e);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                edge: \"end\",\n                \"aria-label\": \"edit\",\n                children: /*#__PURE__*/_jsxDEV(EditIcon, {\n                  style: {\n                    fill: \"#008080\"\n                  },\n                  onClick: toggleIsEditing,\n                  className: \"editableIcon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 25\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(PersonList, \"G8K/EdD8j0sB4Qg+OiAI68MHS/U=\", false, function () {\n  return [useStyles];\n});\n\n_c = PersonList;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 0.5,\n    maxWidth: 500\n  },\n  listItem: {\n    backgroundColor: 'none',\n    \"&:hover\": {\n      backgroundColor: 'rgba(0,0,0,0.05);',\n      cursor: 'pointer'\n    },\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  listItemText: {\n    display: 'flex',\n    justifyContent: 'center',\n    maxWidth: 500\n  },\n  button: {\n    margin: theme.spacing(1),\n    [theme.breakpoints.down(\"sm\")]: {\n      minWidth: 32,\n      paddingLeft: 8,\n      paddingRight: 8,\n      marginBottom: 40,\n      cursor: \"pointer\",\n      \"& .MuiButton-startIcon\": {\n        margin: 0\n      }\n    }\n  },\n  buttonText: {\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\"\n    },\n    display: \"flex\",\n    marginRight: 5\n  },\n  List: {\n    padding: 0\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"PersonList\");","map":{"version":3,"sources":["C:/Users/Alex/Documents/react-person/src/components/PersonList/PersonList.js"],"names":["React","useState","$","Scrollbars","makeStyles","List","ListItem","ListItemSecondaryAction","ListItemText","IconButton","Grid","Typography","CloseIcon","SendIcon","EditIcon","v4","PersonList","setPersonList","personList","classes","useStyles","editedRowIndex","setEditedRowIndex","filterOptions","setFilterOptions","filteredPerson","setFilteredPerson","handleFormFilterInput","e","value","name","target","prevState","filter","form","FormData","plainFormData","Object","fromEntries","entries","console","log","toggleIsEditing","currentTarget","attr","includes","personID","parents","find","text","editableIndex","findIndex","item","parseInt","id","EditableRow","display","alignItems","FilterInput","key","deleteRow","myInit","method","fetch","then","removeIndex","newArray","splice","convertFormDataToObject","handleFormSubmit","preventDefault","updateIndex","url","formData","responseData","putFormDataAsJson","slice","error","formDataJsonString","JSON","stringify","fetchOptions","headers","body","response","ok","errorMessage","Error","json","width","height","props","listItem","backgroundColor","fontWeight","color","listItemText","map","index","firstname","lastname","address","isActive","fill","theme","root","flexGrow","maxWidth","cursor","paddingTop","paddingBottom","justifyContent","button","margin","spacing","breakpoints","down","minWidth","paddingLeft","paddingRight","marginBottom","buttonText","marginRight","padding"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport './PersonList.css';\r\nimport $ from \"jquery\";\r\nimport Scrollbars from 'react-custom-scrollbars';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { v4 } from \"uuid\";\r\n\r\nexport default function PersonList({ setPersonList, personList }) {\r\n    const classes = useStyles();\r\n    const [editedRowIndex, setEditedRowIndex] = useState(null);\r\n    const [filterOptions, setFilterOptions]  = useState({});\r\n    const [filteredPerson, setFilteredPerson] = useState(personList);\r\n\r\n    // function multiCriterionFilterArray(array, filters, searchString) {\r\n    //     const filterKeys = Object.keys(filters);\r\n    //     return array.filter(item => {\r\n    //       // validates all filter criteria\r\n    //       return filterKeys.every(key => {\r\n    //         // ignores non-function predicates\r\n    //         if (typeof filters[key] !== 'function') return true;\r\n    //         return filters[key](item[key], searchString[key]);\r\n    //       });\r\n    //     });\r\n    // }\r\n\r\n    const handleFormFilterInput = (e) => {\r\n        const { value, name } = e.target;\r\n        setFilterOptions(prevState => {\r\n            return {...prevState, [name]: value}\r\n        });\r\n    }\r\n\r\n    const filter = () => {\r\n        let form = $('.filterForm')[0];\r\n        form = new FormData(form);\r\n        const plainFormData = Object.fromEntries(form.entries());\r\n        console.log(plainFormData);\r\n        setFilterOptions(plainFormData);\r\n        // const keyword = value;\r\n        // console.log(filterOptions);\r\n        // const isEmpty = Object.values(filterOptions).every(x => x === null || x === '');\r\n    \r\n        // if (keyword !== '') {\r\n        //   const results = personList.filter((person) => {\r\n        //     console.log(person);\r\n        //     console.log(name);\r\n        //     setFilterOptions({...filterOptions, [name]: keyword});\r\n        //     return person[name].toLowerCase().startsWith(keyword.toLowerCase());\r\n        //   });\r\n        //   setFilteredPerson(results);\r\n        // } else {\r\n        //     setFilterOptions({...filterOptions, [name]: ''});\r\n        // }\r\n        \r\n        // if (isEmpty) {\r\n        //   // Si tout les champs sont vides mettre à jour le tableau avec toutes les personnes\r\n        //   setFilteredPerson(personList);\r\n        // }\r\n    };\r\n\r\n    // permet de switcher sur le mode édition d'une ligne\r\n    const toggleIsEditing = (e) => {\r\n        if ($(e.currentTarget).attr('class').includes('editableIcon')) {\r\n            const personID = $($(e.currentTarget).parents()[3]).find('.personID').text();\r\n            const editableIndex = personList.findIndex(item => parseInt(item.id) === parseInt(personID));\r\n            setEditedRowIndex(editableIndex);\r\n        }\r\n    }   \r\n\r\n    // Element React pour la modification d'une ligne\r\n    const EditableRow = ({ value, name }) => {\r\n        return (\r\n            <React.Fragment>\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                <input\r\n                    className=\"MuiTypography-root MuiTypography-h7 MuiTypography-displayInline\"\r\n                    defaultValue={value}\r\n                    name={name}\r\n                />\r\n                <Typography style={{ display: \"none\" }} />\r\n            </div>\r\n            </React.Fragment>\r\n        )\r\n    };\r\n\r\n    // Element React pour la modification d'une ligne\r\n    const FilterInput = ({ value, name, key, handleFormFilterInput }) => {\r\n        return (\r\n            <React.Fragment>\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                <input\r\n                    className=\"MuiTypography-root MuiTypography-h7 MuiTypography-displayInline\"\r\n                    defaultValue={value}\r\n                    onChange={handleFormFilterInput}\r\n                    name={name}\r\n                    key={key}\r\n                    autFocus\r\n                />\r\n                <Typography style={{ display: \"none\" }} />\r\n            </div>\r\n            </React.Fragment>\r\n        )\r\n    };\r\n\r\n    // Supprimer une personne de la liste\r\n    const deleteRow = (e) => {\r\n        // Supprimer l'élément dans la base de données\r\n        const personID = $($(e.currentTarget).parents()[3]).find('.personID').text();\r\n        const myInit = {\r\n            method: 'DELETE',\r\n        };\r\n        fetch(`person/${personID}`, myInit)\r\n        .then(() => {\r\n        // Récuperer l'index de l'élément à supprimer\r\n        const removeIndex = personList.findIndex(item => item.id === parseInt(personID));\r\n\r\n        // Faire une copie du state\r\n        const newArray = [...personList];\r\n\r\n        // Supprimer l'élément du nouveau tableau\r\n        newArray.splice(removeIndex, 1);\r\n\r\n        // Mettre à jour le state\r\n        setPersonList(newArray);\r\n        });\r\n    };\r\n\r\n    // Convertir les données du formulaire sous la forme d'un objet js\r\n    const convertFormDataToObject = (e) => {\r\n        const form = e.currentTarget;\r\n        return new FormData(form);\r\n    }\r\n\r\n    // Gérer le formulaire de la mise à jour d'une personne\r\n    const handleFormSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Récupérer les données du formulaire\r\n        const personID = $(e.currentTarget).find('.personID').find('input').attr('value');\r\n        const updateIndex = personList.findIndex(item => parseInt(item.id) === parseInt(personID));\r\n        const url = `person/${personID}`;\r\n\r\n        try {\r\n            // Requête PUT\r\n            const formData = convertFormDataToObject(e);\r\n            let responseData = await putFormDataAsJson({ url, formData });\r\n\r\n            // Mise à jour de la liste des utilisateurs\r\n            setPersonList(prevState => {\r\n                return  [...prevState.slice(0, updateIndex), responseData, ...prevState.slice(updateIndex + 1)];\r\n            });\r\n\r\n            setEditedRowIndex(-1);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    // REQUETE PUT via l'api person\r\n    const putFormDataAsJson = async ({ url, formData }) => {\r\n        const plainFormData = Object.fromEntries(formData.entries());\r\n        const formDataJsonString = JSON.stringify(plainFormData);\r\n\r\n        const fetchOptions = {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\",\r\n            },\r\n            body: formDataJsonString,\r\n        };\r\n    \r\n        const response = await fetch(url, fetchOptions);\r\n\r\n        if (!response.ok) {\r\n            const errorMessage = await response.text();\r\n            throw new Error(errorMessage);\r\n        }\r\n    \r\n        return response.json();\r\n    }\r\n  \r\n    return (\r\n        <>\r\n        <Scrollbars style={{ width: '70%', height: '100%' }} renderTrackHorizontal={props => <div {...props} style={{display: 'none'}} className=\"track-horizontal\"/>}>\r\n          <Grid item xs={16} md={12}>\r\n              <List className={classes.List}>\r\n                    <ListItem className={classes.listItem} style={{ backgroundColor: '#9AC2C980'}}>\r\n                        <ListItemText\r\n                            disableTypography\r\n                            primary={<Typography type=\"body2\" style={{ fontWeight: 700, width: 10, color: '#004040' }}>ID</Typography>}\r\n                            className={classes.listItemText}\r\n                        />\r\n                        <ListItemText\r\n                            disableTypography\r\n                            primary={<Typography type=\"body2\" style={{ fontWeight: 700, width: 10, color: '#004040' }}>Prénom</Typography>}\r\n                            className={classes.listItemText}\r\n                        />\r\n                        <ListItemText\r\n                            disableTypography\r\n                            primary={<Typography type=\"body2\" style={{ fontWeight: 700, width: 10, color: '#004040' }}>Nom</Typography>}\r\n                            className={classes.listItemText}\r\n                        />\r\n                        <ListItemText\r\n                            disableTypography\r\n                            primary={<Typography type=\"body2\" style={{ fontWeight: 700, width: 10, color: '#004040' }}>Adresse</Typography>}\r\n                            className={classes.listItemText}\r\n                        />\r\n                        <ListItemText\r\n                            disableTypography\r\n                            primary={<Typography type=\"body2\" style={{ fontWeight: 700, width: 10, color: '#004040' }}>Actif</Typography>}\r\n                            className={classes.listItemText}\r\n                        />\r\n                    </ListItem>\r\n                    <form className=\"filterForm\">\r\n                        <ListItem>\r\n                            <ListItemText\r\n                                disableTypography\r\n                                primary={<FilterInput value={filterOptions[\"id\"]} name=\"id\" key=\"id\" handleFormFilterInput={handleFormFilterInput} />}\r\n                                className={`${classes.listItemText} personID`}\r\n                            />\r\n                            <ListItemText\r\n                                disableTypography\r\n                                primary={<FilterInput value={filterOptions[\"firstname\"]} name=\"firstname\" key=\"firstname\" handleFormFilterInput={handleFormFilterInput}/>}\r\n                                className={classes.listItemText}\r\n                            />\r\n                            <ListItemText\r\n                                disableTypography\r\n                                primary={<FilterInput value={filterOptions[\"lastname\"]} name=\"lastname\" key=\"lastname\" handleFormFilterInput={handleFormFilterInput}/>}\r\n                                className={classes.listItemText}\r\n                            />\r\n                            <ListItemText\r\n                                disableTypography\r\n                                primary={<FilterInput value={filterOptions[\"address\"]} name=\"address\" key=\"isActive\" handleFormFilterInput={handleFormFilterInput}/>}\r\n                                className={classes.listItemText}\r\n                            />\r\n                            <ListItemText\r\n                                disableTypography\r\n                                primary={<FilterInput value={filterOptions[\"isActive\"]} name=\"isActive\" handleFormFilterInput={handleFormFilterInput}/>}\r\n                                className={classes.listItemText}\r\n                            />\r\n                        </ListItem>\r\n                    </form>\r\n                {personList.map((item, index) => (\r\n                    index === editedRowIndex ? ( \r\n                        <form className=\"editForm\" onSubmit={handleFormSubmit}>\r\n                            <ListItem className={classes.listItem}>\r\n                                <ListItemText\r\n                                    disableTypography\r\n                                    primary={<EditableRow value={item.id} name={\"id\"} />}\r\n                                    className={`${classes.listItemText} personID`}\r\n                                />\r\n                                <ListItemText\r\n                                    disableTypography\r\n                                    primary={<EditableRow value={item.firstname} name={\"firstname\"} />}\r\n                                    className={classes.listItemText}\r\n                                />\r\n                                <ListItemText\r\n                                    disableTypography\r\n                                    primary={<EditableRow value={item.lastname} name={\"lastname\"} />}\r\n                                    className={classes.listItemText}\r\n                                />\r\n                                <ListItemText\r\n                                    disableTypography\r\n                                    primary={<EditableRow value={item.address} name={\"address\"} />}\r\n                                    className={classes.listItemText}\r\n                                />\r\n                                <ListItemText\r\n                                    disableTypography\r\n                                    primary={<EditableRow value={item.isActive} name={\"isActive\"} />}\r\n                                    className={classes.listItemText}\r\n                                />\r\n                                <ListItemSecondaryAction>\r\n                                    <IconButton edge=\"end\" aria-label=\"delete\" type=\"submit\">\r\n                                        <SendIcon \r\n                                            style={{fill: \"#008080\"}} \r\n                                        />\r\n                                    </IconButton>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                       </form>\r\n                        ) : (\r\n                        <ListItem className={classes.listItem}>\r\n                            <ListItemText\r\n                            disableTypography\r\n                            primary={<Typography type=\"body2\" style={{ fontWeight: 700, width: 10 }}>{item.id}</Typography>}\r\n                            className={`${classes.listItemText} personID`}\r\n                            />\r\n                            <ListItemText\r\n                            disableTypography\r\n                            primary={<Typography type=\"body2\" style={{ fontWeight: 700, width: 10 }}>{item.firstname}</Typography>}\r\n                            className={classes.listItemText}\r\n                            />\r\n                            <ListItemText\r\n                            disableTypography\r\n                            primary={<Typography type=\"body2\" style={{ fontWeight: 700, width: 10 }}>{item.lastname}</Typography>}\r\n                            className={classes.listItemText}\r\n                            />\r\n                            <ListItemText\r\n                            disableTypography\r\n                            primary={<Typography type=\"body2\" style={{ fontWeight: 700, width: 10 }}>{item.address}</Typography>}\r\n                            className={classes.listItemText}\r\n                            />\r\n                            <ListItemText\r\n                            disableTypography\r\n                            primary={<Typography type=\"body2\" style={{ fontWeight: 700, width: 10 }}>{item.isActive}</Typography>}\r\n                            className={classes.listItemText}\r\n                            />\r\n                        <ListItemSecondaryAction>\r\n                        <IconButton edge=\"end\" aria-label=\"delete\">\r\n                            <CloseIcon \r\n                                style={{fill: \"#008080\"}} \r\n                                onClick={(e) => {\r\n                                    deleteRow(e);\r\n                                }} \r\n                            />\r\n                        </IconButton>\r\n                        <IconButton edge=\"end\" aria-label=\"edit\">\r\n                            <EditIcon \r\n                                style={{fill: \"#008080\"}} \r\n                                onClick={toggleIsEditing}\r\n                                className=\"editableIcon\" \r\n                            />\r\n                        </IconButton>\r\n                        </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                    )\r\n                ))}\r\n              </List>\r\n          </Grid>\r\n        </Scrollbars>\r\n        </>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 0.5,\r\n      maxWidth: 500,\r\n    },\r\n    listItem: {\r\n      backgroundColor: 'none',\r\n      \"&:hover\": {\r\n          backgroundColor: 'rgba(0,0,0,0.05);',\r\n          cursor: 'pointer'\r\n      },\r\n      paddingTop: 0,\r\n      paddingBottom: 0,\r\n    },\r\n    listItemText: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        maxWidth: 500\r\n    },\r\n    button: {\r\n      margin: theme.spacing(1),\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n        minWidth: 32,\r\n        paddingLeft: 8,\r\n        paddingRight: 8,\r\n        marginBottom: 40,\r\n        cursor: \"pointer\",\r\n        \"& .MuiButton-startIcon\": {\r\n          margin: 0\r\n        }\r\n      }\r\n    },\r\n    buttonText: {\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n        display: \"none\"\r\n      },\r\n      display: \"flex\",\r\n      marginRight: 5\r\n    },\r\n    List: {\r\n        padding: 0\r\n    }\r\n}));"]},"metadata":{},"sourceType":"module"}