{"ast":null,"code":"// Algorithme de filtrage de la liste\nexport const listFilter = (filterOptions, list, setFilteredList) => {\n  let counter = {};\n  list.map(item => counter[item.id] = 0);\n  list.map(item => {\n    Object.entries(item).map(val => {\n      if (String(val[1]).toLowerCase().startsWith(String(filterOptions[val[0]]).toLowerCase()) && String(filterOptions[val[0]]) != '') {\n        counter[item[\"id\"]] += 1;\n      }\n    });\n  });\n  const numberOfFieldsFilled = Object.values(filterOptions).filter(Boolean).length;\n  counter = Object.entries(counter).filter(val => val[1] === numberOfFieldsFilled);\n  counter = Object.fromEntries(counter);\n  const idFiltered = Object.keys(counter);\n\n  if (idFiltered.length != 0) {\n    setFilteredListPerson(list.filter(item => idFiltered.includes(String(item.id))));\n  }\n};","map":{"version":3,"sources":["C:/Users/Alex/Documents/react-person/src/utils/ListFilter.js"],"names":["listFilter","filterOptions","list","setFilteredList","counter","map","item","id","Object","entries","val","String","toLowerCase","startsWith","numberOfFieldsFilled","values","filter","Boolean","length","fromEntries","idFiltered","keys","setFilteredListPerson","includes"],"mappings":"AAAA;AACA,OAAO,MAAMA,UAAU,GAAG,CAACC,aAAD,EAAgBC,IAAhB,EAAsBC,eAAtB,KAA0C;AAChE,MAAIC,OAAO,GAAG,EAAd;AACAF,EAAAA,IAAI,CAACG,GAAL,CAASC,IAAI,IAAIF,OAAO,CAACE,IAAI,CAACC,EAAN,CAAP,GAAmB,CAApC;AACAL,EAAAA,IAAI,CAACG,GAAL,CAASC,IAAI,IAAI;AACbE,IAAAA,MAAM,CAACC,OAAP,CAAeH,IAAf,EAAqBD,GAArB,CAAyBK,GAAG,IAAI;AAC5B,UAAIC,MAAM,CAACD,GAAG,CAAC,CAAD,CAAJ,CAAN,CAAeE,WAAf,GAA6BC,UAA7B,CAAwCF,MAAM,CAACV,aAAa,CAACS,GAAG,CAAC,CAAD,CAAJ,CAAd,CAAN,CAA8BE,WAA9B,EAAxC,KAAwFD,MAAM,CAACV,aAAa,CAACS,GAAG,CAAC,CAAD,CAAJ,CAAd,CAAN,IAAiC,EAA7H,EAAiI;AAC7HN,QAAAA,OAAO,CAACE,IAAI,CAAC,IAAD,CAAL,CAAP,IAAuB,CAAvB;AACH;AACJ,KAJD;AAKH,GAND;AAOA,QAAMQ,oBAAoB,GAAGN,MAAM,CAACO,MAAP,CAAcd,aAAd,EAA6Be,MAA7B,CAAoCC,OAApC,EAA6CC,MAA1E;AACAd,EAAAA,OAAO,GAAGI,MAAM,CAACC,OAAP,CAAeL,OAAf,EAAwBY,MAAxB,CAA+BN,GAAG,IAAIA,GAAG,CAAC,CAAD,CAAH,KAAWI,oBAAjD,CAAV;AACAV,EAAAA,OAAO,GAAGI,MAAM,CAACW,WAAP,CAAmBf,OAAnB,CAAV;AACA,QAAMgB,UAAU,GAAGZ,MAAM,CAACa,IAAP,CAAYjB,OAAZ,CAAnB;;AACA,MAAIgB,UAAU,CAACF,MAAX,IAAqB,CAAzB,EAA4B;AACxBI,IAAAA,qBAAqB,CAACpB,IAAI,CAACc,MAAL,CAAYV,IAAI,IAAIc,UAAU,CAACG,QAAX,CAAoBZ,MAAM,CAACL,IAAI,CAACC,EAAN,CAA1B,CAApB,CAAD,CAArB;AACH;AACJ,CAjBM","sourcesContent":["// Algorithme de filtrage de la liste\r\nexport const listFilter = (filterOptions, list, setFilteredList) => {\r\n    let counter = {}\r\n    list.map(item => counter[item.id] = 0);\r\n    list.map(item => {\r\n        Object.entries(item).map(val => {\r\n            if (String(val[1]).toLowerCase().startsWith(String(filterOptions[val[0]]).toLowerCase()) && String(filterOptions[val[0]]) != '') {\r\n                counter[item[\"id\"]] += 1;\r\n            }\r\n        });  \r\n    });\r\n    const numberOfFieldsFilled = Object.values(filterOptions).filter(Boolean).length;\r\n    counter = Object.entries(counter).filter(val => val[1] === numberOfFieldsFilled);\r\n    counter = Object.fromEntries(counter);\r\n    const idFiltered = Object.keys(counter);\r\n    if (idFiltered.length != 0) {\r\n        setFilteredListPerson(list.filter(item => idFiltered.includes(String(item.id))));\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}