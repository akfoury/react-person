{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Documents\\\\react-person\\\\src\\\\components\\\\FilterInputList\\\\FilterInputList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport FilterInput from '../FilterInput/FilterInput';\nimport { getListOfFilteredID } from '../../utils/ListFilter';\nimport { deleteAllPerson } from '../../api/PersonAPI';\nimport { setPersonList, setFilteredPersonList } from \"../../actions\";\nimport { ClearAll } from '@mui/icons-material';\nimport { ListItem, ListItemSecondaryAction, ListItemText, IconButton } from '@mui/material'; // Initialisation des valeurs de filtres\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialFilteredPersonList = {\n  id: '',\n  firstname: '',\n  lastname: '',\n  address: '',\n  isActive: ''\n};\n\nfunction FilterInputList({\n  personList,\n  setPersonList\n}) {\n  _s();\n\n  const [filterOptions, setFilterOptions] = useState(initialFilteredPersonList); // Gestion du state stockant les valeurs de filtrage\n\n  const handleFormFilterInput = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    setFilterOptions(prevState => {\n      return { ...prevState,\n        [name]: value\n      };\n    });\n  }; // Suppression de toutes les lignes\n\n\n  const handleDeleteAll = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    deleteAllPerson().then(() => {\n      setPersonList([]);\n    });\n  }; // Appel de l'algorithme Ã  chaque fois qu'une valeur de filtrage change\n\n\n  useEffect(() => {\n    const filteredID = getListOfFilteredID(filterOptions, personList);\n\n    if (filteredID.length != 0) {\n      setPersonList(personList.map(obj => filteredID.includes(String(obj.id)) ? { ...obj,\n        hide: true\n      } : { ...obj,\n        hide: false\n      }));\n    }\n  }, [filterOptions]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"filterForm\",\n    children: /*#__PURE__*/_jsxDEV(ListItem, {\n      className: \"list-item filters\",\n      children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n        disableTypography: true,\n        primary: /*#__PURE__*/_jsxDEV(FilterInput, {\n          filterOptions: filterOptions,\n          optionName: \"id\",\n          handleFormFilterInput: handleFormFilterInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 30\n        }, this),\n        className: \"list-item-text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n        disableTypography: true,\n        primary: /*#__PURE__*/_jsxDEV(FilterInput, {\n          filterOptions: filterOptions,\n          optionName: \"firstname\",\n          handleFormFilterInput: handleFormFilterInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 30\n        }, this),\n        className: \"list-item-text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n        disableTypography: true,\n        primary: /*#__PURE__*/_jsxDEV(FilterInput, {\n          filterOptions: filterOptions,\n          optionName: \"lastname\",\n          handleFormFilterInput: handleFormFilterInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 30\n        }, this),\n        className: \"list-item-text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n        disableTypography: true,\n        primary: /*#__PURE__*/_jsxDEV(FilterInput, {\n          filterOptions: filterOptions,\n          optionName: \"address\",\n          handleFormFilterInput: handleFormFilterInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 30\n        }, this),\n        className: \"list-item-text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n        disableTypography: true,\n        primary: /*#__PURE__*/_jsxDEV(FilterInput, {\n          filterOptions: filterOptions,\n          optionName: \"isActive\",\n          handleFormFilterInput: handleFormFilterInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 30\n        }, this),\n        className: \"list-item-text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"end\",\n          \"aria-label\": \"deleteall\",\n          onClick: handleDeleteAll,\n          children: /*#__PURE__*/_jsxDEV(ClearAll, {\n            style: {\n              fill: \"#008080\"\n            },\n            fontSize: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FilterInputList, \"oU0yO/QF1lEvHmHTro65O0Ei6wc=\");\n\n_c = FilterInputList;\n\nconst mapStateToProps = state => {\n  return {\n    personList: state.personList.personList,\n    filteredPersonList: state.personList.filteredPersonList\n  };\n};\n\nconst mapDispatchToProps = {\n  setPersonList,\n  setFilteredPersonList\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterInputList);\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterInputList\");","map":{"version":3,"sources":["C:/Users/Alex/Documents/react-person/src/components/FilterInputList/FilterInputList.js"],"names":["React","useState","useEffect","connect","FilterInput","getListOfFilteredID","deleteAllPerson","setPersonList","setFilteredPersonList","ClearAll","ListItem","ListItemSecondaryAction","ListItemText","IconButton","initialFilteredPersonList","id","firstname","lastname","address","isActive","FilterInputList","personList","filterOptions","setFilterOptions","handleFormFilterInput","e","value","name","target","prevState","handleDeleteAll","preventDefault","stopPropagation","then","filteredID","length","map","obj","includes","String","hide","fill","mapStateToProps","state","filteredPersonList","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport FilterInput from '../FilterInput/FilterInput';\r\nimport { getListOfFilteredID } from '../../utils/ListFilter';\r\nimport { \r\n    deleteAllPerson \r\n} from '../../api/PersonAPI';\r\nimport { setPersonList, setFilteredPersonList } from \"../../actions\";\r\nimport { ClearAll } from '@mui/icons-material';\r\nimport {\r\n    ListItem,\r\n    ListItemSecondaryAction,\r\n    ListItemText,\r\n    IconButton,\r\n} from '@mui/material';\r\n\r\n// Initialisation des valeurs de filtres\r\nconst initialFilteredPersonList = {\r\n    id: '',\r\n    firstname: '',\r\n    lastname: '',\r\n    address: '',\r\n    isActive: ''\r\n}\r\n\r\nfunction FilterInputList({ personList, setPersonList }) {\r\n    const [filterOptions, setFilterOptions]  = useState(initialFilteredPersonList);\r\n\r\n    // Gestion du state stockant les valeurs de filtrage\r\n    const handleFormFilterInput = (e) => {\r\n        const { value, name } = e.target;\r\n        setFilterOptions(prevState => {\r\n            return {...prevState, [name]: value}\r\n        });\r\n    }\r\n\r\n    // Suppression de toutes les lignes\r\n    const handleDeleteAll = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        deleteAllPerson().then(() => {\r\n            setPersonList([]);\r\n        });\r\n    }\r\n\r\n    // Appel de l'algorithme Ã  chaque fois qu'une valeur de filtrage change\r\n    useEffect(() => {\r\n        const filteredID = getListOfFilteredID(filterOptions, personList);\r\n        if (filteredID.length != 0) {\r\n            setPersonList(personList.map(obj => filteredID.includes(String(obj.id)) ? ({...obj, hide: true}) : ({...obj, hide: false})));\r\n        }\r\n    }, [filterOptions]);\r\n\r\n    return (\r\n        <form className=\"filterForm\">\r\n            <ListItem className='list-item filters'>\r\n                <ListItemText\r\n                    disableTypography\r\n                    primary={<FilterInput filterOptions={filterOptions} optionName=\"id\" handleFormFilterInput={handleFormFilterInput} />}\r\n                    className='list-item-text'\r\n                />\r\n                <ListItemText\r\n                    disableTypography\r\n                    primary={<FilterInput filterOptions={filterOptions} optionName=\"firstname\" handleFormFilterInput={handleFormFilterInput} />}\r\n                    className='list-item-text'\r\n                />\r\n                <ListItemText\r\n                    disableTypography\r\n                    primary={<FilterInput filterOptions={filterOptions} optionName=\"lastname\" handleFormFilterInput={handleFormFilterInput} />}\r\n                    className='list-item-text'\r\n                />\r\n                <ListItemText\r\n                    disableTypography\r\n                    primary={<FilterInput filterOptions={filterOptions} optionName=\"address\" handleFormFilterInput={handleFormFilterInput} />}\r\n                    className='list-item-text'\r\n                />\r\n                <ListItemText\r\n                    disableTypography\r\n                    primary={<FilterInput filterOptions={filterOptions} optionName=\"isActive\" handleFormFilterInput={handleFormFilterInput} />}\r\n                    className='list-item-text'\r\n                />\r\n                <ListItemSecondaryAction>\r\n                    <IconButton edge=\"end\" aria-label=\"deleteall\" onClick={handleDeleteAll}>\r\n                        <ClearAll\r\n                            style={{fill: \"#008080\"}} \r\n                            fontSize=\"large\"\r\n                        />\r\n                    </IconButton>\r\n                </ListItemSecondaryAction>\r\n            </ListItem>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        personList: state.personList.personList,\r\n        filteredPersonList: state.personList.filteredPersonList\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    setPersonList,\r\n    setFilteredPersonList\r\n  }\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterInputList);\r\n\r\n"]},"metadata":{},"sourceType":"module"}