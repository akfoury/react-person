[{"C:\\Users\\Alex\\Documents\\react-person\\src\\index.js":"1","C:\\Users\\Alex\\Documents\\react-person\\src\\reportWebVitals.js":"2","C:\\Users\\Alex\\Documents\\react-person\\src\\App.js":"3","C:\\Users\\Alex\\Documents\\react-person\\src\\components\\PersonForm\\PersonForm.js":"4","C:\\Users\\Alex\\Documents\\react-person\\src\\components\\PersonList\\PersonList.js":"5","C:\\Users\\Alex\\Documents\\react-person\\src\\api\\PersonAPI.js":"6","C:\\Users\\Alex\\Documents\\react-person\\src\\utils\\ListFilter.js":"7","C:\\Users\\Alex\\Documents\\react-person\\src\\utils\\FormData.js":"8","C:\\Users\\Alex\\Documents\\react-person\\src\\components\\FilterInput\\FilterInput.js":"9","C:\\Users\\Alex\\Documents\\react-person\\src\\store.js":"10","C:\\Users\\Alex\\Documents\\react-person\\src\\reducers\\index.js":"11","C:\\Users\\Alex\\Documents\\react-person\\src\\reducers\\PersonListReducer.js":"12","C:\\Users\\Alex\\Documents\\react-person\\src\\actions\\index.js":"13","C:\\Users\\Alex\\Documents\\react-person\\src\\actions\\actions-types.js":"14","C:\\Users\\Alex\\Documents\\react-person\\src\\components\\FilterInputList\\FilterInputList.js":"15"},{"size":616,"mtime":1633002233213,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":1340,"mtime":1633080098226,"results":"19","hashOfConfig":"17"},{"size":3347,"mtime":1633081183159,"results":"20","hashOfConfig":"17"},{"size":10958,"mtime":1633082029727,"results":"21","hashOfConfig":"17"},{"size":2407,"mtime":1633073677127,"results":"22","hashOfConfig":"17"},{"size":754,"mtime":1632563007139,"results":"23","hashOfConfig":"17"},{"size":281,"mtime":1632561582034,"results":"24","hashOfConfig":"17"},{"size":555,"mtime":1632995371730,"results":"25","hashOfConfig":"17"},{"size":331,"mtime":1633002443737,"results":"26","hashOfConfig":"17"},{"size":206,"mtime":1633002767297,"results":"27","hashOfConfig":"17"},{"size":1209,"mtime":1633075802944,"results":"28","hashOfConfig":"17"},{"size":610,"mtime":1633075598302,"results":"29","hashOfConfig":"17"},{"size":210,"mtime":1633075556402,"results":"30","hashOfConfig":"17"},{"size":3928,"mtime":1633078384318,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"uimjg5",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},"C:\\Users\\Alex\\Documents\\react-person\\src\\index.js",[],["65","66"],"C:\\Users\\Alex\\Documents\\react-person\\src\\reportWebVitals.js",[],"C:\\Users\\Alex\\Documents\\react-person\\src\\App.js",["67"],"C:\\Users\\Alex\\Documents\\react-person\\src\\components\\PersonForm\\PersonForm.js",["68"],"C:\\Users\\Alex\\Documents\\react-person\\src\\components\\PersonList\\PersonList.js",["69","70","71"],"C:\\Users\\Alex\\Documents\\react-person\\src\\api\\PersonAPI.js",[],"C:\\Users\\Alex\\Documents\\react-person\\src\\utils\\ListFilter.js",["72","73","74"],"// Algorithme de filtrage de la liste\r\nexport const getListOfFilteredID = (filterOptions, list) => {\r\n    let counter = {}\r\n    list.map(item => counter[item.id] = 0);\r\n    list.map(item => {\r\n        Object.entries(item).map(val => {\r\n            if (String(val[1]).toLowerCase().startsWith(String(filterOptions[val[0]]).toLowerCase()) && String(filterOptions[val[0]]) != '') {\r\n                counter[item[\"id\"]] += 1;\r\n            }\r\n        });  \r\n    });\r\n    const numberOfFieldsFilled = Object.values(filterOptions).filter(Boolean).length;\r\n    counter = Object.entries(counter).filter(val => val[1] === numberOfFieldsFilled);\r\n    counter = Object.fromEntries(counter);\r\n    const idFiltered = Object.keys(counter);\r\n\r\n    return idFiltered;\r\n};","C:\\Users\\Alex\\Documents\\react-person\\src\\utils\\FormData.js",[],"C:\\Users\\Alex\\Documents\\react-person\\src\\components\\FilterInput\\FilterInput.js",[],"C:\\Users\\Alex\\Documents\\react-person\\src\\store.js",[],"C:\\Users\\Alex\\Documents\\react-person\\src\\reducers\\index.js",[],"C:\\Users\\Alex\\Documents\\react-person\\src\\reducers\\PersonListReducer.js",[],"C:\\Users\\Alex\\Documents\\react-person\\src\\actions\\index.js",[],"C:\\Users\\Alex\\Documents\\react-person\\src\\actions\\actions-types.js",[],"C:\\Users\\Alex\\Documents\\react-person\\src\\components\\FilterInputList\\FilterInputList.js",["75","76"],"import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport FilterInput from '../FilterInput/FilterInput';\r\nimport { getListOfFilteredID } from '../../utils/ListFilter';\r\nimport { \r\n    deleteAllPerson \r\n} from '../../api/PersonAPI';\r\nimport { setPersonList } from \"../../actions\";\r\nimport { ClearAll } from '@mui/icons-material';\r\nimport {\r\n    ListItem,\r\n    ListItemSecondaryAction,\r\n    ListItemText,\r\n    IconButton,\r\n} from '@mui/material';\r\n\r\n// Initialisation des valeurs de filtres\r\nconst initialFilteredPersonList = {\r\n    id: '',\r\n    firstname: '',\r\n    lastname: '',\r\n    address: '',\r\n    isActive: ''\r\n}\r\n\r\nfunction FilterInputList({ personList, setPersonList }) {\r\n    const [filterOptions, setFilterOptions]  = useState(initialFilteredPersonList);\r\n\r\n    // Gestion du state stockant les valeurs de filtrage\r\n    const handleFormFilterInput = (e) => {\r\n        const { value, name } = e.target;\r\n        setFilterOptions(prevState => {\r\n            return {...prevState, [name]: value}\r\n        });\r\n    }\r\n\r\n    // Suppression de toutes les lignes\r\n    const handleDeleteAll = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        deleteAllPerson().then(() => {\r\n            setPersonList([]);\r\n        });\r\n    }\r\n\r\n    // Appel de l'algorithme Ã  chaque fois qu'une valeur de filtrage change\r\n    useEffect(() => {\r\n        const filteredID = getListOfFilteredID(filterOptions, personList);\r\n        if (filteredID.length != 0) {\r\n            setPersonList(personList.map(obj => filteredID.includes(String(obj.id)) ? ({...obj, visibility: true}) : ({...obj, visibility: false})));\r\n        }\r\n    }, [filterOptions]);\r\n\r\n    return (\r\n        <form className=\"filterForm\">\r\n            <ListItem className='list-item filters'>\r\n                <ListItemText\r\n                    disableTypography\r\n                    primary={<FilterInput filterOptions={filterOptions} optionName=\"id\" handleFormFilterInput={handleFormFilterInput} />}\r\n                    className='list-item-text'\r\n                />\r\n                <ListItemText\r\n                    disableTypography\r\n                    primary={<FilterInput filterOptions={filterOptions} optionName=\"firstname\" handleFormFilterInput={handleFormFilterInput} />}\r\n                    className='list-item-text'\r\n                />\r\n                <ListItemText\r\n                    disableTypography\r\n                    primary={<FilterInput filterOptions={filterOptions} optionName=\"lastname\" handleFormFilterInput={handleFormFilterInput} />}\r\n                    className='list-item-text'\r\n                />\r\n                <ListItemText\r\n                    disableTypography\r\n                    primary={<FilterInput filterOptions={filterOptions} optionName=\"address\" handleFormFilterInput={handleFormFilterInput} />}\r\n                    className='list-item-text'\r\n                />\r\n                <ListItemText\r\n                    disableTypography\r\n                    primary={<FilterInput filterOptions={filterOptions} optionName=\"isActive\" handleFormFilterInput={handleFormFilterInput} />}\r\n                    className='list-item-text'\r\n                />\r\n                <ListItemSecondaryAction>\r\n                    <IconButton edge=\"end\" aria-label=\"deleteall\" onClick={handleDeleteAll}>\r\n                        <ClearAll\r\n                            style={{fill: \"#008080\"}} \r\n                            fontSize=\"large\"\r\n                        />\r\n                    </IconButton>\r\n                </ListItemSecondaryAction>\r\n            </ListItem>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        personList: state.personList.personList,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    setPersonList,\r\n  }\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterInputList);\r\n\r\n",{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":29,"column":6,"nodeType":"83","endLine":29,"endColumn":8,"suggestions":"84"},{"ruleId":"85","severity":1,"message":"86","line":64,"column":21,"nodeType":"87","messageId":"88","endLine":64,"endColumn":58},{"ruleId":"89","severity":1,"message":"90","line":50,"column":15,"nodeType":"91","messageId":"92","endLine":50,"endColumn":27},{"ruleId":"89","severity":1,"message":"93","line":87,"column":31,"nodeType":"91","messageId":"92","endLine":87,"endColumn":32},{"ruleId":"94","severity":1,"message":"95","line":156,"column":32,"nodeType":"96","messageId":"97","endLine":156,"endColumn":34},{"ruleId":"98","severity":1,"message":"99","line":5,"column":19,"nodeType":"100","messageId":"101","endLine":5,"endColumn":21},{"ruleId":"98","severity":1,"message":"99","line":6,"column":38,"nodeType":"100","messageId":"101","endLine":6,"endColumn":40},{"ruleId":"94","severity":1,"message":"95","line":7,"column":135,"nodeType":"96","messageId":"97","endLine":7,"endColumn":137},{"ruleId":"94","severity":1,"message":"95","line":51,"column":31,"nodeType":"96","messageId":"97","endLine":51,"endColumn":33},{"ruleId":"81","severity":1,"message":"102","line":54,"column":8,"nodeType":"83","endLine":54,"endColumn":23,"suggestions":"103"},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setPersonList'. Either include it or remove the dependency array. If 'setPersonList' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["106"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","no-unused-vars","'responseData' is assigned a value but never used.","Identifier","unusedVar","'_' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'personList' and 'setPersonList'. Either include them or remove the dependency array. If 'setPersonList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["107"],"no-global-assign","no-unsafe-negation",{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},"Update the dependencies array to be: [setPersonList]",{"range":"112","text":"113"},"Update the dependencies array to be: [filterOptions, personList, setPersonList]",{"range":"114","text":"115"},[881,883],"[setPersonList]",[1705,1720],"[filterOptions, personList, setPersonList]"]