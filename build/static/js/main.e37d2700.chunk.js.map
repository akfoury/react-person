{"version":3,"sources":["api/PersonAPI.js","utils/FormData.js","components/PersonForm/PersonForm.js","components/PersonList/PersonList.js","utils/ListFilter.js","App.js","reportWebVitals.js","index.js"],"names":["getAllPerson","a","myInit","method","headers","fetch","then","response","ok","json","postFormDataAsJson","formData","url","plainFormData","Object","fromEntries","entries","formDataJsonString","JSON","stringify","fetchOptions","body","text","errorMessage","Error","putFormDataAsJson","console","log","deletePerson","e","personID","convertFormDataToObject","form","currentTarget","action","FormData","PersonForm","setPersonList","setFormData","initialState","stateUpdate","target","prevState","name","value","handleFormSubmit","preventDefault","responseData","error","className","onSubmit","style","backgroundColor","paddingLeft","color","fontWeight","type","placeholder","firstname","onChange","required","lastname","address","isActive","Button","variant","borderRadius","endIcon","initialFilteredPerson","id","PersonList","personList","classes","useStyles","useState","editedRowIndex","setEditedRowIndex","filterOptions","setFilterOptions","filteredListPerson","setFilteredListPerson","handleFormFilterInput","toggleIsEditing","$","attr","includes","parents","find","editableIndex","findIndex","item","parseInt","EditableRow","lastRow","Fragment","display","justifyContent","width","defaultValue","border","margin","updateIndex","_","slice","useEffect","filteredID","list","counter","map","val","String","toLowerCase","startsWith","numberOfFieldsFilled","values","filter","Boolean","length","keys","getListOfFilteredID","index","height","renderTrackHorizontal","props","Grid","xs","md","List","ListItem","listItem","ListItemText","disableTypography","primary","Typography","listItemText","paddingRight","ListItemSecondaryAction","IconButton","edge","fill","onClick","removeIndex","newArray","splice","makeStyles","theme","cursor","padding","button","spacing","breakpoints","down","minWidth","marginBottom","buttonText","Input","App","data","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e37d2700.chunk.js","sourcesContent":["import $ from \"jquery\";\r\n\r\n// Récupérer toutes les personnes de la base de données\r\nconst getAllPerson = async () => {\r\n    const myInit = {\r\n        method: 'GET',\r\n        headers: {\r\n        'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    return await fetch('/person', myInit)\r\n        .then(response => {\r\n            if(response.ok) {\r\n                return response.json();\r\n            }\r\n            throw response;\r\n        });\r\n}\r\n\r\n// Récupérer une ou toutes les personnes de la base de données\r\nconst postFormDataAsJson = async ({ formData, url }) => {\r\n    const plainFormData = Object.fromEntries(formData.entries());\r\n    const formDataJsonString = JSON.stringify(plainFormData);\r\n\r\n    const fetchOptions = {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Accept\": \"application/json\",\r\n        },\r\n        body: formDataJsonString,\r\n    };\r\n\r\n    const response = await fetch(url, fetchOptions);\r\n\r\n    if (!response.ok) {\r\n        const errorMessage = await response.text();\r\n        throw new Error(errorMessage);\r\n    }\r\n\r\n    return response.json();\r\n}\r\n\r\n// Mettre à jour une personne\r\nconst putFormDataAsJson = async ({ formData, url }) => {\r\n    console.log(formData);\r\n    const plainFormData = Object.fromEntries(formData.entries());\r\n    const formDataJsonString = JSON.stringify(plainFormData);\r\n\r\n    const fetchOptions = {\r\n        method: \"PUT\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Accept\": \"application/json\",\r\n        },\r\n        body: formDataJsonString,\r\n    };\r\n\r\n    const response = await fetch(url, fetchOptions);\r\n\r\n    if (!response.ok) {\r\n        const errorMessage = await response.text();\r\n        throw new Error(errorMessage);\r\n    }\r\n\r\n    return response.json();\r\n}\r\n\r\n\r\n// Supprimer une personne de la liste\r\nconst deletePerson = async (e, personID) => {\r\n    const myInit = {\r\n        method: 'DELETE',\r\n    };\r\n    return await fetch(`person/${personID}`, myInit);\r\n};\r\n\r\nexport { getAllPerson, postFormDataAsJson, putFormDataAsJson, deletePerson }","// Convertir les données du formulaire sous la forme d'un objet js\r\nexport const convertFormDataToObject = (e) => {\r\n    const form = e.currentTarget;\r\n    const url = form.action;\r\n    const formData = new FormData(form);\r\n\r\n    return {\r\n        formData,\r\n        url\r\n    }\r\n}","import React from 'react';\r\nimport './PersonForm.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport { postFormDataAsJson } from '../../api/PersonAPI';\r\nimport { convertFormDataToObject } from '../../utils/FormData';\r\n\r\nexport default function PersonForm( { setPersonList, setFormData, formData, initialState }) {\r\n    // Mise à jour du formulaire\r\n    const stateUpdate = target => {\r\n        setFormData(prevState => {\r\n            return {...prevState, [target.name]: target.value};\r\n        });\r\n    }\r\n    \r\n    // Gérer le formulaire de l'ajout d'une personne\r\n    const handleFormSubmit = async (e) => {\r\n        e.preventDefault();\r\n    \r\n        try {\r\n            const { formData, url } = convertFormDataToObject(e);\r\n            const responseData = await postFormDataAsJson({ formData, url });\r\n            setPersonList(prevState => {\r\n                return [responseData, ...prevState];\r\n            });\r\n            setFormData(initialState);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form className=\"personForm\" action=\"/person\" onSubmit={handleFormSubmit} style={{ backgroundColor: '#9AC2C9'}}>\r\n            <h1 style={{paddingLeft: '24px', color: '#008080', fontWeight: '700'}}>Ajouter une Personne</h1>\r\n            <div className=\"personForm__item\">\r\n                <label>Prénom</label>\r\n                <input type=\"text\" placeholder=\"Votre prénom\" value={formData.firstname} name=\"firstname\" onChange={e => stateUpdate(e.target)} required />\r\n            </div>\r\n            <div className=\"personForm__item\">\r\n                <label>Nom</label>\r\n                <input type=\"text\" placeholder=\"Votre nom de famille\" value={formData.lastname} name=\"lastname\" onChange={e => stateUpdate(e.target)} required />\r\n            </div>\r\n            <div className=\"personForm__item\">\r\n                <label>Adresse Email</label>\r\n                <input type=\"email\" placeholder=\"-----@-----.---\" value={formData.address} name=\"address\" onChange={e => stateUpdate(e.target)} required />\r\n            </div>\r\n            <div className=\"personForm__item\">\r\n                <label>Actif</label>\r\n                <select onChange={e => stateUpdate(e.target)} value={formData.isActive} name=\"isActive\">\r\n                    <option value=\"true\">Oui</option>\r\n                    <option value=\"false\">Non</option>\r\n                </select>\r\n            </div>\r\n            <div className=\"personForm__item\">\r\n                <Button \r\n                    variant=\"contained\" \r\n                    color=\"primary\" \r\n                    type=\"submit\"\r\n                    value=\"Ajouter Personne\"\r\n                    style={{ borderRadius: 50 }} \r\n                    endIcon={<AddCircleOutlineIcon />}\r\n                    style={{backgroundColor: '#008080' }}\r\n                >\r\n                    Ajouter Personne\r\n                </Button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport './PersonList.css';\r\nimport $ from \"jquery\";\r\nimport Scrollbars from 'react-custom-scrollbars';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { putFormDataAsJson, deletePerson } from '../../api/PersonAPI';\r\nimport { convertFormDataToObject } from '../../utils/FormData';\r\nimport { getListOfFilteredID } from '../../utils/ListFilter';\r\n\r\n\r\n// Initialisation des valeurs de filtres\r\nconst initialFilteredPerson = {\r\n    id: '',\r\n    firstname: '',\r\n    lastname: '',\r\n    address: '',\r\n    isActive: ''\r\n}\r\n\r\nexport default function PersonList({ setPersonList, personList }) {\r\n    const classes = useStyles();\r\n    const [editedRowIndex, setEditedRowIndex] = useState(null);\r\n    const [filterOptions, setFilterOptions]  = useState(initialFilteredPerson);\r\n    const [filteredListPerson, setFilteredListPerson] = useState([]);\r\n\r\n    // Gestion du state stockant les valeurs de filtrage\r\n    const handleFormFilterInput = (e) => {\r\n        const { value, name } = e.target;\r\n        setFilterOptions(prevState => {\r\n            return {...prevState, [name]: value}\r\n        });\r\n    }\r\n\r\n    // permet de switcher sur le mode édition d'une ligne\r\n    const toggleIsEditing = (e) => {\r\n        if ($(e.currentTarget).attr('class').includes('editableIcon')) {\r\n            const personID = $($(e.currentTarget).parents()[3]).find('.personID').text();\r\n            const editableIndex = personList.findIndex(item => parseInt(item.id) === parseInt(personID));\r\n            setEditedRowIndex(editableIndex);\r\n        }\r\n    }   \r\n\r\n    // Element React pour la modification d'une ligne\r\n    const EditableRow = ({ value, name, type, lastRow }) => {\r\n        return (\r\n            <React.Fragment>\r\n            <div style={{ display: \"flex\", justifyContent: \"flex-start\", width: lastRow ? '70%' : '100%' }}>\r\n                <input\r\n                    className={`MuiTypography-root MuiTypography-h7 MuiTypography-displayInline`}\r\n                    defaultValue={value}\r\n                    name={name}\r\n                    type={type}\r\n                    style={{border: '#008080 solid 0.5px', width: '100%', margin: '2px'}}\r\n                />\r\n            </div>\r\n            </React.Fragment>\r\n        )\r\n    };\r\n\r\n    // Gérer le formulaire de la mise à jour d'une personne\r\n    const handleFormSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Récupérer les données du formulaire\r\n        const personID = $(e.currentTarget).find('.personID').find('input').attr('value');\r\n        const updateIndex = personList.findIndex(item => parseInt(item.id) === parseInt(personID));\r\n        const url = `person/${personID}`;\r\n\r\n        try {\r\n            // Requête PUT\r\n            const { formData, _} = convertFormDataToObject(e);\r\n            let responseData = await putFormDataAsJson({ formData, url });\r\n            console.log(responseData);\r\n\r\n            // Mise à jour de la liste des utilisateurs\r\n            setPersonList(prevState => {\r\n                return  [...prevState.slice(0, updateIndex), responseData, ...prevState.slice(updateIndex + 1)];\r\n            });\r\n\r\n            setEditedRowIndex(-1);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    // Initialisation du state stockant la liste filtrée\r\n    useEffect(() => {\r\n        setFilteredListPerson(personList);\r\n    }, [personList]);\r\n\r\n    // Appel à l'algorithme à chaque fois qu'une valeur de filtrage change\r\n    useEffect(() => {\r\n        const filteredID = getListOfFilteredID(filterOptions, personList);\r\n        console.log(typeof(filteredID[0]))\r\n        if (filteredID.length != 0) {\r\n            setFilteredListPerson(personList.filter((item, index) => filteredID.includes(String(item.id))));\r\n        }\r\n    }, [filterOptions]);\r\n\r\n    console.log(filteredListPerson);\r\n\r\n    return (\r\n        <>\r\n        <Scrollbars style={{ width: '70%', height: '100%' }} renderTrackHorizontal={props => <div {...props} style={{display: 'none'}} className=\"track-horizontal\"/>}>\r\n          <Grid item xs={16} md={12}>\r\n              <List className={classes.List}>\r\n                    <ListItem className={classes.listItem} style={{ backgroundColor: '#9AC2C980' }}>\r\n                        <ListItemText\r\n                            disableTypography\r\n                            primary={<Typography type=\"body2\" style={{ fontWeight: 700, width: 10, color: '#004040' }}>ID</Typography>}\r\n                            className={classes.listItemText}\r\n                        />\r\n                        <ListItemText\r\n                            disableTypography\r\n                            primary={<Typography type=\"body2\" style={{ fontWeight: 700, width: 10, color: '#004040' }}>Prénom</Typography>}\r\n                            className={classes.listItemText}\r\n                        />\r\n                        <ListItemText\r\n                            disableTypography\r\n                            primary={<Typography type=\"body2\" style={{ fontWeight: 700, width: 10, color: '#004040' }}>Nom</Typography>}\r\n                            className={classes.listItemText}\r\n                        />\r\n                        <ListItemText\r\n                            disableTypography\r\n                            primary={<Typography type=\"body2\" style={{ fontWeight: 700, width: 10, color: '#004040' }}>Adresse</Typography>}\r\n                            className={classes.listItemText}\r\n                        />\r\n                        <ListItemText\r\n                            disableTypography\r\n                            primary={<Typography type=\"body2\" style={{ fontWeight: 700, width: 10, color: '#004040', paddingRight: 30 }}>Actif</Typography>}\r\n                            className={classes.listItemText}\r\n                        />\r\n                        <ListItemSecondaryAction>\r\n                            <IconButton edge=\"end\" aria-label=\"delete\" type=\"submit\">\r\n                                <SendIcon \r\n                                    style={{display: \"none\"}} \r\n                                />\r\n                            </IconButton>\r\n                        </ListItemSecondaryAction>\r\n                        <ListItemSecondaryAction>\r\n                            <IconButton edge=\"end\" aria-label=\"delete\" type=\"submit\">\r\n                                <SendIcon \r\n                                    style={{display: \"none\"}} \r\n                                />\r\n                            </IconButton>\r\n                        </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                    <form className=\"filterForm\">\r\n                        <ListItem className={classes.listItem}>\r\n                            <ListItemText\r\n                                disableTypography\r\n                                primary={\r\n                                <div style={{ display: \"flex\", justifyContent: \"flex-start\", width: '100%' }}>\r\n                                    <input\r\n                                        className=\"MuiTypography-root MuiTypography-h7 MuiTypography-displayInline\"\r\n                                        defaultValue={filterOptions[\"id\"]}\r\n                                        onChange={handleFormFilterInput}\r\n                                        name={\"id\"}\r\n                                        style={{border: '#008080 solid 0.5px', width: '100%', margin: '2px'}}\r\n                                        placeholder=\"Filtrer\"\r\n                                    />\r\n                                </div>}\r\n                                className={classes.listItemText} \r\n                            />\r\n                            <ListItemText\r\n                                disableTypography\r\n                                primary={\r\n                                <div style={{ display: \"flex\", justifyContent: \"flex-start\", width: '100%' }}>\r\n                                    <input\r\n                                        className=\"MuiTypography-root MuiTypography-h7 MuiTypography-displayInline\"\r\n                                        defaultValue={filterOptions[\"firstname\"]}\r\n                                        onChange={handleFormFilterInput}\r\n                                        name={\"firstname\"}\r\n                                        style={{border: '#008080 solid 0.5px', width: '100%', margin: '2px'}}\r\n                                        placeholder=\"Filtrer\"\r\n                                    />\r\n                                </div>}\r\n                                className={classes.listItemText}\r\n                            />\r\n                            <ListItemText\r\n                                disableTypography\r\n                                primary={\r\n                                <div style={{ display: \"flex\", justifyContent: \"flex-start\", width: '100%' }}>\r\n                                    <input\r\n                                        className=\"MuiTypography-root MuiTypography-h7 MuiTypography-displayInline\"\r\n                                        defaultValue={filterOptions[\"lastname\"]}\r\n                                        onChange={handleFormFilterInput}\r\n                                        name={\"lastname\"}\r\n                                        style={{border: '#008080 solid 0.5px', width: '100%', margin: '2px'}}\r\n                                        placeholder=\"Filtrer\"\r\n                                    />\r\n                                </div>}\r\n                                className={classes.listItemText}\r\n                            />\r\n                            <ListItemText\r\n                                disableTypography\r\n                                primary={\r\n                                <div style={{ display: \"flex\", justifyContent: \"flex-start\", width: '100%' }}>\r\n                                    <input\r\n                                        className=\"MuiTypography-root MuiTypography-h7 MuiTypography-displayInline\"\r\n                                        defaultValue={filterOptions[\"address\"]}\r\n                                        onChange={handleFormFilterInput}\r\n                                        name={\"address\"}\r\n                                        style={{border: '#008080 solid 0.5px', width: '100%', margin: '2px'}}\r\n                                        placeholder=\"Filtrer\"    \r\n                                    />\r\n                                </div>}\r\n                                className={classes.listItemText}\r\n                            />\r\n                            <ListItemText\r\n                                disableTypography\r\n                                primary={\r\n                                <div style={{ display: \"flex\", justifyContent: \"flex-start\", width: '70%' }}>\r\n                                    <input\r\n                                        className=\"MuiTypography-root MuiTypography-h7 MuiTypography-displayInline\"\r\n                                        defaultValue={filterOptions[\"isActive\"]}\r\n                                        onChange={handleFormFilterInput}\r\n                                        name={\"isActive\"}\r\n                                        style={{border: '#008080 solid 0.5px', width: '100%', margin: '2px'}}\r\n                                        placeholder=\"Filtrer\"\r\n                                    />\r\n                                </div>}\r\n                                className={classes.listItemText}\r\n                            />\r\n                        </ListItem>\r\n                    </form>\r\n                {filteredListPerson.map((item, index) => (\r\n                    index === editedRowIndex ? ( \r\n                        <form className=\"editForm\" onSubmit={handleFormSubmit}>\r\n                            <ListItem className={classes.listItem}>\r\n                                <ListItemText\r\n                                    disableTypography\r\n                                    primary={<EditableRow value={item.id} name={\"id\"}/>}\r\n                                    className={`${classes.listItemText} personID`}\r\n                                />\r\n                                <ListItemText\r\n                                    disableTypography\r\n                                    primary={<EditableRow value={item.firstname} name={\"firstname\"} />}\r\n                                    className={classes.listItemText}\r\n                                />\r\n                                <ListItemText\r\n                                    disableTypography\r\n                                    primary={<EditableRow value={item.lastname} name={\"lastname\"} />}\r\n                                    className={classes.listItemText}\r\n                                />\r\n                                <ListItemText\r\n                                    disableTypography\r\n                                    primary={<EditableRow value={item.address} name={\"address\"} type={\"email\"}/>}\r\n                                    className={classes.listItemText}\r\n                                />\r\n                                <ListItemText\r\n                                    disableTypography\r\n                                    primary={<EditableRow value={item.isActive} name={\"isActive\"} lastRow={true} />}\r\n                                    className={classes.listItemText}\r\n                                />\r\n                                <ListItemSecondaryAction>\r\n                                    <IconButton edge=\"end\" aria-label=\"delete\" type=\"submit\">\r\n                                        <SendIcon \r\n                                            style={{fill: \"#008080\"}} \r\n                                        />\r\n                                    </IconButton>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                       </form>\r\n                        ) : (\r\n                    <ListItem className={classes.listItem}>\r\n                            <ListItemText\r\n                            disableTypography\r\n                            primary={<Typography type=\"body2\">{item.id}</Typography>}\r\n                            className={`${classes.listItemText} personID`}\r\n                            />\r\n                            <ListItemText\r\n                            disableTypography\r\n                            primary={<Typography type=\"body2\" >{item.firstname}</Typography>}\r\n                            className={classes.listItemText}\r\n                            />\r\n                            <ListItemText\r\n                            disableTypography\r\n                            primary={<Typography type=\"body2\">{item.lastname}</Typography>}\r\n                            className={classes.listItemText}\r\n                            />\r\n                            <ListItemText\r\n                            disableTypography\r\n                            primary={<Typography type=\"body2\">{item.address}</Typography>}\r\n                            className={classes.listItemText}\r\n                            />\r\n                            <ListItemText\r\n                            disableTypography\r\n                            primary={<Typography type=\"body2\">{item.isActive ? '1' : '0'}</Typography>}\r\n                            className={classes.listItemText}\r\n                            />\r\n                        <ListItemSecondaryAction>\r\n                        <IconButton edge=\"end\" aria-label=\"edit\">\r\n                            <EditIcon \r\n                                style={{fill: \"#008080\"}} \r\n                                onClick={toggleIsEditing}\r\n                                className=\"editableIcon\" \r\n                            />\r\n                        </IconButton>\r\n                        <IconButton edge=\"end\" aria-label=\"delete\">\r\n                            <CloseIcon \r\n                                style={{fill: \"#008080\"}} \r\n                                onClick={(e) => {\r\n                                    const personID = $($(e.currentTarget).parents()[3]).find('.personID').text();\r\n                                    deletePerson(e, personID).then(() => {\r\n                                        // Récuperer l'index de l'élément à supprimer\r\n                                        const removeIndex = personList.findIndex(item => item.id === parseInt(personID));\r\n                                    \r\n                                        // Faire une copie du state\r\n                                        const newArray = [...personList];\r\n                                    \r\n                                        // Supprimer l'élément du nouveau tableau\r\n                                        newArray.splice(removeIndex, 1);\r\n                                    \r\n                                        // Mettre à jour le state\r\n                                        setPersonList(newArray);\r\n                                    });\r\n                                }} \r\n                            />\r\n                        </IconButton>\r\n                        </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                    )\r\n                ))}\r\n              </List>\r\n          </Grid>\r\n        </Scrollbars>\r\n        </>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    listItem: {\r\n      backgroundColor: 'none',\r\n      \"&:hover\": {\r\n          backgroundColor: 'rgba(0,0,0,0.05);',\r\n          cursor: 'pointer'\r\n      },\r\n      padding: 4,\r\n    },\r\n    listItemText: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-start',\r\n        '&:nth-child(1)': {\r\n            width: '10%',\r\n            justifyContent: 'center',\r\n        },\r\n        '&:nth-child(2)': {\r\n            width: '20%'\r\n        },\r\n        '&:nth-child(3)': {\r\n            width: '20%'\r\n        },\r\n        '&:nth-child(4)': {\r\n            width: '30%'\r\n        },\r\n        '&:nth-child(5)': {\r\n            width: '20%',\r\n        }\r\n    },\r\n    button: {\r\n      margin: theme.spacing(1),\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n        minWidth: 32,\r\n        paddingLeft: 8,\r\n        paddingRight: 8,\r\n        marginBottom: 40,\r\n        cursor: \"pointer\",\r\n        \"& .MuiButton-startIcon\": {\r\n          margin: 0\r\n        }\r\n      }\r\n    },\r\n    buttonText: {\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n        display: \"none\"\r\n      },\r\n      display: \"flex\",\r\n      marginRight: 5\r\n    },\r\n    List: {\r\n        padding: 0,\r\n    },\r\n    Input: {\r\n        '&:nth-child(5)': {\r\n            width: '70%'\r\n        }\r\n    }\r\n}));","// Algorithme de filtrage de la liste\r\nexport const getListOfFilteredID = (filterOptions, list) => {\r\n    let counter = {}\r\n    list.map(item => counter[item.id] = 0);\r\n    list.map(item => {\r\n        Object.entries(item).map(val => {\r\n            if (String(val[1]).toLowerCase().startsWith(String(filterOptions[val[0]]).toLowerCase()) && String(filterOptions[val[0]]) != '') {\r\n                counter[item[\"id\"]] += 1;\r\n            }\r\n        });  \r\n    });\r\n    const numberOfFieldsFilled = Object.values(filterOptions).filter(Boolean).length;\r\n    counter = Object.entries(counter).filter(val => val[1] === numberOfFieldsFilled);\r\n    counter = Object.fromEntries(counter);\r\n    const idFiltered = Object.keys(counter);\r\n\r\n    return idFiltered;\r\n};","import './App.css';\nimport PersonForm from './components/PersonForm/PersonForm';\nimport PersonList from './components/PersonList/PersonList';\nimport { useState, useEffect } from 'react';\nimport { getAllPerson } from \"../src/api/PersonAPI\";\n\n// Objet de réinitialisation du formulaire d'ajout\nconst initialState = {\n  id: '',\n  firstname: '',\n  lastname: '',\n  address: '',\n  isActive: 'true'\n}\n\nfunction App() {\n  // State pour stocker toutes les personnes de la base de données\n  const [personList, setPersonList] = useState([]);\n  // State pour stocker les informations du formulaire d'ajout\n  const [formData, setFormData] = useState(initialState);\n\n  // Récupération de toutes les personnes au lancement de l'application\n  useEffect(() => {\n    getAllPerson()\n      .then(data => setPersonList(data));\n  }, []);\n\n  console.log(personList);\n  return (\n    <div className=\"App\">\n      <PersonForm setPersonList={setPersonList} setFormData={setFormData} formData={formData} style={{ backgroundColor: '#1169cf' }} initialState={initialState} />\n      <PersonList setFormData={setFormData} setPersonList={setPersonList} personList={personList} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}